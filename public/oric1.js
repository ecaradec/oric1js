//"use strict";

var basic11ROM = "4C CC EC 4C 71 C4 72 C9 91 C6 86 E9 D0 E9 15 CD 18 CD 11 CA 50 DA A0 DA DD D9 66 D9 84 DA A0 DA 54 C8 FC C7 08 C8 97 CE 3B CA 54 CD 7D D1 CD CC 88 CD 1B CB E4 C9 BC C9 6F CA 51 C9 C7 C9 11 CA 98 CA CD EB E6 EB 0B EC 20 EC 32 EC B4 FA CA FA E0 FA 9E FA FB EA FB EA FB EA EF EA EF EA EF EA EF EA EF EA EF EA EF EA FB EA FB EA 70 C9 C1 CA 57 D9 5A E8 08 E9 B9 D4 4E D9 AA CB 9F C9 47 C7 0C C7 45 CD 45 E9 12 CD ED C6 21 DF BD DF 49 DF 21 00 7E D4 A6 D4 B5 D9 FB 02 2E E2 4F E3 AF DC AA E2 8B E3 92 E3 DB E3 3F E4 38 D9 83 D9 D4 DD A6 D8 93 D5 D7 D8 B5 D8 16 D8 77 DE 0F DF 0B DF DA DA 3F DA 45 EC 2A D8 56 D8 61 D8 79 24 DB 79 0D DB 7B EF DC 7B E6 DD 7F 37 E2 50 E5 D0 46 E2 D0 7D 70 E2 5A 3B D0 64 12 D1 45 4E C4 45 44 49 D4 53 54 4F 52 C5 52 45 43 41 4C CC 54 52 4F CE 54 52 4F 46 C6 50 4F D0 50 4C 4F D4 50 55 4C CC 4C 4F 52 45 D3 44 4F 4B C5 52 45 50 45 41 D4 55 4E 54 49 CC 46 4F D2 4C 4C 49 53 D4 4C 50 52 49 4E D4 4E 45 58 D4 44 41 54 C1 49 4E 50 55 D4 44 49 CD 43 4C D3 52 45 41 C4 4C 45 D4 47 4F 54 CF 52 55 CE 49 C6 52 45 53 54 4F 52 C5 47 4F 53 55 C2 52 45 54 55 52 CE 52 45 CD 48 49 4D 45 CD 47 52 41 C2 52 45 4C 45 41 53 C5 54 45 58 D4 48 49 52 45 D3 53 48 4F 4F D4 45 58 50 4C 4F 44 C5 5A 41 D0 50 49 4E C7 53 4F 55 4E C4 4D 55 53 49 C3 50 4C 41 D9 43 55 52 53 45 D4 43 55 52 4D 4F D6 44 52 41 D7 43 49 52 43 4C C5 50 41 54 54 45 52 CE 46 49 4C CC 43 48 41 D2 50 41 50 45 D2 49 4E CB 53 54 4F D0 4F CE 57 41 49 D4 43 4C 4F 41 C4 43 53 41 56 C5 44 45 C6 50 4F 4B C5 50 52 49 4E D4 43 4F 4E D4 4C 49 53 D4 43 4C 45 41 D2 47 45 D4 43 41 4C CC A1 4E 45 D7 54 41 42 A8 54 CF 46 CE 53 50 43 A8 C0 41 55 54 CF 45 4C 53 C5 54 48 45 CE 4E 4F D4 53 54 45 D0 AB AD AA AF DE 41 4E C4 4F D2 BE BD BC 53 47 CE 49 4E D4 41 42 D3 55 53 D2 46 52 C5 50 4F D3 48 45 58 A4 A6 53 51 D2 52 4E C4 4C CE 45 58 D0 43 4F D3 53 49 CE 54 41 CE 41 54 CE 50 45 45 CB 44 45 45 CB 4C 4F C7 4C 45 CE 53 54 52 A4 56 41 CC 41 53 C3 43 48 52 A4 50 C9 54 52 55 C5 46 41 4C 53 C5 4B 45 59 A4 53 43 52 CE 50 4F 49 4E D4 4C 45 46 54 A4 52 49 47 48 54 A4 4D 49 44 A4 00 4E 45 58 54 20 57 49 54 48 4F 55 54 20 46 4F D2 53 59 4E 54 41 D8 52 45 54 55 52 4E 20 57 49 54 48 4F 55 54 20 47 4F 53 55 C2 4F 55 54 20 4F 46 20 44 41 54 C1 49 4C 4C 45 47 41 4C 20 51 55 41 4E 54 49 54 D9 4F 56 45 52 46 4C 4F D7 4F 55 54 20 4F 46 20 4D 45 4D 4F 52 D9 55 4E 44 45 46 27 44 20 53 54 41 54 45 4D 45 4E D4 42 41 44 20 53 55 42 53 43 52 49 50 D4 52 45 44 49 4D 27 44 20 41 52 52 41 D9 44 49 56 49 53 49 4F 4E 20 42 59 20 5A 45 52 CF 49 4C 4C 45 47 41 4C 20 44 49 52 45 43 D4 44 49 53 50 20 54 59 50 45 20 4D 49 53 4D 41 54 43 C8 53 54 52 49 4E 47 20 54 4F 4F 20 4C 4F 4E C7 46 4F 52 4D 55 4C 41 20 54 4F 4F 20 43 4F 4D 50 4C 45 D8 43 41 4E 27 54 20 43 4F 4E 54 49 4E 55 C5 55 4E 44 45 46 27 44 20 46 55 4E 43 54 49 4F CE 42 41 44 20 55 4E 54 49 CC 20 45 52 52 4F 52 00 20 49 4E 20 00 0D 0A 52 65 61 64 79 20 0D 0A 00 0D 0A 20 42 52 45 41 4B 00 BA E8 E8 E8 E8 BD 01 01 C9 8D D0 21 A5 B9 D0 0A BD 02 01 85 B8 BD 03 01 85 B9 DD 03 01 D0 07 A5 B8 DD 02 01 F0 07 8A 18 69 12 AA D0 D8 60 20 44 C4 85 A0 84 A1 38 A5 C9 E5 CE 85 91 A8 A5 CA E5 CF AA E8 98 F0 23 A5 C9 38 E5 91 85 C9 B0 03 C6 CA 38 A5 C7 E5 91 85 C7 B0 08 C6 C8 90 04 B1 C9 91 C7 88 D0 F9 B1 C9 91 C7 C6 CA C6 C8 CA D0 F2 60 0A 69 3E B0 40 85 91 BA E4 91 90 39 60 C4 A3 90 28 D0 04 C5 A2 90 22 48 A2 09 98 48 B5 C6 CA 10 FA 20 50 D6 A2 F7 68 95 D0 E8 30 FA 68 A8 68 C4 A3 90 06 D0 10 C5 A2 B0 0C 60 AD C0 02 29 FE 8D C0 02 4C A8 C4 A2 4D 20 2F C8 46 2E 20 F0 CB 20 D7 CC BD A8 C2 48 29 7F 20 D9 CC E8 68 10 F3 20 26 C7 A9 A6 A0 C3 20 B0 CC A4 A9 C8 F0 03 20 BA E0 4E 52 02 46 2E 4E F2 02 A9 B2 A0 C3 20 1A 00 20 2F C8 20 92 C5 86 E9 84 EA 20 E2 00 AA F0 F0 A2 FF 86 A9 90 06 20 FA C5 4C 0C C9 20 E2 CA 20 FA C5 84 26 20 B3 C6 90 44 A0 01 B1 CE 85 92 A5 9C 85 91 A5 CF 85 94 A5 CE 88 F1 CE 18 65 9C 85 9C 85 93 A5 9D 69 FF 85 9D E5 CF AA 38 A5 CE E5 9C A8 B0 03 E8 C6 94 18 65 91 90 03 C6 92 18 B1 91 91 93 C8 D0 F9 E6 92 E6 94 CA D0 F2 20 08 C7 20 5F C5 A5 35 F0 89 18 A5 9C 85 C9 65 26 85 C7 A4 9D 84 CA 90 01 C8 84 C8 20 F4 C3 A5 A0 A4 A1 85 9C 84 9D A4 26 88 B9 31 00 91 CE 88 10 F8 20 08 C7 20 5F C5 4C B7 C4 A5 9A A4 9B 85 91 84 92 18 A0 01 B1 91 F0 1D A0 04 C8 B1 91 D0 FB C8 98 65 91 AA A0 00 91 91 A5 92 69 00 C8 91 91 86 91 85 92 90 DD 60 CA 10 05 20 F0 CB A2 00 20 E8 C5 C9 01 D0 0D AC 69 02 B1 12 29 7F C9 20 B0 02 A9 09 48 20 D9 CC 68 C9 7F F0 DB C9 0D F0 30 C9 03 F0 28 C9 18 F0 0B C9 20 90 D3 95 35 E8 E0 4F 90 07 A9 5C 20 D9 CC D0 C0 E0 4C 90 C1 8A 48 98 48 20 9F FA 68 A8 68 AA 4C 94 C5 E6 17 A2 00 4C EA CB 20 3B 02 10 FB C9 0F D0 08 48 A5 2E 49 FF 85 2E 68 60 A6 E9 A0 04 84 2A B5 00 C9 20 F0 41 85 25 C9 22 F0 5F 24 2A 70 37 C9 3F D0 04 A9 BA D0 2F C9 30 90 04 C9 3C 90 27 84 E0 A0 00 84 26 A9 E9 85 18 A9 C0 85 19 86 E9 CA E8 E6 18 D0 02 E6 19 B5 00 38 F1 18 F0 F2 C9 80 D0 2F 05 26 A4 E0 E8 C8 99 30 00 B9 30 00 F0 39 38 E9 3A F0 04 C9 57 D0 02 85 2A 38 E9 63 D0 9F 85 25 B5 00 F0 E0 C5 25 F0 DC C8 99 30 00 E8 D0 F1 A6 E9 E6 26 B1 18 08 E6 18 D0 02 E6 19 28 10 F4 B1 18 D0 B2 B5 00 10 BB 99 32 00 A9 34 85 E9 60 20 E2 CA 20 B3 C6 90 16 6E F2 02 20 6C C7 4E F2 02 20 F0 CB A9 0B 20 D9 CC 68 68 4C B7 C4 4C 23 CA A9 00 85 1D 85 1E A5 9A A6 9B A0 01 85 CE 86 CF B1 CE F0 25 C8 C8 E6 1D D0 02 E6 1E A5 34 D1 CE 90 18 F0 03 88 D0 09 A5 33 88 D1 CE 90 0C F0 0A 88 B1 CE AA 88 B1 CE B0 D1 18 60 D0 FD A9 00 4E F4 02 A8 91 9A C8 91 9A A5 9A 18 69 02 85 9C A5 9B 69 00 85 9D 20 3A C7 A9 00 D0 2A A5 A6 A4 A7 85 A2 84 A3 A5 9C A4 9D 85 9E 84 9F 85 A0 84 A1 20 52 C9 A2 88 86 85 68 A8 68 A2 FE 9A 48 98 48 A9 00 85 AD 85 2B 60 18 A5 9A 69 FF 85 E9 A5 9B 69 FF 85 EA 60 08 20 E2 CA 20 B3 C6 28 F0 14 20 E8 00 F0 15 C9 CD D0 92 20 E2 00 F0 06 20 E2 CA F0 07 60 A9 FF 85 33 85 34 A0 01 B1 CE F0 4D 20 62 C9 C9 20 D0 0E 4E DF 02 AD DF 02 10 FB 20 62 C9 4E DF 02 C8 B1 CE AA C8 B1 CE C5 34 D0 04 E4 33 F0 02 B0 27 84 B8 48 20 F0 CB 68 20 C5 E0 A9 20 A4 B8 29 7F 20 D9 CC C8 F0 11 B1 CE D0 1E A8 B1 CE AA C8 B1 CE 86 CE 85 CF D0 AD 2C F2 02 10 01 60 20 F0 CB 20 2F C8 68 68 4C A8 C4 10 D6 38 E9 7F AA 84 B8 A0 00 A9 E9 85 18 A9 C0 85 19 CA F0 0D E6 18 D0 02 E6 19 B1 18 10 F6 4C E2 C7 C8 B1 18 30 AD 20 D9 CC 4C F2 C7 20 16 C8 4E F2 02 20 E8 00 4C 48 C7 20 16 C8 20 E8 00 20 AB CB 20 2F C8 60 2C F1 02 30 39 A5 30 8D 59 02 AD 58 02 85 30 38 6E F1 02 AD 56 02 4C 44 C8 2C F1 02 10 20 A5 30 8D 58 02 AD 59 02 85 30 4E F1 02 AD 57 02 85 31 38 E9 08 B0 FB 49 FF E9 06 18 65 31 85 32 60 A9 80 85 2B 20 1C CB 20 C6 C3 D0 05 8A 69 0F AA 9A 68 68 A9 09 20 37 C4 20 4E CA 18 98 65 E9 48 A5 EA 69 00 48 A5 A9 48 A5 A8 48 A9 C3 20 67 D0 20 06 CF 20 03 CF A5 D5 09 7F 25 D1 85 D1 A9 9E A0 C8 85 91 84 92 4C C0 CF A9 81 A0 DC 20 7B DE 20 E8 00 C9 CB D0 06 20 E2 00 20 03 CF 20 13 DF 20 B1 CF A5 B9 48 A5 B8 48 A9 8D 48 20 62 C9 A5 E9 A4 EA F0 06 85 AC 84 AD A0 00 B1 E9 D0 5B 4E 52 02 A0 02 B1 E9 18 D0 03 4C 8A C9 C8 B1 E9 85 A8 C8 B1 E9 85 A9 98 65 E9 85 E9 90 02 E6 EA 2C F4 02 10 13 48 A9 5B 20 FB CC A5 A9 A6 A8 20 C5 E0 A9 5D 20 FB CC 68 20 E2 00 20 15 C9 4C C1 C8 F0 49 E9 80 90 11 C9 42 B0 30 0A A8 B9 07 C0 48 B9 06 C0 48 4C E2 00 4C 1C CB C9 3A F0 C1 C9 C8 D0 0E 2C 52 02 10 13 20 B1 CA 4E 52 02 4C C1 C8 C9 27 D0 06 20 99 CA 4C C1 C8 4C 70 D0 38 A5 9A E9 01 A4 9B B0 01 88 85 B0 84 B1 60 60 AD DF 02 10 F9 29 7F A2 08 C9 03 D0 F2 C9 03 B0 01 18 D0 43 A5 E9 A4 EA F0 0C 85 AC 84 AD A5 A8 A4 A9 85 AA 84 AB 68 68 A9 BD A0 C3 A2 00 8E F1 02 8E DF 02 86 2E 90 03 4C 9D C4 4C A8 C4 D0 17 A2 D7 A4 AD D0 03 4C 7E C4 A5 AC 85 E9 84 EA A5 AA A4 AB 85 A8 84 A9 60 4C 36 D3 D0 03 4C 08 C7 20 0F C7 4C DC C9 A9 03 20 37 C4 A5 EA 48 A5 E9 48 A5 A9 48 A5 A8 48 A9 9B 48 20 E8 00 20 E5 C9 4C C1 C8 20 53 E8 20 51 CA A5 A9 C5 34 B0 0B 98 38 65 E9 A6 EA 90 07 E8 B0 04 A5 9A A6 9B 20 BD C6 90 1E A5 CE E9 01 85 E9 A5 CF E9 00 85 EA 60 D0 FD A9 FF 85 B9 20 C6 C3 9A C9 9B F0 0B A2 16 2C A2 5A 4C 7E C4 4C 70 D0 68 68 C0 0C F0 19 85 A8 68 85 A9 68 85 E9 68 85 EA 20 4E CA 98 18 65 E9 85 E9 90 02 E6 EA 60 68 68 68 60 A2 3A 2C A2 00 86 24 A0 00 84 25 A5 25 A6 24 85 24 86 25 B1 E9 F0 E4 C5 25 F0 E0 C8 C9 22 D0 F3 F0 E9 20 17 CF 20 E8 00 C9 97 F0 05 A9 C9 20 67 D0 A5 D0 D0 05 20 9E CA F0 B7 20 E8 00 B0 03 4C E5 C9 08 38 6E 52 02 28 4C 15 C9 20 51 CA F0 A1 A0 00 B1 E9 F0 0C C8 C9 C9 F0 F0 C9 C8 D0 F3 4C 3F CA 60 A0 FF C8 B1 E9 F0 04 C9 3A D0 F7 4C 3F CA 4C 70 D0 20 C8 D8 48 C9 9B F0 04 C9 97 D0 F1 C6 D4 D0 04 68 4C 17 C9 20 E2 00 20 E2 CA C9 2C F0 EE 68 60 A2 00 86 33 86 34 B0 F7 E9 2F 85 24 A5 34 85 91 C9 19 B0 D4 A5 33 0A 26 91 0A 26 91 65 33 85 33 A5 91 65 34 85 34 06 33 26 34 A5 33 65 24 85 33 90 02 E6 34 20 E2 00 4C E8 CA 20 88 D1 85 B8 84 B9 A9 D4 20 67 D0 A5 29 48 A5 28 48 20 17 CF 68 2A 20 09 CF D0 18 68 10 12 20 F4 DE 20 A9 D2 A0 00 A5 D3 91 B8 C8 A5 D4 91 B8 60 4C A9 DE 68 A0 02 B1 D3 C5 A3 90 17 D0 07 88 B1 D3 C5 A2 90 0E A4 D4 C4 9D 90 08 D0 0D A5 D3 C5 9C B0 07 A5 D3 A4 D4 4C 8D CB A0 00 B1 D3 20 A3 D5 A5 BF A4 C0 85 DE 84 DF 20 A4 D7 A9 D0 A0 00 85 BF 84 C0 20 05 D8 A0 00 B1 BF 91 B8 C8 B1 BF 91 B8 C8 B1 BF 91 B8 60 20 B3 CC 20 E8 00 F0 43 F0 5C C9 C2 F0 7B C9 C5 18 F0 76 C9 2C F0 50 C9 3B F0 6B C9 C6 D0 03 4C 59 CC 20 17 CF 24 28 30 D7 20 D5 E0 20 B5 D5 A0 00 B1 D3 18 65 30 C5 31 90 03 20 F0 CB 20 B3 CC 20 D4 CC D0 BE A0 00 94 35 A2 34 A5 30 48 A9 0D 20 D9 CC 68 2C F1 02 30 04 C5 31 F0 09 A9 00 85 30 A9 0A 20 D9 CC 60 A5 30 2C F1 02 30 04 38 ED 53 02 38 E9 08 B0 FC 49 FF 69 01 AA 18 65 30 C5 31 90 1F 20 F0 CB 4C 4B CC 08 20 C5 D8 C9 29 D0 20 28 90 0E 8A C5 31 90 03 4C 36 D3 38 E5 30 90 05 AA E8 CA D0 06 20 E2 00 4C AD CB 20 D4 CC D0 F2 4C 70 D0 2C F1 02 30 F8 AE 1F 02 F0 03 4C F7 EA 20 C5 D8 E0 28 B0 40 86 0C 20 65 D0 20 C8 D8 E8 E0 1C B0 33 AD 6A 02 48 29 FE 8D 6A 02 A9 00 20 01 F8 A5 0C 8D 69 02 8A 8D 68 02 20 0C DA A5 1F A4 20 85 12 84 13 68 8D 6A 02 A9 01 20 01 F8 A9 3B 20 67 D0 4C AD CB 4C C2 D8 20 B5 D5 20 D0 D7 AA A0 00 E8 CA F0 10 B1 91 20 D9 CC C8 C9 0D D0 F3 20 0B CC 4C BA CC 60 A9 0C 2C A9 11 2C A9 20 2C A9 3F 24 2E 30 33 48 C9 20 90 0B A5 30 C5 31 D0 03 20 F0 CB E6 30 68 2C F1 02 10 08 48 20 3E 02 68 29 FF 60 86 27 AA 20 7C F7 C9 20 90 04 C9 7F D0 05 AE 69 02 86 30 A6 27 29 FF 60 6C F5 02 A9 80 2C A9 00 8D F4 02 60 A5 2C F0 13 30 04 A0 FF D0 04 A5 AE A4 AF 85 A8 84 A9 A2 A8 4C 7E C4 A9 85 A0 CE 20 B0 CC A5 AC A4 AD 85 E9 84 EA 60 20 D2 D4 A2 36 A0 00 84 36 A9 40 20 8F CD 60 46 2E C9 22 D0 0B 20 25 D0 A9 3B 20 67 D0 20 B3 CC 20 D2 D4 A9 2C 85 34 A9 00 85 17 20 80 CD A5 35 D0 16 A5 17 F0 F1 18 4C 80 C9 20 D7 CC 20 D4 CC 4C 92 C5 A6 B0 A4 B1 A9 98 85 2C 86 B2 84 B3 20 88 D1 85 B8 84 B9 A5 E9 A4 EA 85 BA 84 BB A6 B2 A4 B3 86 E9 84 EA 20 E8 00 D0 1D 24 2C 50 0D 20 78 EB 10 FB 85 35 A2 34 A0 00 F0 08 30 71 20 D7 CC 20 80 CD 86 E9 84 EA 20 E2 00 24 28 10 31 24 2C 50 09 E8 86 E9 A9 00 85 24 F0 0C 85 24 C9 22 F0 07 A9 3A 85 24 A9 2C 18 85 25 A5 E9 A4 EA 69 00 90 01 C8 20 BB D5 20 0D D9 20 51 CB 4C 0E CE 20 E7 DF A5 29 20 39 CB 20 E8 00 F0 07 C9 2C F0 03 4C 1F CD A5 E9 A4 EA 85 B2 84 B3 A5 BA A4 BB 85 E9 84 EA 20 E8 00 F0 2C 20 65 D0 4C 95 CD 20 4E CA C8 AA D0 12 A2 2A C8 B1 E9 F0 69 C8 B1 E9 85 AE C8 B1 E9 C8 85 AF B1 E9 AA 20 3F CA E0 91 D0 DD 4C CE CD A5 B2 A4 B3 A6 2C 10 03 4C 5C C9 A0 00 B1 B2 F0 07 A9 74 A0 CE 4C B0 CC 60 3F 45 58 54 52 41 20 49 47 4E 4F 52 45 44 0D 0A 00 3F 52 45 44 4F 20 46 52 4F 4D 20 53 54 41 52 54 0D 0A 00 D0 04 A0 00 F0 03 20 88 D1 85 B8 84 B9 20 C6 C3 F0 04 A2 00 F0 66 9A 8A 18 69 04 48 69 06 85 93 68 A0 01 20 7B DE BA BD 09 01 85 D5 A5 B8 A4 B9 20 22 DB 20 A9 DE A0 01 20 4E DF BA 38 FD 09 01 F0 17 BD 0F 01 85 A8 BD 10 01 85 A9 BD 12 01 85 E9 BD 11 01 85 EA 4C C1 C8 8A 69 11 AA 9A 20 E8 00 C9 2C D0 F1 20 E2 00 20 9E CE 20 17 CF 18 24 38 24 28 30 03 B0 03 60 B0 FD A2 A8 4C 7E C4 A6 E9 D0 02 C6 EA C6 E9 A2 00 24 48 8A 48 A9 01 20 37 C4 20 00 D0 A9 00 85 BC 20 E8 00 38 E9 D3 90 17 C9 03 B0 13 C9 01 2A 49 01 45 BC C5 BC 90 61 85 BC 20 E2 00 4C 34 CF A6 BC D0 2C B0 7F 69 07 90 7B 65 28 D0 03 4C 67 D7 69 FF 85 91 0A 65 91 A8 68 D9 CC C0 B0 6B 20 06 CF 48 20 99 CF 68 A4 BA 10 17 AA F0 5A D0 63 46 28 8A 2A A6 E9 D0 02 C6 EA C6 E9 A0 1B 85 BC D0 D7 D9 CC C0 B0 4C 90 D9 B9 CE C0 48 B9 CD C0 48 20 AC CF A5 BC 4C 22 CF 4C 70 D0 A5 D5 BE CC C0 A8 68 85 91 68 85 92 E6 91 D0 02 E6 92 98 48 20 F4 DE A5 D4 48 A5 D3 48 A5 D2 48 A5 D1 48 A5 D0 48 6C 91 00 A0 FF 68 F0 23 C9 64 F0 03 20 06 CF 84 BA 68 4A 85 2D 68 85 D8 68 85 D9 68 85 DA 68 85 DB 68 85 DC 68 85 DD 45 D5 85 DE A5 D0 60 A9 00 85 28 20 E2 00 B0 03 4C E7 DF 20 16 D2 B0 6B C9 2E F0 F4 C9 23 F0 F0 C9 CD F0 58 C9 CC F0 E3 C9 22 D0 0F A5 E9 A4 EA 69 00 90 01 C8 20 B5 D5 4C 0D D9 C9 CA D0 13 A0 18 D0 3B 20 A9 D2 A5 D4 49 FF A8 A5 D3 49 FF 4C 99 D4 C9 C4 D0 03 4C 22 D5 C9 D6 90 03 4C A0 D0 20 62 D0 20 17 CF A9 29 2C A9 28 2C A9 2C A0 00 D1 E9 D0 03 4C E2 00 A2 10 4C 7E C4 A0 15 68 68 4C 73 CF 20 88 D1 85 D3 84 D4 A6 28 F0 05 A2 00 86 DF 60 A6 29 10 0D A0 00 B1 D3 AA C8 B1 D3 A8 8A 4C 99 D4 4C 7B DE 0A 48 AA 20 E2 00 E0 DB 90 24 E0 E7 90 23 20 62 D0 20 17 CF 20 65 D0 20 08 CF 68 AA A5 D4 48 A5 D3 48 8A 48 20 C8 D8 68 A8 8A 48 4C D3 D0 20 59 D0 68 A8 B9 DE BF 85 C4 B9 DF BF 85 C5 20 C3 00 4C 06 CF A0 FF 2C A0 00 84 26 20 A9 D2 A5 D3 45 26 85 24 A5 D4 45 26 85 25 20 D5 DE 20 A9 D2 A5 D4 45 26 25 25 45 26 A8 A5 D3 45 26 25 24 45 26 4C 99 D4 20 09 CF B0 13 A5 DD 09 7F 25 D9 85 D9 A9 D8 A0 00 20 4C DF AA 4C 5E D1 A9 00 85 28 C6 BC 20 D0 D7 85 D0 86 D1 84 D2 A5 DB A4 DC 20 D4 D7 86 DB 84 DC AA 38 E5 D0 F0 08 A9 01 90 04 A6 D0 A9 FF 85 D5 A0 FF E8 C8 CA D0 07 A6 D5 30 0F 18 90 0C B1 DB D1 D1 F0 EF A2 FF B0 02 A2 01 E8 8A 2A 25 2D F0 02 A9 FF 4C 24 DF 20 65 D0 AA 20 8D D1 20 E8 00 D0 F4 60 A2 00 20 E8 00 86 27 85 B4 20 E8 00 20 16 D2 B0 03 4C 70 D0 A2 00 86 28 86 29 20 E2 00 90 05 20 16 D2 90 0B AA 20 E2 00 90 FB 20 16 D2 B0 F6 C9 24 D0 06 A9 FF 85 28 D0 10 C9 25 D0 13 A5 2B 30 D0 A9 80 85 29 05 B4 85 B4 8A 09 80 AA 20 E2 00 86 B5 38 05 2B E9 28 D0 03 4C BB D2 24 2B 70 F9 A9 00 85 2B A5 9C A6 9D A0 00 86 CF 85 CE E4 9F D0 04 C5 9E F0 24 A5 B4 D1 CE D0 08 A5 B5 C8 D1 CE F0 6C 88 18 A5 CE 69 07 90 E1 E8 D0 DC C9 41 90 07 E9 5B 38 E9 A5 B0 00 60 68 48 C9 7E D0 0D BA BD 02 01 C9 D0 D0 05 A9 07 A0 E2 60 A5 9E A4 9F 85 CE 84 CF A5 A0 A4 A1 85 C9 84 CA 18 69 07 90 01 C8 85 C7 84 C8 20 F4 C3 A5 C7 A4 C8 C8 85 9E 84 9F A0 00 A5 B4 91 CE C8 A5 B5 91 CE A9 00 C8 91 CE C8 91 CE C8 91 CE C8 91 CE C8 91 CE A5 CE 18 69 02 A4 CF 90 01 C8 85 B6 84 B7 60 A5 26 0A 69 05 65 CE A4 CF 90 01 C8 85 C7 84 C8 60 90 80 00 00 00 20 E2 00 20 17 CF 20 06 CF A5 D5 30 0D A5 D0 C9 90 90 09 A9 97 A0 D2 20 4C DF D0 7E 4C 8C DF A5 2B D0 47 A5 27 05 29 48 A5 28 48 A0 00 98 48 A5 B5 48 A5 B4 48 20 9C D2 68 85 B4 68 85 B5 68 A8 BA BD 02 01 48 BD 01 01 48 A5 D3 9D 02 01 A5 D4 9D 01 01 C8 20 E8 00 C9 2C F0 D2 84 26 20 5F D0 68 85 28 68 85 29 29 7F 85 27 A6 9E A5 9F 86 CE 85 CF C5 A1 D0 04 E4 A0 F0 3F A0 00 B1 CE C8 C5 B4 D0 06 A5 B5 D1 CE F0 16 C8 B1 CE 18 65 CE AA C8 B1 CE 65 CF 90 D7 A2 6B 2C A2 35 4C 7E C4 A2 78 A5 27 D0 F7 A5 2B F0 02 38 60 20 86 D2 A5 26 A0 04 D1 CE D0 E1 4C EB D3 A5 2B F0 08 20 3D E9 A2 2A 4C 7E C4 20 86 D2 20 44 C4 A9 00 A8 85 E1 A2 05 A5 B4 91 CE 10 01 CA C8 A5 B5 91 CE 10 02 CA CA 86 E0 A5 26 C8 C8 C8 91 CE A2 0B A9 00 24 27 50 08 68 18 69 01 AA 68 69 00 C8 91 CE C8 8A 91 CE 20 4D D4 86 E0 85 E1 A4 91 C6 26 D0 DC 65 C8 B0 5D 85 C8 A8 8A 65 C7 90 03 C8 F0 52 20 44 C4 85 A0 84 A1 A9 00 E6 E1 A4 E0 F0 05 88 91 C7 D0 FB C6 C8 C6 E1 D0 F5 E6 C8 38 A5 A0 E5 CE A0 02 91 CE A5 A1 C8 E5 CF 91 CE A5 27 D0 62 C8 B1 CE 85 26 A9 00 85 E0 85 E1 C8 68 AA 85 D3 68 85 D4 D1 CE 90 0E D0 06 C8 8A D1 CE 90 07 4C 33 D3 4C 7C C4 C8 A5 E1 05 E0 18 F0 0A 20 4D D4 8A 65 D3 AA 98 A4 91 65 D4 86 E0 C6 26 D0 CA 85 E1 A2 05 A5 B4 10 01 CA A5 B5 10 02 CA CA 86 97 A9 00 20 56 D4 8A 65 C7 85 B6 98 65 C8 85 B7 A8 A5 B6 60 84 91 B1 CE 85 97 88 B1 CE 85 98 A9 10 85 CC A2 00 A0 00 8A 0A AA 98 2A A8 B0 A4 06 E0 26 E1 90 0B 18 8A 65 97 AA 98 65 98 A8 B0 93 C6 CC D0 E3 60 A5 28 F0 03 20 D0 D7 20 50 D6 38 A5 A2 E5 A0 A8 A5 A3 E5 A1 A2 00 86 28 4C 40 DF A2 00 86 28 85 D1 84 D2 A2 90 4C 2C DF 20 CB D8 8A F0 08 AC 58 02 2C F1 02 10 02 A4 30 A9 00 F0 DF C9 D9 D0 21 20 E2 00 A9 D4 20 67 D0 20 53 E8 A5 33 A4 34 85 22 84 23 60 A6 A9 E8 D0 FA A2 95 2C A2 E5 4C 7E C4 20 0D D5 20 D2 D4 20 62 D0 A9 80 85 2B 20 88 D1 20 06 CF 20 5F D0 A9 D4 20 67 D0 48 A5 B7 48 A5 B6 48 A5 EA 48 A5 E9 48 20 3C CA 4C 7D D5 A9 C4 20 67 D0 09 80 A2 80 86 2B 20 8F D1 85 BD 84 BE 4C 06 CF 20 0D D5 A5 BE 48 A5 BD 48 20 59 D0 20 06 CF 68 85 BD 68 85 BE A0 02 B1 BD 85 B6 AA C8 B1 BD F0 97 85 B7 C8 B1 B6 48 88 10 FA A4 B7 20 AD DE A5 EA 48 A5 E9 48 B1 BD 85 E9 C8 B1 BD 85 EA A5 B7 48 A5 B6 48 20 03 CF 68 85 BD 68 85 BE 20 E8 00 F0 03 4C 70 D0 68 85 E9 68 85 EA A0 00 68 91 BD 68 C8 91 BD 68 C8 91 BD 68 C8 91 BD 68 C8 91 BD 60 20 06 CF A0 00 20 D7 E0 68 68 A9 FF A0 00 F0 12 A6 D3 A4 D4 86 BF 84 C0 20 1E D6 86 D1 84 D2 85 D0 60 A2 22 86 24 86 25 85 DE 84 DF 85 D1 84 D2 A0 FF C8 B1 DE F0 0C C5 24 F0 04 C5 25 D0 F3 C9 22 F0 01 18 84 D0 98 65 DE 85 E0 A6 DF 90 01 E8 86 E1 A5 DF D0 0B 98 20 A3 D5 A6 DE A4 DF 20 B2 D7 A6 85 E0 91 D0 05 A2 C4 4C 7E C4 A5 D0 95 00 A5 D1 95 01 A5 D2 95 02 A0 00 86 D3 84 D4 84 DF 88 84 28 86 86 E8 E8 E8 86 85 60 46 2A 48 49 FF 38 65 A2 A4 A3 B0 01 88 C4 A1 90 11 D0 04 C5 A0 90 0B 85 A2 84 A3 85 A4 84 A5 AA 68 60 A2 4D A5 2A 30 B6 20 50 D6 A9 80 85 2A 68 D0 D0 A6 A6 A5 A7 86 A2 85 A3 A0 00 84 BE 84 BD A5 A0 A6 A1 85 CE 86 CF A9 88 A2 00 85 91 86 92 C5 85 F0 05 20 F1 D6 F0 F7 A9 07 85 C2 A5 9C A6 9D 85 91 86 92 E4 9F D0 04 C5 9E F0 05 20 E7 D6 F0 F3 85 C7 86 C8 A9 03 85 C2 A5 C7 A6 C8 E4 A1 D0 07 C5 A0 D0 03 4C 30 D7 85 91 86 92 A0 00 B1 91 AA C8 B1 91 08 C8 B1 91 65 C7 85 C7 C8 B1 91 65 C8 85 C8 28 10 D3 8A 30 D0 C8 B1 91 A0 00 0A 69 05 65 91 85 91 90 02 E6 92 A6 92 E4 C8 D0 04 C5 C7 F0 BA 20 F1 D6 F0 F3 B1 91 30 35 C8 B1 91 10 30 C8 B1 91 F0 2B C8 B1 91 AA C8 B1 91 C5 A3 90 06 D0 1E E4 A2 B0 1A C5 CF 90 16 D0 04 E4 CE 90 10 86 CE 85 CF A5 91 A6 92 85 BD 86 BE A5 C2 85 C4 A5 C2 18 65 91 85 91 90 02 E6 92 A6 92 A0 00 60 A5 BE 05 BD F0 F5 A5 C4 29 04 4A A8 85 C4 B1 BD 65 CE 85 C9 A5 CF 69 00 85 CA A5 A2 A6 A3 85 C7 86 C8 20 FB C3 A4 C4 C8 A5 C7 91 BD AA E6 C8 A5 C8 C8 91 BD 4C 54 D6 A5 D4 48 A5 D3 48 20 00 D0 20 08 CF 68 85 DE 68 85 DF A0 00 B1 DE 18 71 D3 90 05 A2 B5 4C 7E C4 20 A3 D5 20 A4 D7 A5 BF A4 C0 20 D4 D7 20 B6 D7 A5 DE A4 DF 20 D4 D7 20 F4 D5 4C 31 CF A0 00 B1 DE 48 C8 B1 DE AA C8 B1 DE A8 68 86 91 84 92 A8 F0 0A 48 88 B1 91 91 A4 98 D0 F8 68 18 65 A4 85 A4 90 02 E6 A5 60 20 08 CF A5 D3 A4 D4 85 91 84 92 20 05 D8 08 A0 00 B1 91 48 C8 B1 91 AA C8 B1 91 A8 68 28 D0 13 C4 A3 D0 0F E4 A2 D0 0B 48 18 65 A2 85 A2 90 02 E6 A3 68 86 91 84 92 60 C4 87 D0 0C C5 86 D0 08 85 85 E9 03 85 86 A0 00 60 20 CB D8 8A 48 A9 01 20 AB D5 68 A0 00 91 D1 68 68 4C F4 D5 20 8B D8 D1 BF 98 90 04 B1 BF AA 98 48 8A 48 20 AB D5 A5 BF A4 C0 20 D4 D7 68 A8 68 18 65 91 85 91 90 02 E6 92 98 20 B6 D7 4C F4 D5 20 8B D8 18 F1 BF 49 FF 4C 30 D8 A9 FF 85 D4 20 E8 00 C9 29 F0 06 20 65 D0 20 C8 D8 20 8B D8 F0 4B CA 8A 48 18 A2 00 F1 BF B0 B6 49 FF C5 D4 90 B1 A5 D4 B0 AD 20 5F D0 68 A8 68 85 C4 68 68 68 AA 68 85 BF 68 85 C0 A5 C4 48 98 48 A0 00 8A 60 20 AC D8 4C B6 D4 20 CD D7 A2 00 86 28 A8 60 20 AC D8 F0 08 A0 00 B1 91 A8 4C B6 D4 4C 36 D3 20 E2 00 20 03 CF 20 A2 D2 A6 D3 D0 F0 A6 D4 4C E8 00 20 AC D8 D0 03 4C B2 DB A6 E9 A4 EA 86 E0 84 E1 A6 91 86 E9 18 65 91 85 93 A6 92 86 EA 90 01 E8 86 94 A0 00 B1 93 48 A9 00 91 93 20 E8 00 20 E7 DF 68 A0 00 91 93 A6 E0 A4 E1 86 E9 84 EA 60 20 03 CF 20 22 D9 20 65 D0 4C C8 D8 A5 D5 30 9C A5 D0 C9 91 B0 96 20 8C DF A5 D3 A4 D4 84 33 85 34 60 A5 34 48 A5 33 48 20 22 D9 A0 00 B1 33 A8 68 85 33 68 85 34 4C B6 D4 20 16 D9 8A A0 00 91 33 60 20 03 CF 20 22 D9 A4 33 A6 34 A9 02 4C C9 EE 20 53 E8 A5 33 A4 34 85 1D 84 1E 20 65 D0 20 53 E8 A0 01 B9 33 00 91 1D 88 10 F8 60 20 22 D9 A0 01 B1 33 48 88 B1 33 A8 68 4C 40 DF 48 4A 4A 4A 4A 20 9C D9 68 29 0F 09 30 C9 3A 90 02 69 06 C9 30 D0 04 A4 2F F0 06 85 2F 9D 00 01 E8 60 20 22 D9 A2 00 86 2F A9 23 85 FF A5 34 20 93 D9 A5 33 20 93 D9 8A D0 06 A9 30 9D 00 01 E8 A9 00 9D 00 01 4C 9B D5 4C 70 D0 20 21 EC 20 C8 D8 8A F0 06 CA D0 F1 A9 09 2C A9 08 A2 10 8E F8 02 A2 1B 48 8A 20 0C DA AD F8 02 A0 27 91 1F 88 D0 FB 68 91 1F CA D0 EB 60 20 31 F7 84 20 18 69 80 48 85 1F A9 BB 65 20 85 20 68 60 4C C2 D8 20 F6 DA 20 C8 D8 E0 28 B0 F3 8E F8 02 20 65 D0 20 C8 D8 E0 1B B0 E6 E8 8A 20 0C DA 60 20 62 D0 20 22 DA 20 5F D0 AC F8 02 B1 1F A8 4C B6 D4 20 22 DA 20 65 D0 20 17 CF 24 28 10 1D 20 D0 D7 AA 18 AD F8 02 65 1F 90 02 E6 20 85 1F A0 00 E8 CA F0 10 B1 91 91 1F C8 D0 F6 20 CB D8 8A AC F8 02 91 1F 60 D0 17 A9 03 20 37 C4 A5 EA 48 A5 E9 48 A5 A9 48 A5 A8 48 A9 8B 48 4C C1 C8 4C 70 D0 A9 FF 85 B9 20 C6 C3 9A C9 8B F0 05 A2 F5 4C 7E C4 C0 10 D0 05 84 D0 98 D0 06 20 E8 00 20 17 CF 68 A5 D0 F0 05 68 68 68 68 60 68 85 A8 68 85 A9 68 85 E9 68 85 EA 4C 8C DA 20 78 EB 08 48 10 03 A9 01 2C A9 00 20 AB D5 68 28 10 04 A0 00 91 D1 68 68 4C F4 D5 AD C0 02 29 01 F0 05 A2 A3 4C 7E C4 60 60 A9 05 A0 E2 4C 22 DB 20 51 DD A5 D5 49 FF 85 D5 45 DD 85 DE A5 D0 4C 25 DB 20 54 DC 90 3C 20 51 DD D0 03 4C D5 DE A6 DF 86 C5 A2 D8 A5 D8 A8 F0 CE 38 E5 D0 F0 24 90 12 84 D0 A4 DD 84 D5 49 FF 69 00 A0 00 84 C5 A2 D0 D0 04 A0 00 84 DF C9 F9 30 C7 A8 A5 DF 56 01 20 6B DC 24 DE 10 57 A0 D0 E0 D8 F0 02 A0 D8 38 49 FF 65 C5 85 DF B9 04 00 F5 04 85 D4 B9 03 00 F5 03 85 D3 B9 02 00 F5 02 85 D2 B9 01 00 F5 01 85 D1 B0 03 20 02 DC A0 00 98 18 A6 D1 D0 4A A6 D2 86 D1 A6 D3 86 D2 A6 D4 86 D3 A6 DF 86 D4 84 DF 69 08 C9 28 D0 E4 A9 00 85 D0 85 D5 60 65 C5 85 DF A5 D4 65 DC 85 D4 A5 D3 65 DB 85 D3 A5 D2 65 DA 85 D2 A5 D1 65 D9 85 D1 4C F1 DB 69 01 06 DF 26 D4 26 D3 26 D2 26 D1 10 F2 38 E5 D0 B0 C7 49 FF 69 01 85 D0 90 0E E6 D0 F0 42 66 D1 66 D2 66 D3 66 D4 66 DF 60 A5 D5 49 FF 85 D5 A5 D1 49 FF 85 D1 A5 D2 49 FF 85 D2 A5 D3 49 FF 85 D3 A5 D4 49 FF 85 D4 A5 DF 49 FF 85 DF E6 DF D0 0E E6 D4 D0 0A E6 D3 D0 06 E6 D2 D0 02 E6 D1 60 A2 45 4C 7E C4 A2 94 B4 04 84 DF B4 03 94 04 B4 02 94 03 B4 01 94 02 A4 D7 94 01 69 08 30 E8 F0 E6 E9 08 A8 A5 DF B0 14 16 01 90 02 F6 01 76 01 76 01 76 02 76 03 76 04 6A C8 D0 EC 18 60 82 13 5D 8D DE 82 49 0F DA 9E 81 00 00 00 00 03 7F 5E 56 CB 79 80 13 9B 0B 64 80 76 38 93 16 82 38 AA 3B 20 80 35 04 F3 34 81 35 04 F3 34 80 80 00 00 00 80 31 72 17 F8 20 13 DF F0 02 10 03 4C 36 D3 A5 D0 E9 7F 48 A9 80 85 D0 A9 9B A0 DC 20 22 DB A9 A0 A0 DC 20 E4 DD A9 81 A0 DC 20 0B DB A9 86 A0 DC 20 FD E2 A9 A5 A0 DC 20 22 DB 68 20 76 E0 A9 AA A0 DC 20 51 DD D0 03 4C 50 DD 20 7C DD A9 00 85 95 85 96 85 97 85 98 A5 DF 20 1E DD A5 D4 20 1E DD A5 D3 20 1E DD A5 D2 20 1E DD A5 D1 20 23 DD 4C 64 DE D0 03 4C 3E DC 4A 09 80 A8 90 19 18 A5 98 65 DC 85 98 A5 97 65 DB 85 97 A5 96 65 DA 85 96 A5 95 65 D9 85 95 66 95 66 96 66 97 66 98 66 DF 98 4A D0 D6 60 85 91 84 92 A0 04 B1 91 85 DC 88 B1 91 85 DB 88 B1 91 85 DA 88 B1 91 85 DD 45 D5 85 DE A5 DD 09 80 85 D9 88 B1 91 85 D8 A5 D0 60 A5 D8 F0 1F 18 65 D0 90 04 30 1D 18 2C 10 14 69 80 85 D0 D0 03 4C B6 DB A5 DE 85 D5 60 A5 D5 49 FF 30 05 68 68 4C B2 DB 4C 39 DC 20 E5 DE AA F0 10 18 69 02 B0 F2 A2 00 86 DE 20 32 DB E6 D0 F0 E7 60 84 20 00 00 00 20 E5 DE A9 BE A0 DD A2 00 86 DE 20 7B DE 4C E7 DD 20 AF DC 20 E5 DE A9 77 A0 DC 20 7B DE 4C E7 DD 20 51 DD F0 76 20 F4 DE A9 00 38 E5 D0 85 D0 20 7C DD E6 D0 F0 AA A2 FC A9 01 A4 D9 C4 D1 D0 10 A4 DA C4 D2 D0 0A A4 DB C4 D3 D0 04 A4 DC C4 D4 08 2A 90 09 E8 95 98 F0 32 10 34 A9 01 28 B0 0E 06 DC 26 DB 26 DA 26 D9 B0 E6 30 CE 10 E2 A8 A5 DC E5 D4 85 DC A5 DB E5 D3 85 DB A5 DA E5 D2 85 DA A5 D9 E5 D1 85 D9 98 4C 24 DE A9 40 D0 CE 0A 0A 0A 0A 0A 0A 85 DF 28 4C 64 DE A2 85 4C 7E C4 A5 95 85 D1 A5 96 85 D2 A5 97 85 D3 A5 98 85 D4 4C 92 DB A9 7C A0 DC 85 91 84 92 A0 04 B1 91 85 D4 88 B1 91 85 D3 88 B1 91 85 D2 88 B1 91 85 D5 09 80 85 D1 88 B1 91 85 D0 84 DF 60 A2 CB 2C A2 C6 A0 00 F0 04 A6 B8 A4 B9 20 F4 DE 86 91 84 92 A0 04 A5 D4 91 91 88 A5 D3 91 91 88 A5 D2 91 91 88 A5 D5 09 7F 25 D1 91 91 88 A5 D0 91 91 84 DF 60 A5 DD 85 D5 A2 05 B5 D7 95 CF CA D0 F9 86 DF 60 20 F4 DE A2 06 B5 CF 95 D7 CA D0 F9 86 DF 60 A5 D0 F0 FB 06 DF 90 F7 20 2A DC D0 F2 4C F3 DB 20 A9 D2 46 D4 B0 04 A9 00 F0 15 A9 FF 30 11 A5 D0 F0 09 A5 D5 2A A9 FF B0 02 A9 01 60 20 13 DF 85 D1 A9 00 85 D2 A2 88 A5 D1 49 FF 2A A9 00 85 D4 85 D3 86 D0 85 DF 85 D5 4C 8D DB 85 D1 84 D2 A2 90 38 B0 E8 46 D5 60 85 93 84 94 A0 00 B1 93 C8 AA F0 BB B1 93 45 D5 30 B9 E4 D0 D0 21 B1 93 09 80 C5 D1 D0 19 C8 B1 93 C5 D2 D0 12 C8 B1 93 C5 D3 D0 0B C8 A9 7F C5 DF B1 93 E5 D4 F0 28 A5 D5 90 02 49 FF 4C 19 DF A5 D0 F0 4A 38 E9 A0 24 D5 10 09 AA A9 FF 85 D7 20 08 DC 8A A2 D0 C9 F9 10 06 20 54 DC 84 D7 60 A8 A5 D5 29 80 46 D1 05 D1 85 D1 20 6B DC 84 D7 60 A5 D0 C9 A0 B0 20 20 8C DF 84 DF A5 D5 84 D5 49 80 2A A9 A0 85 D0 A5 D4 85 24 4C 8D DB 85 D1 85 D2 85 D3 85 D4 A8 60 4C 81 E9 A0 00 A2 0A 94 CC CA 10 FB 90 13 C9 23 F0 EE C9 2D D0 04 86 D6 F0 04 C9 2B D0 05 20 E2 00 90 5B C9 2E F0 2E C9 45 D0 30 20 E2 00 90 17 C9 CD F0 0E C9 2D F0 0A C9 CC F0 08 C9 2B F0 04 D0 07 66 CF 20 E2 00 90 5C 24 CF 10 0E A9 00 38 E5 CD 4C 41 E0 66 CE 24 CE 50 C3 A5 CD 38 E5 CC 85 CD F0 12 10 09 20 C3 DD E6 CD D0 F9 F0 07 20 A7 DD C6 CD D0 F9 A5 D6 30 01 60 4C 71 E2 48 24 CE 10 02 E6 CC 20 A7 DD 68 38 E9 30 20 76 E0 4C 02 E0 48 20 E5 DE 68 20 24 DF A5 DD 45 D5 85 DE A6 D0 4C 25 DB A5 CD C9 0A 90 09 A9 64 24 CF 30 11 4C 39 DC 0A 0A 18 65 CD 0A 18 A0 00 71 E9 38 E9 30 85 CD 4C 28 E0 9B 3E BC 1F FD 9E 6E 6B 27 FD 9E 6E 6B 28 00 A9 AD A0 C3 20 D2 E0 A5 A9 A6 A8 85 D1 86 D2 A2 90 38 20 31 DF 20 D5 E0 4C B0 CC A0 01 A9 20 24 D5 10 02 A9 2D 99 FF 00 85 D5 84 E0 C8 A9 30 A6 D0 D0 03 4C F8 E1 A9 00 E0 80 F0 02 B0 09 A9 B5 A0 E0 20 ED DC A9 F7 85 CC A9 B0 A0 E0 20 4C DF F0 1E 10 12 A9 AB A0 E0 20 4C DF F0 02 10 0E 20 A7 DD C6 CC D0 EE 20 C3 DD E6 CC D0 DC 20 04 DB 20 8C DF A2 01 A5 CC 18 69 0A 30 09 C9 0B B0 06 69 FF AA A9 02 38 E9 02 85 CD 86 CC 8A F0 02 10 13 A4 E0 A9 2E C8 99 FF 00 8A F0 06 A9 30 C8 99 FF 00 84 E0 A0 00 A2 80 A5 D4 18 79 0D E2 85 D4 A5 D3 79 0C E2 85 D3 A5 D2 79 0B E2 85 D2 A5 D1 79 0A E2 85 D1 E8 B0 04 10 DE 30 02 30 DA 8A 90 04 49 FF 69 0A 69 2F C8 C8 C8 C8 84 B6 A4 E0 C8 AA 29 7F 99 FF 00 C6 CC D0 06 A9 2E C8 99 FF 00 84 E0 A4 B6 8A 49 FF 29 80 AA C0 24 D0 AA A4 E0 B9 FF 00 88 C9 30 F0 F8 C9 2E F0 01 C8 A9 2B A6 CD F0 2E 10 08 A9 00 38 E5 CD AA A9 2D 99 01 01 A9 45 99 00 01 8A A2 2F 38 E8 E9 0A B0 FB 69 3A 99 03 01 8A 99 02 01 A9 00 99 04 01 F0 08 99 FF 00 A9 00 99 00 01 A9 00 A0 01 60 80 00 00 00 00 FA 0A 1F 00 00 98 96 80 FF F0 BD C0 00 01 86 A0 FF FF D8 F0 00 00 03 E8 FF FF FF 9C 00 00 00 0A FF FF FF FF 20 E5 DE A9 05 A0 E2 20 7B DE F0 70 A5 D8 D0 03 4C B4 DB A2 BD A0 00 20 AD DE A5 DD 10 0F 20 BD DF A9 BD A0 00 20 4C DF D0 03 98 A4 24 20 D7 DE 98 48 20 AF DC A9 BD A0 00 20 ED DC 20 AA E2 68 4A 90 0A A5 D0 F0 06 A5 D5 49 FF 85 D5 60 81 38 AA 3B 29 07 71 34 58 3E 56 74 16 7E B3 1B 77 2F EE E3 85 7A 1D 84 1C 2A 7C 63 59 58 0A 7E 75 FD E7 C6 80 31 72 18 10 81 00 00 00 00 A9 7C A0 E2 20 ED DC A5 DF 69 50 90 03 20 FC DE 85 C5 20 E8 DE A5 D0 C9 88 90 03 20 99 DD 20 BD DF A5 24 18 69 81 F0 F3 38 E9 01 48 A2 05 B5 D8 B4 D0 95 D0 94 D8 CA 10 F5 A5 C5 85 DF 20 0E DB 20 71 E2 A9 81 A0 E2 20 13 E3 A9 00 85 DE 68 20 7E DD 60 85 E0 84 E1 20 A3 DE A9 C6 20 ED DC 20 17 E3 A9 C6 A0 00 4C ED DC 85 E0 84 E1 20 A0 DE B1 E0 85 D6 A4 E0 C8 98 D0 02 E6 E1 85 E0 A4 E1 20 ED DC A5 E0 A4 E1 18 69 05 90 01 C8 85 E0 84 E1 20 22 DB A9 CB A0 00 C6 D6 D0 E4 60 98 35 44 7A 68 28 B1 46 20 13 DF AA 30 18 A9 FA A0 00 20 7B DE 8A F0 E7 A9 47 A0 E3 20 ED DC A9 4B A0 E3 20 22 DB A6 D4 A5 D1 85 D4 86 D1 A9 00 85 D5 A5 D0 85 DF A9 80 85 D0 20 92 DB A2 FA A0 00 4C AD DE A9 07 A0 E4 20 22 DB 20 E5 DE A9 0C A0 E4 A6 DD 20 CC DD 20 E5 DE 20 BD DF A9 00 85 DE 20 0E DB A9 11 A0 E4 20 0B DB A5 D5 48 10 0D 20 04 DB A5 D5 30 09 A5 2D 49 FF 85 2D 20 71 E2 A9 11 A0 E4 20 22 DB 68 10 03 20 71 E2 A9 16 A0 E4 4C FD E2 20 A3 DE A9 00 85 2D 20 92 E3 A2 BD A0 00 20 88 E3 A9 C6 A0 00 20 7B DE A9 00 85 D5 A5 2D 20 03 E4 A9 BD A0 00 4C E4 DD 48 4C C4 E3 81 49 0F DA A2 83 49 0F DA A2 7F 00 00 00 00 05 84 E6 1A 2D 1B 86 28 07 FB F8 87 99 68 89 01 87 23 35 DF E1 86 A5 5D E7 28 83 49 0F DA A2 A1 54 46 8F 13 8F 52 43 89 CD A5 D5 48 10 03 20 71 E2 A5 D0 48 C9 81 90 07 A9 81 A0 DC 20 E4 DD A9 6F A0 E4 20 FD E2 68 C9 81 90 07 A9 07 A0 E4 20 0B DB 68 10 03 4C 71 E2 60 0B 76 B3 83 BD D3 79 1E F4 A6 F5 7B 83 FC B0 10 7C 0C 1F 67 CA 7C DE 53 CB C1 7D 14 64 70 4C 7D B7 EA 51 7A 7D 63 30 88 7E 7E 92 44 99 3A 7E 4C CC 91 C7 7F AA AA AA 13 81 00 00 00 00 20 35 E7 20 C9 E6 C9 24 D0 F9 8E B1 02 A2 09 20 C9 E6 9D A7 02 CA D0 F7 20 C9 E6 F0 0A E0 10 B0 F7 9D 93 02 E8 D0 F1 9D 93 02 20 94 E5 20 90 E7 8A D0 CD 60 AD A9 02 AC AA 02 85 33 84 34 A0 00 20 C9 E6 AE 5B 02 D0 05 91 33 4C 05 E5 D1 33 F0 08 EE 5C 02 D0 03 EE 5D 02 20 6C E5 90 E2 60 10 07 53 65 61 72 63 68 69 6E 67 20 2E 2E 00 10 07 4C 6F 61 64 69 6E 67 20 2E 2E 00 0A 0D 45 72 72 6F 72 73 20 66 6F 75 6E 64 0D 0A 00 10 07 46 6F 75 6E 64 20 2E 2E 00 10 07 56 65 72 69 66 79 69 6E 67 20 2E 2E 00 20 56 65 72 69 66 79 20 65 72 72 6F 72 73 20 64 65 74 65 63 74 65 64 0D 0A 00 A5 33 CD AB 02 A5 34 ED AC 02 E6 33 D0 02 E6 34 60 A9 0B A0 E5 20 EA E5 60 A9 45 A0 E6 20 EA E5 A9 7F A0 02 20 B6 E5 60 A9 38 A0 E5 4C AB E5 AD 5B 02 D0 07 A9 1A A0 E5 4C AB E5 A9 43 A0 E5 20 EA E5 A9 93 A0 02 20 B6 E5 60 20 65 F8 E8 A0 00 8C 5F 02 AD AE 02 F0 13 C8 2C AE 02 30 0D C8 2C AF 02 30 07 C8 2C B0 02 30 01 C8 B9 E5 E5 8D 5E 02 A9 5E A0 02 20 65 F8 60 42 43 53 49 52 20 F5 E5 A2 00 20 65 F8 E8 E8 60 48 AD 1F 02 D0 0A A2 22 A9 10 9D 80 BB CA 10 FA 68 60 20 5A E7 A9 24 20 5E E6 A2 09 BD A7 02 20 5E E6 CA D0 F7 BD 7F 02 F0 06 20 5E E6 E8 D0 F5 20 5E E6 A2 00 CA D0 FD 60 AD A9 02 AC AA 02 85 33 84 34 A0 00 B1 33 20 5E E6 20 6C E5 90 F6 60 10 07 53 61 76 69 6E 67 20 2E 2E 00 AD B1 02 F0 07 A9 27 A0 E5 20 B0 CC 60 85 2F 8A 48 98 48 20 C0 E6 18 A0 09 A9 00 F0 06 46 2F 08 69 00 28 20 8B E6 88 D0 F4 49 01 4A A0 04 20 8B E6 38 88 D0 F9 68 A8 68 AA 60 48 08 AD 4D 02 D0 0A 38 20 B2 E6 28 20 B2 E6 68 60 20 B2 E6 A2 0F 28 B0 02 A2 07 20 AB E6 68 60 20 C0 E6 CA D0 FA 60 A9 D0 A2 00 B0 02 0A E8 8D 06 03 8E 07 03 AD 04 03 2C 0D 03 50 FB 60 98 48 8A 48 20 1C E7 20 1C E7 B0 FB 20 FF E6 B0 16 A9 00 A0 08 20 FC E6 08 66 2F 28 69 00 88 D0 F4 20 FC E6 E9 00 4A 90 03 2E B1 02 68 AA 68 A8 A5 2F 60 20 1C E7 48 AD 4D 02 F0 15 20 1C E7 A2 02 90 02 A2 06 A9 00 20 1C E7 69 00 CA D0 F8 C9 04 68 60 48 AD 00 03 AD 0D 03 29 10 F0 F9 AD 09 03 48 A9 FF 8D 09 03 68 C9 FE 68 60 20 FC E6 66 2F A9 16 C5 2F D0 F5 AD 4D 02 F0 08 20 1C E7 20 1C E7 B0 FB A2 03 20 C9 E6 C9 16 D0 DF CA D0 F6 60 A2 02 A0 03 A9 16 20 5E E6 88 D0 F8 CA D0 F5 60 20 1A EE A0 06 78 BE 82 E7 B9 89 E7 9D 00 03 88 10 F4 A9 40 8D 00 03 60 05 04 0B 02 0C 08 0E 00 D0 C0 FF 10 F4 7F A0 00 A2 00 AD 7F 02 F0 15 B9 7F 02 D9 93 02 F0 01 E8 99 93 02 C8 C0 11 B0 04 48 68 D0 EB 60 4C 70 D0 A9 00 8D 4D 02 8D AD 02 8D AE 02 8D 5B 02 8D 5A 02 8D 5C 02 8D 5D 02 8D B1 02 20 17 CF 24 28 10 DC 20 D0 D7 AA A0 00 E8 CA F0 0A B1 91 99 7F 02 C8 C0 10 D0 F3 A9 00 99 7F 02 20 E8 00 F0 61 C9 2C D0 BA 20 E2 00 F0 58 C9 2C F0 F7 C9 C7 D0 05 8D AD 02 B0 EE C9 53 D0 05 8D 4D 02 B0 E5 C9 56 D0 05 8D 5B 02 B0 DC C9 4A D0 05 8D 5A 02 B0 D3 C9 41 F0 04 C9 45 D0 47 85 0E 20 E2 00 A2 80 8E AE 02 20 53 E8 A5 33 A4 34 A6 0E E0 41 D0 08 8D A9 02 8C AA 02 B0 A3 8D AB 02 8C AC 02 4C EC E7 60 20 03 CF 20 22 D9 18 60 08 20 B2 E7 AD AD 02 0D AE 02 D0 0A AD 5A 02 F0 08 AD 5B 02 F0 03 4C 70 D0 20 6A E7 20 7D E5 20 AC E4 2C AE 02 70 F8 AD 5A 02 F0 2C AD AE 02 D0 EE A5 9C A4 9D 38 E9 02 B0 01 88 8D A9 02 8C AA 02 38 E5 9A AA 98 E5 9B A8 18 8A 6D AB 02 8D AB 02 98 6D AC 02 8D AC 02 20 9B E5 20 E0 E4 20 3D E9 28 AD 5B 02 F0 11 AE 5C 02 AD 5D 02 20 C5 E0 A9 52 A0 E5 20 B0 CC 60 20 51 E6 AD AE 02 F0 0E AD AD 02 F0 08 AD B1 02 EA EA 6C A9 02 60 AE AB 02 AD AC 02 86 9C 85 9D 20 5F C5 AD AD 02 F0 08 AD B1 02 EA EA 4C 08 C7 20 08 C7 4C A8 C4 A5 9A A4 9B 8D A9 02 8C AA 02 A5 9C A4 9D 8D AB 02 8C AC 02 08 20 B2 E7 AD 5A 02 0D 5B 02 F0 03 4C 70 D0 20 6A E7 20 85 E5 20 07 E6 20 2E E6 20 3D E9 28 60 20 F5 E5 20 AA F9 4C E0 ED 20 53 E8 6C 33 00 A2 00 86 0C 86 0D F0 13 A2 03 0A 0A 0A 0A 0A 26 0C 26 0D 90 03 4C 39 DC CA 10 F3 20 E2 00 C9 80 B0 0E 09 80 49 B0 C9 0A 90 DE 69 88 C9 FA B0 D8 A5 0D A4 0C 60 20 4C E9 4C 40 DF 08 20 57 EA A9 40 8D AE 02 A5 28 8D AF 02 A5 29 8D B0 02 20 85 E5 20 07 E6 20 9E EA 20 2E E6 24 28 10 22 A0 00 B1 0C F0 17 AA A0 02 B1 0C 99 D0 00 88 D0 F8 E8 CA F0 08 B1 D1 20 5E E6 C8 D0 F5 20 42 EA 90 DE 20 3D E9 28 60 20 50 D6 08 20 57 EA 20 7D E5 20 AC E4 2C AE 02 50 F8 AD AF 02 45 28 D0 F1 AD B0 02 45 29 D0 EA 20 9B E5 A0 02 B1 CE CD A9 02 C8 B1 CE ED AA 02 B0 06 20 3D E9 4C 7C C4 20 9E EA 20 E0 E4 24 28 10 27 A0 00 B1 0C F0 1C 20 AB D5 A0 00 AA E8 CA F0 08 20 C9 E6 91 D1 C8 D0 F5 A0 02 B9 D0 00 91 0C 88 D0 F8 20 42 EA 90 D9 20 3D E9 20 51 E6 28 60 18 A9 03 65 0C 85 0C 90 02 E6 0D A8 A5 0D CC AB 02 ED AC 02 60 A9 40 85 2B 20 88 D1 A9 00 85 2B A0 03 B1 CE 8D AA 02 88 B1 CE 8D A9 02 D0 03 CE AA 02 CE A9 02 20 65 D0 A5 29 48 A5 28 48 20 B2 E7 68 85 28 68 85 29 AD 5B 02 0D AD 02 0D AE 02 0D 5A 02 F0 03 4C 70 D0 20 6A E7 60 18 A5 CE 6D A9 02 8D AB 02 A5 CF 6D AA 02 8D AC 02 A0 04 B1 CE 20 88 D2 8D A9 02 8C AA 02 85 0C 84 0D 60 3F FB 17 FC CF FB C7 F0 FC F0 0F F1 7E F3 1C F1 67 F2 2C F1 03 F2 0F F2 03 04 04 03 03 03 02 01 03 03 01 01 00 00 00 00 01 01 00 00 00 00 00 AD C0 02 29 01 D0 05 A2 A3 4C 7E C4 C0 4E B0 03 4C 70 D0 C0 66 B0 F9 98 38 E9 4E A8 B9 C2 EA 48 B9 C1 EA 48 98 4A A8 B9 D9 EA 48 B9 E5 EA 8D C3 02 A9 00 8D F0 02 20 03 CF AD C3 02 D0 06 20 22 D9 4C 3B EB A5 D0 C9 90 20 2A D9 AC F0 02 A5 33 99 E1 02 A5 34 99 E2 02 C8 C8 8C F0 02 68 A8 88 F0 08 98 48 20 65 D0 4C 26 EB A9 00 8D E0 02 68 AA 68 A8 A9 EB 48 A9 6D 48 98 48 8A 48 60 A9 01 2C E0 02 F0 F8 4C 36 D3 AD DF 02 10 0B 08 29 7F 48 A9 00 8D DF 02 68 28 60 C4 9D B0 02 38 60 D0 06 C5 9C 90 F9 F0 F7 20 B5 EB 90 F2 AA AD C0 02 29 02 08 8A 28 D0 E6 98 48 38 E9 1C A8 8A 20 B5 EB 68 A8 8A 60 CC C2 02 90 02 F0 01 60 CD C1 02 60 AC C2 02 AD C1 02 D0 01 88 38 E9 01 60 20 03 CF 20 22 D9 A5 33 A4 34 20 89 EB 90 03 4C 7C C4 85 A6 84 A7 4C 0F C7 AD 60 02 D0 F1 AD C0 02 48 29 01 F0 05 A2 A3 4C 7E C4 68 29 FD 8D C0 02 20 C1 EB 48 98 18 69 1C A8 68 4C E0 EB 20 C1 EB 20 89 EB B0 C9 48 AD C0 02 09 02 8D C0 02 68 4C E0 EB AD C0 02 A8 29 01 F0 09 98 29 FE 8D C0 02 20 67 F9 60 AD C0 02 48 29 02 F0 B9 68 09 01 8D C0 02 20 20 F9 60 20 62 D0 20 17 CF A5 34 48 A5 33 48 20 22 D9 A5 33 8D E1 02 A5 34 8D E2 02 68 85 33 68 85 34 20 65 D0 20 17 CF A5 34 48 A5 33 48 20 22 D9 A5 34 8D E4 02 A5 33 8D E3 02 68 85 33 68 85 34 20 C8 F1 AC E1 02 AD E0 02 29 01 D0 09 AD E2 02 20 99 D4 4C 5F D0 4C C2 D8 E6 E9 D0 02 E6 EA AD 60 EA C9 20 F0 F3 20 B9 EC 60 2C 60 EA 2C 60 EA 60 80 4F C7 52 58 C9 C8 F0 0E C9 27 F0 0A C9 3A B0 06 38 E9 30 38 E9 D0 60 D8 A2 FF 86 A9 9A A9 CC A0 EC 85 1B 84 1C A9 4C 85 1A 85 C3 85 21 8D FB 02 A9 36 A0 D3 85 22 84 23 8D FC 02 8C FD 02 8D F5 02 8C F6 02 A2 1C BD 9B EC 95 E1 CA D0 F8 A9 03 85 C2 8A 85 D7 85 87 85 2F 48 85 2E 8D F2 02 A2 88 86 85 A8 A9 02 8D C0 02 A9 28 8D 57 02 A9 50 8D 56 02 A9 00 85 30 8D 58 02 8D 59 02 20 3E C8 20 CE CC A9 96 A0 ED 20 B0 CC 20 F0 CB A2 00 A0 05 86 9A 84 9B A0 00 98 91 9A E6 9A D0 02 E6 9B 20 F0 C6 A5 9A A4 9B 20 44 C4 20 F0 CB A5 A6 38 E5 9A AA A5 A7 E5 9B 20 C5 E0 A9 88 A0 ED 20 B0 CC A9 B0 A0 CC 85 1B 84 1C A9 10 8D F8 02 4C A8 C4 00 00 20 42 59 54 45 53 20 46 52 45 45 0A 0D 00 4F 52 49 43 20 45 58 54 45 4E 44 45 44 20 42 41 53 49 43 20 56 31 2E 31 0D 0A 60 20 31 39 38 33 20 54 41 4E 47 45 52 49 4E 45 0D 0A 00 00 A2 00 A0 00 C4 10 D0 04 E4 11 F0 0F B1 0C 91 0E C8 D0 F1 E6 0D E6 0F E8 4C C8 ED 60 48 20 8C EE A9 00 A2 00 A0 03 20 AB EE A9 01 A0 19 20 AB EE A9 00 8D 71 02 AD 0B 03 29 7F 09 40 8D 0B 03 A9 C0 8D 0E 03 A9 10 8D 06 03 8D 04 03 A9 27 8D 07 03 8D 05 03 68 60 48 A9 40 8D 0E 03 68 60 48 AD 0D 03 29 40 F0 06 8D 0D 03 20 34 EE 68 4C 4A 02 48 8A 48 98 48 A0 00 B9 72 02 38 E9 01 99 72 02 C8 B9 72 02 E9 00 99 72 02 C8 C0 06 D0 E9 A9 00 20 9D EE C0 00 D0 10 A2 00 A0 03 20 AB EE 20 95 F4 8A 10 03 8E DF 02 A9 01 20 9D EE C0 00 D0 12 A2 00 A0 19 20 AB EE AD 71 02 49 01 8D 71 02 20 01 F8 68 A8 68 AA 68 60 48 98 48 A0 05 A9 00 99 72 02 88 10 FA 68 A8 68 60 48 0A A8 78 B9 72 02 BE 73 02 58 A8 68 60 48 8A 48 98 48 BA BD 03 01 0A A8 68 48 78 99 72 02 BD 02 01 99 73 02 58 68 A8 68 AA 68 60 20 AB EE 20 9D EE C0 00 D0 F9 E0 00 D0 F5 60 AD 13 02 8D 14 02 4E 12 02 6E 12 02 6E 12 02 60 48 98 48 20 DE EE 20 49 F0 20 24 F0 68 A8 68 60 D8 20 D8 EE 2C E2 02 10 0A A9 FF 4D E1 02 AA E8 8E E1 02 2C E4 02 10 0A A9 FF 4D E3 02 AA E8 8E E3 02 AD E1 02 CD E3 02 90 0F AE E1 02 F0 09 AD E3 02 20 40 EF 20 84 EF 60 AE E3 02 F0 09 AD E1 02 20 40 EF 20 5C EF 60 85 0D 8E 00 02 A9 00 85 0C 8D 01 02 20 C8 EF 20 FA EF A9 00 85 0E 85 0F 8D 00 02 60 2C E4 02 10 06 20 95 F0 4C 6A EF 20 89 F0 20 AC EF F0 0E 2C E2 02 10 06 20 B2 F0 4C 7D EF 20 A1 F0 20 16 F0 CA D0 D9 60 2C E2 02 10 06 20 B2 F0 4C 92 EF 20 A1 F0 20 AC EF F0 0E 2C E4 02 10 06 20 95 F0 4C A5 EF 20 89 F0 20 16 F0 CA D0 D9 60 D8 18 A5 0E 65 0C 85 0E A5 0F 65 0D 85 0F 24 0E 10 03 18 69 01 CD 00 02 8D 00 02 60 48 8A 48 98 48 A9 00 85 0E 85 0F A2 10 06 0C 26 0D 26 0E 26 0F A5 0E 38 ED 00 02 A8 A5 0F ED 01 02 90 06 E6 0C 84 0E 85 0F CA D0 E1 68 A8 68 AA 68 60 48 0E 00 02 2E 01 02 AD 00 02 38 E5 0E AD 01 02 E5 0F B0 06 E6 0C D0 02 E6 0D 68 60 2C 14 02 18 10 04 20 24 F0 38 2E 14 02 60 A0 00 B1 10 29 40 F0 1C AD 15 02 2C 12 02 30 0E 70 07 49 FF 31 10 91 10 60 11 10 91 10 60 70 04 51 10 91 10 60 D8 48 98 48 20 31 F7 18 69 00 85 10 98 69 A0 85 11 A9 00 85 0D 8D 01 02 86 0C A9 06 8D 00 02 20 C8 EF 18 A5 0C 65 10 85 10 A9 00 65 11 85 11 A9 20 A4 0E F0 04 4A 88 90 FA 8D 15 02 68 A8 68 60 18 A5 10 69 28 85 10 90 02 E6 11 60 38 A5 10 E9 28 85 10 B0 02 C6 11 60 4E 15 02 90 0B A9 20 8D 15 02 E6 10 D0 02 E6 11 60 0E 15 02 2C 15 02 50 0D A9 01 8D 15 02 A5 10 D0 02 C6 11 C6 10 60 A9 04 A2 E5 20 F8 F2 B0 28 AD E5 02 8D 12 02 A9 F0 A2 E1 20 F8 F2 B0 19 A9 C8 A2 E3 20 F8 F2 B0 10 AE E1 02 8E 19 02 AC E3 02 8C 1A 02 20 E8 EE 60 EE E0 02 60 20 0A F3 B0 0A AE 19 02 AC 1A 02 20 E8 EE 60 EE E0 02 60 20 0A F3 B0 04 20 F8 EE 60 EE E0 02 60 AE E2 02 D0 07 AE E1 02 8E 13 02 60 EE E0 02 60 AE E2 02 D0 3B AE E1 02 E0 20 90 34 E0 80 B0 30 A9 02 A2 E3 20 F8 F2 B0 27 A9 04 A2 E5 20 F8 F2 B0 1E AD 19 02 C9 EB B0 17 AD 1A 02 C9 C1 B0 10 20 71 F1 20 9B F1 AE 19 02 AC 1A 02 20 49 F0 60 EE E0 02 60 D8 AD E5 02 8D 12 02 20 DE EE AD E1 02 85 0C A9 00 85 0D A2 03 06 0C 26 0D CA D0 F9 AD E3 02 0A 0A 18 69 98 18 65 0D 85 0D 60 D8 A0 00 84 0F B1 0C 85 0E 20 5D F3 26 0E 26 0E A2 06 26 0E 90 03 20 24 F0 20 A1 F0 CA D0 F3 20 6E F3 20 89 F0 A4 0F C8 C0 08 D0 D7 60 A9 F0 A2 E1 20 F8 F2 B0 2F A9 C8 A2 E3 20 F8 F2 B0 26 AE E1 02 8E 19 02 AC E3 02 8C 1A 02 20 49 F0 A0 00 B1 10 2D 15 02 F0 05 A9 FF 4C F9 F1 A9 00 8D E1 02 8D E2 02 60 EE E0 02 60 A9 10 85 0C A9 00 85 0D 20 1C F2 60 A9 00 85 0C A9 01 85 0D 20 1C F2 60 A9 08 A2 E1 20 F8 F2 B0 3F 20 5D F3 AD E1 02 05 0C 8D 02 02 AE 1F 02 D0 12 A6 0D 9D 6B 02 A9 A8 18 65 0D AA A0 BB A9 1B 4C 51 F2 A9 00 18 65 0D AA A0 A0 A9 C8 8D 00 02 86 10 84 11 A9 01 8D 01 02 20 CD F2 20 6E F3 60 EE E0 02 60 D8 AD E3 02 8D 01 02 F0 58 A0 00 AD 19 02 38 E9 06 90 04 C8 4C 76 F2 98 18 6D E3 02 A8 AD E4 02 69 00 D0 3D C0 29 B0 39 AD E6 02 D0 34 AD E1 02 8D 00 02 F0 2C 18 6D 1A 02 A8 AD E2 02 69 00 D0 20 C0 C9 B0 1C C0 C8 D0 02 A0 00 8C 1A 02 AD E5 02 8D 02 02 20 CD F2 AC 1A 02 AE 19 02 20 49 F0 60 EE E0 02 60 D8 AD 02 02 A0 00 91 10 C8 CC 01 02 D0 F8 20 89 F0 CE 00 02 D0 EB 60 8D 04 02 BD 01 02 D0 0A BD 00 02 F0 05 CD 04 02 90 01 38 60 8D 04 02 BD 01 02 D0 08 BD 00 02 CD 04 02 90 01 38 60 A9 04 A2 E5 20 F8 F2 B0 49 18 AD E1 02 6D 19 02 8D 00 02 AD E2 02 69 00 8D 01 02 A2 00 A9 F0 20 F8 F2 B0 2E 18 AD E3 02 6D 1A 02 8D 02 02 AD E4 02 69 00 8D 03 02 A2 02 A9 C8 20 F8 F2 B0 13 AD E5 02 8D 12 02 AD 00 02 8D 19 02 AD 02 02 8D 1A 02 18 60 A5 10 8D 16 02 A5 11 8D 17 02 AD 15 02 8D 18 02 60 AD 16 02 85 10 AD 17 02 85 11 AD 18 02 8D 15 02 60 D8 AD E2 02 D0 3D AD E1 02 F0 38 AD 19 02 CD E1 02 90 30 18 6D E1 02 C9 F0 B0 28 AD 1A 02 CD E1 02 90 20 18 6D E1 02 C9 C8 B0 18 A2 E3 A9 04 20 F8 F2 B0 0F AD E3 02 8D 12 02 20 D8 EE 20 C6 F3 4C C5 F3 EE E0 02 60 20 5D F3 AD 1A 02 38 ED E1 02 A8 AE 19 02 20 49 F0 AD E1 02 85 0F 20 85 F4 A9 80 8D 1B 02 8D 1D 02 A9 00 8D 1C 02 AD E1 02 8D 1E 02 A9 00 85 0F 20 14 F4 20 44 F4 A5 0F F0 03 20 16 F0 AD 1C 02 D0 EA AD 1E 02 CD E1 02 D0 E2 20 6E F3 60 AD 1D 02 AE 1E 02 20 74 F4 A5 0C 18 6D 1B 02 8D 1B 02 AD 1C 02 85 0C 65 0D 8D 1C 02 C5 0C F0 0F B0 06 20 A1 F0 4C 3F F4 20 B2 F0 A9 01 85 0F 60 AD 1B 02 AE 1C 02 20 74 F4 38 AD 1D 02 E5 0C 8D 1D 02 AD 1E 02 85 0C E5 0D 8D 1E 02 C5 0C F0 0F B0 06 20 89 F0 4C 6F F4 20 95 F0 A9 01 85 0F 60 85 0C 86 0D A6 0E A5 0D 2A 66 0D 66 0C CA D0 F6 60 E6 0F A9 00 85 0E A9 01 0A E6 0E C5 0F 90 F9 60 48 08 98 48 D8 AD 08 02 10 1E 29 87 8D 10 02 AE 0A 02 20 61 F5 CD 10 02 D0 0E CE 0E 02 D0 33 AD 4F 02 8D 0E 02 4C C6 F4 AD 4E 02 8D 0E 02 20 23 F5 20 EF F4 AA 10 1D 48 AD 6A 02 29 08 D0 0F 68 48 C9 A0 90 06 20 14 FB 4C E3 F4 20 2A FB 68 4C E9 F4 A9 00 AA 68 A8 28 68 60 AD 09 02 A8 A9 00 C0 A4 F0 04 C0 A7 D0 03 18 69 40 18 6D 08 02 10 1C 29 7F AA BD 78 FF 2D 0C 02 10 03 38 E9 20 29 7F C0 A2 D0 06 C9 40 30 02 29 1F 09 80 60 A9 38 8D 0D 02 8D 08 02 8D 09 02 A9 7F 48 68 48 AA A9 07 20 61 F5 0D 0D 02 10 12 A2 00 A0 20 CC 0D 02 D0 01 E8 9D 08 02 68 48 9D 0A 02 38 68 6A 48 38 AD 0D 02 E9 08 8D 0D 02 10 D2 68 60 48 A9 0E 20 90 F5 68 29 07 AA 8D 11 02 09 B8 8D 00 03 A0 04 88 D0 FD AD 00 03 29 08 D0 0D CA 8A 29 07 AA CD 11 02 D0 E5 A9 00 60 8A 09 80 60 08 78 8D 0F 03 A8 8A C0 07 D0 02 09 40 48 AD 0C 03 09 EE 8D 0C 03 29 11 09 CC 8D 0C 03 AA 68 8D 0F 03 8A 09 EC 8D 0C 03 29 11 09 CC 8D 0C 03 28 60 08 78 8D 01 03 AD 00 03 29 EF 8D 00 03 AD 00 03 09 10 8D 00 03 28 AD 0D 03 29 02 F0 F9 AD 0D 03 60 CF CF CF CF A3 CF A6 CC 00 27 34 0F 66 99 60 CF A7 B3 CF A8 BE CF CF CF CF CF A5 A5 CF A4 84 CF 29 1F AA BD E2 F5 18 69 2F 8D 61 02 A9 00 69 F6 8D 62 02 AD 6A 02 48 29 FE 8D 6A 02 68 29 01 8D 51 02 A9 00 20 01 F8 38 A9 00 6C 61 02 CE 69 02 30 05 20 D7 F7 D0 40 A9 27 8D 69 02 AD 68 02 C9 01 F0 34 CE 68 02 38 A5 12 E9 28 85 12 B0 02 C6 13 4C FE F6 EE 69 02 A2 27 EC 69 02 10 19 20 0D F7 AD 68 02 CD 7E 02 F0 11 EE 68 02 18 A5 12 69 28 85 12 90 02 E6 13 4C FE F6 20 5D F3 A2 06 BD 77 02 95 0B CA D0 F8 20 C4 ED 20 6E F3 20 1A F7 4C FE F6 AE 7E 02 AD 7A 02 85 12 AD 7B 02 85 13 20 1A F7 18 A5 12 69 28 85 12 90 02 E6 13 CA D0 EF 20 0D F7 A9 01 8D 68 02 AD 7A 02 85 12 AD 7B 02 85 13 4C FE F6 20 0D F7 8E 53 02 4C FE F6 2A 2A 2A 2A 2A 2A 2A 2A 4D 6A 02 8D 6A 02 4C FE F6 AD 51 02 49 01 8D 51 02 4C FE F6 AD 0C 02 49 80 8D 0C 02 20 5A F7 4C FE F6 20 9F FA AD 6A 02 0D 51 02 8D 6A 02 A9 01 20 01 F8 60 A2 00 20 DE F7 D0 02 E8 E8 8E 69 02 60 A0 27 A9 20 91 12 88 10 FB A0 00 AD 6B 02 91 12 AD 6C 02 C8 91 12 60 A0 00 8C 63 02 8D 64 02 0A 2E 63 02 0A 2E 63 02 18 6D 64 02 90 03 EE 63 02 0A 2E 63 02 0A 2E 63 02 0A 2E 63 02 AC 63 02 60 AD 0C 02 10 07 A9 70 A0 F7 4C 6A F7 A9 76 A0 F7 A2 23 20 65 F8 60 07 43 41 50 53 00 07 20 20 20 20 00 48 08 98 48 8A 48 D8 E0 13 F0 46 E0 14 F0 42 E0 06 F0 3E AD 6A 02 29 02 F0 3A 8A C9 20 90 32 AD 6A 02 29 10 F0 13 8A 38 E9 40 30 09 29 1F 20 E4 F7 A9 1B D0 1C A9 20 10 F5 E0 7F F0 08 68 48 20 E4 F7 4C D0 F7 A9 08 20 02 F6 A9 20 20 E4 F7 A9 08 20 02 F6 68 AA 68 A8 28 68 60 AD 69 02 29 FE D0 05 AD 6A 02 29 20 60 48 AC 69 02 91 12 2C 6A 02 50 0B AD 69 02 18 69 28 A8 68 48 91 12 A9 09 20 02 F6 68 60 2D 6A 02 4A 6A 8D 65 02 AC 69 02 B1 12 29 7F 0D 65 02 91 12 60 A9 00 85 0C A9 B9 85 0D A9 00 20 2D F8 A0 BA 84 0D A9 20 20 2D F8 60 A0 00 48 20 54 F8 91 0C C8 68 48 20 52 F8 68 48 20 50 F8 91 0C C8 C0 00 F0 07 68 18 69 01 4C 2F F8 68 60 4A 4A 4A 4A 29 03 AA BD 61 F8 91 0C C8 91 0C C8 60 00 38 07 3F 85 0C 84 0D AD 1F 02 D0 0D A0 00 B1 0C F0 07 9D 80 BB E8 C8 D0 F5 60 4C 7C F7 4C 78 EB 4C C1 F5 4C 65 F8 4C 22 EE 4C B2 F8 40 A2 FF 9A 58 D8 A2 12 BD 7C F8 9D 38 02 CA 10 F7 A9 20 8D 4E 02 A9 04 8D 4F 02 20 14 FA 20 B8 F8 4C CC EC 20 B8 F8 4C 71 C4 20 AA F9 A9 07 A2 40 20 90 F5 20 E0 ED 20 0E F9 A9 FF 8D 0C 02 20 C9 F9 A2 05 20 82 F9 20 16 F8 20 5A F7 60 48 8A 48 A9 01 8D 1F 02 A9 BF 8D 7B 02 8D 79 02 A9 68 8D 7A 02 A9 90 8D 78 02 A9 03 8D 7E 02 A9 00 8D 7D 02 A9 50 8D 7C 02 A2 0C 20 38 02 68 AA 68 60 48 A9 03 8D 6A 02 A9 00 8D 6C 02 A9 17 8D 6B 02 68 60 48 AD 1F 02 D0 05 A2 0B 20 82 F9 A9 FE 2D 6A 02 8D 6A 02 A9 1E 8D DF BF A9 40 8D 00 A0 A2 17 20 82 F9 A9 00 8D 19 02 8D 1A 02 85 10 A9 A0 85 11 A9 20 8D 15 02 A9 FF 8D 13 02 20 DC F8 A9 01 0D 6A 02 8D 6A 02 68 60 48 A9 FE 2D 6A 02 8D 6A 02 A2 11 20 82 F9 20 C9 F9 A9 01 0D 6A 02 8D 6A 02 68 60 A0 06 BD 92 F9 99 0B 00 CA 88 D0 F6 20 C4 ED 60 78 FC 00 B5 00 03 00 B4 00 98 80 07 00 98 00 B4 80 07 00 A0 01 A0 3F 1F A9 FF 8D 03 03 A9 F7 8D 02 03 A9 B7 8D 00 03 A9 DD 8D 0C 03 A9 7F 8D 0E 03 A9 00 8D 0B 03 60 A9 1A 20 07 FA A9 20 A0 28 99 7F BB 88 D0 FA A9 00 8D 1F 02 A9 BB 8D 7B 02 8D 79 02 A9 A8 8D 7A 02 A9 D0 8D 78 02 A9 1B 8D 7E 02 A9 04 8D 7D 02 A9 10 8D 7C 02 A2 0C 20 38 02 20 5A F7 60 8D DF BF A9 02 A2 00 A0 03 20 C9 EE 60 A0 00 8C 60 02 8C 20 02 8C 00 05 84 0E 88 84 0C 8C 00 45 AD 00 05 D0 04 A9 C0 D0 05 EE 20 02 A9 40 85 0F C8 A9 03 85 0D E6 0C D0 02 E6 0D A5 0C C5 0E D0 06 A5 0D C5 0F F0 0F A9 AA 91 0C D1 0C D0 07 4A 91 0C D1 0C F0 DF 38 A5 0F E9 28 85 0F A5 0E C5 0C A5 0F E5 0D 90 09 A5 0C A4 0D EE 60 02 D0 04 A5 0E A4 0F 85 A6 84 A7 8D C1 02 8C C2 02 60 08 78 86 14 84 15 A0 00 B1 14 AA 98 48 20 90 F5 68 A8 C8 C0 0E D0 F1 28 60 A2 A7 A0 FA 20 86 FA 60 18 00 00 00 00 00 00 3E 10 00 00 00 0F 00 A2 BD A0 FA 20 86 FA 60 00 00 00 00 00 00 0F 07 10 10 10 00 08 00 A2 D3 A0 FA 20 86 FA 60 00 00 00 00 00 00 1F 07 10 10 10 00 18 00 A2 06 A0 FB 20 86 FA A9 00 AA 8A 48 A9 00 20 90 F5 A2 00 CA D0 FD 68 AA E8 E0 70 D0 ED A9 08 A2 00 20 90 F5 60 00 00 00 00 00 00 00 3E 0F 00 00 00 00 00 A2 1C A0 FB 20 86 FA 60 1F 00 00 00 00 00 00 3E 10 00 00 1F 00 00 A2 32 A0 FB 20 86 FA 60 2F 00 00 00 00 00 00 3E 10 00 00 1F 00 00 AD E1 02 C9 01 D0 22 A9 00 AE E3 02 20 90 F5 A9 01 AE E4 02 20 90 F5 AD E5 02 29 0F D0 04 A2 10 D0 01 AA A9 08 20 90 F5 60 C9 02 D0 22 A9 02 AE E3 02 20 90 F5 A9 03 AE E4 02 20 90 F5 AD E5 02 29 0F D0 04 A2 10 D0 01 AA A9 09 20 90 F5 60 C9 03 D0 22 A9 04 AE E3 02 20 90 F5 A9 05 AE E4 02 20 90 F5 AD E5 02 29 0F D0 04 A2 10 D0 01 AA A9 0A 20 90 F5 60 A9 06 AE E3 02 20 90 F5 AD E1 02 C9 04 F0 93 C9 05 F0 B5 C9 06 F0 D7 EE E0 02 60 AD E3 02 0A 0A 0A 0D E1 02 49 3F AA A9 07 20 90 F5 18 AD E7 02 0A 8D E7 02 AD E8 02 2A 8D E8 02 A9 0B AE E7 02 20 90 F5 A9 0C AE E8 02 20 90 F5 AD E5 02 29 07 A8 B9 10 FC AA A9 0D 20 90 F5 60 00 00 04 08 0A 0B 0C 0D A2 E1 A9 04 20 E4 F2 B0 39 A2 E3 A9 08 20 F8 F2 B0 30 A2 E5 A9 0D 20 E4 F2 B0 27 AC E3 02 AE E5 02 BD 5E FC 8D E4 02 BD 6B FC 8D E3 02 AD E7 02 8D E5 02 88 30 09 4E E4 02 6E E3 02 4C 4B FC 4C 40 FB EE E0 02 60 00 07 07 06 06 05 05 05 04 04 04 04 03 00 77 0B A6 47 EC 97 47 FB B3 70 30 F4 00 00 00 00 00 00 00 00 08 08 08 08 08 00 08 00 14 14 14 00 00 00 00 00 14 14 3E 14 3E 14 14 00 08 1E 28 1C 0A 3C 08 00 30 32 04 08 10 26 06 00 10 28 28 10 2A 24 1A 00 08 08 08 00 00 00 00 00 08 10 20 20 20 10 08 00 08 04 02 02 02 04 08 00 08 2A 1C 08 1C 2A 08 00 00 08 08 3E 08 08 00 00 00 00 00 00 00 08 08 10 00 00 00 3E 00 00 00 00 00 00 00 00 00 04 00 00 00 02 04 08 10 20 00 00 1C 22 26 2A 32 22 1C 00 08 18 08 08 08 08 1C 00 1C 22 02 04 08 10 3E 00 3E 02 04 0C 02 22 1C 00 04 0C 14 24 3E 04 04 00 3E 20 3C 02 02 22 1C 00 0C 10 20 3C 22 22 1C 00 3E 02 04 08 10 10 10 00 1C 22 22 1C 22 22 1C 00 1C 22 22 1E 02 04 18 00 00 00 08 00 00 08 00 00 00 00 08 00 00 08 08 10 04 08 10 20 10 08 04 00 00 00 3E 00 3E 00 00 00 10 08 04 02 04 08 10 00 1C 22 04 08 08 00 08 00 1C 22 2A 2E 2C 20 1E 00 08 14 22 22 3E 22 22 00 3C 22 22 3C 22 22 3C 00 1C 22 20 20 20 22 1C 00 3C 22 22 22 22 22 3C 00 3E 20 20 3C 20 20 3E 00 3E 20 20 3C 20 20 20 00 1E 20 20 20 26 22 1E 00 22 22 22 3E 22 22 22 00 1C 08 08 08 08 08 1C 00 02 02 02 02 02 22 1C 00 22 24 28 30 28 24 22 00 20 20 20 20 20 20 3E 00 22 36 2A 2A 22 22 22 00 22 22 32 2A 26 22 22 00 1C 22 22 22 22 22 1C 00 3C 22 22 3C 20 20 20 00 1C 22 22 22 2A 24 1A 00 3C 22 22 3C 28 24 22 00 1C 22 20 1C 02 22 1C 00 3E 08 08 08 08 08 08 00 22 22 22 22 22 22 1C 00 22 22 22 22 22 14 08 00 22 22 22 2A 2A 36 22 00 22 22 14 08 14 22 22 00 22 22 14 08 08 08 08 00 3E 02 04 08 10 20 3E 00 1E 10 10 10 10 10 1E 00 00 20 10 08 04 02 00 00 3C 04 04 04 04 04 3C 00 08 14 2A 08 08 08 08 00 0E 10 10 10 3C 10 3E 00 0C 12 2D 29 29 2D 12 0C 00 00 1C 02 1E 22 1E 00 20 20 3C 22 22 22 3C 00 00 00 1E 20 20 20 1E 00 02 02 1E 22 22 22 1E 00 00 00 1C 22 3E 20 1E 00 0C 12 10 3C 10 10 10 00 00 00 1C 22 22 1E 02 1C 20 20 3C 22 22 22 22 00 08 00 18 08 08 08 1C 00 04 00 0C 04 04 04 24 18 20 20 22 24 38 24 22 00 18 08 08 08 08 08 1C 00 00 00 36 2A 2A 2A 22 00 00 00 3C 22 22 22 22 00 00 00 1C 22 22 22 1C 00 00 00 3C 22 22 3C 20 20 00 00 1E 22 22 1E 02 02 00 00 2E 30 20 20 20 00 00 00 1E 20 1C 02 3C 00 10 10 3C 10 10 12 0C 00 00 00 22 22 22 26 1A 00 00 00 22 22 22 14 08 00 00 00 22 22 2A 2A 36 00 00 00 22 14 08 14 22 00 00 00 22 22 22 1E 02 1C 00 00 3E 04 08 10 3E 00 0E 18 18 30 18 18 0E 00 08 08 08 08 08 08 08 08 38 0C 0C 06 0C 0C 38 00 2A 15 2A 15 2A 15 2A 15 3F 3F 3F 3F 3F 3F 3F 3F 37 EA ED EB 20 F5 F9 38 EE F4 36 39 2C E9 E8 EC 35 F2 E2 3B 2E EF E7 30 F6 E6 34 2D 0B F0 E5 2F 00 00 00 00 00 00 00 00 31 1B FA 00 08 7F E1 0D F8 F1 32 5C 0A 5D F3 00 33 E4 E3 27 09 5B F7 3D 26 4A 4D 4B 20 55 59 2A 4E 54 5E 28 3C 49 48 4C 25 52 42 3A 3E 4F 47 29 56 46 24 5F 0B 50 45 3F 00 00 00 00 00 00 00 00 21 1B 5A 00 08 7F 41 0D 58 51 40 7C 0A 7D 53 00 23 44 43 22 09 7B 57 2B D0 01 47 02 8F F8 44 02";

var rom = basic11ROM.split(" ");

function hex(n,p) {
    if(p==undefined) p = 2;
    if(n==undefined) return "XX";
    
    var tmp = pad(n.toString(16).toUpperCase(), p);
    if(tmp.length == 3)
        return "0"+tmp;
    return tmp;
}

var dumpAt = 0x0;
var dumpWhere = 0x200;
var breakpoint = 0xF7B2;
var writeBreakpoint = 0x13;

var memory = Array(0xFFFF);
for(var i=0;i<0xFFFF;i+=256) {
    for(var j=0;j<0x128;j++) {
        memory[i+j] = 0x0; //0xea; // fill with NOP
        memory[i+j+128] = 0xff; //0xea; // fill with NOP
    }
}

var z=0;
for(var i in rom) {
    memory[+z+0xC000] = parseInt(rom[z],16);
    z++;
}

var logInstruction = false;
var logWrite = false;
var logRead = false;

/*
var logInstruction = process.argv.indexOf('-v')!=-1;
var logWrite = process.argv.indexOf('-w')!=-1;
var logRead = process.argv.indexOf('-r')!=-1;
*/


//var PC = 0xC000;
var PC = memory[0xfffc]+(memory[0xfffd]<<8);

var SP = 0x0;
var A = 0;
var X = 0;
var Y = 0;

var C = 0;
var Z = 0;
var I = 1;
var D = 0;
var B = 0;
var V = 0;
var N = 0;

var cycles = 0;
var icycles = 0;

var str="";

function pad(n, width, z) {
  z = z || '0';
  n = n + '';
  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;
}

function toBin(v) {
    if(v==undefined) v = 0;
    return pad(v.toString(2), 8, "0").replace(/0/g,'_').replace(/1/g,'#');
}

var p8912 = {
    registers:[]
};
p8912.registers.fill(0,0,0xF);


var _300 = 0;
var _30f = 0xfd;


//
// VIA 6522
//
var VIA = {
    ira: 0,
    ier: 0,
    ifr: 0,
    ddrb: 0,
    ddra: 0,
    acr: 0,
    pcr: 0,
    orb: 0,
    porta: 0,
    portb: 0,
    write: function(addr, value) {
        value = value&0xff;
        switch(addr) {
            case 0:
                // port b (in/out)
                this.orb = value;
                this.portb = (this.orb & this.ddrb) | (this.portb & ((~this.ddrb)&0xff));
                if( (this.pcr&0xe0 == 0x20) ||
                    (this.pcr&0xe0 == 0x60) ) {
                    this.ifr &= 0xef;
                } else {
                    this.ifr &= 0xe7;
                }

                break;
            case 1:
                // port a (in/out)
                // port a directly address columns of keyboard grid (3 lowest bits )
                this.ora = value;
                this.porta = (this.ora & this.ddra) | (this.porta & ((~this.ddra)&0xff));
                if( (this.pcr & 0x0e) == 0x02 || (this.pcr & 0x0e) == 0x06 )
                    this.ifr &= 0xfd;
                else
                    this.ifr &= 0xfc;
                this.idr |= 0x0e;

                break;
            case 2:
                // define port b input / output. output if set. each bit count
                this.ddrb = value;
                break;
            case 3:
                // define port a input / output. output if set. each bit count
                this.ddra = value;
                break;
            case 12:
                // peripheral control register
                this.pcr = value;
                if(this.pcr == 1)
                    this.ifr |= 2;
                if((this.pcr & 0x0e) == 0x04)
                    this.ifr |= 1;
                if(this.pcr & 0x10)
                    this.ifr |= 0x10;
                if((this.pcr & 0xe0) == 0x40)
                    this.ifr |= 0x08;
                break;
            case 13:
                // interrupt flag register
                this.ifr&=~value;
                break;
            case 14:
                // interrupt enable register
                if(value & 0x80) {
                    this.ier |= value;
                } else {
                    this.ier &= ((~value)&0xff);
                }
                this.ier &= 0x7f;
                break;
            case 15:
                // the column to write of 8912 is written here
                
                // direct porta read / write
                this.ora = value;
                this.porta = (this.ora & this.ddra) | (this.porta & ((~this.ddra)&0xff));
                break;
        }
    },
    read: function(addr, value) {
        switch(addr) {
            case 0:
                if((this.pcr & 0xe0) == 0x020 || (this.pcr & 0xe0) == 0x60) {
                    this.ifr &= 0xef;
                } else {
                    this.ifr &= 0xe7;
                }

                var r = this.orb & this.ddrb;
  
                if(this.acr & 0x02) {
                    r |= this.irb & ((~this.ddrb)&0xff);
                } else {
                    r |= this.portb & ((~this.ddrb)&0xff);
                }

                return r;
            case 1:
                if((this.pcr & 0x0e) == 0x2 ||
                   (this.pcr & 0x0e == 0x6))
                    this.ifr &= 0xfd;
                else
                    this.ifr &= 0xfc;

                if(this.acr == 1) {
                    return this.ira;
                } else {
                    return this.porta;
                }
            case 2:
                return this.ddrb;
            case 1:
                return this.ddra;
            case 12:
                return this.pcr;
//            case 13:
//                return this.ifr | 0x80;
            case 14:
                return this.ier | 0x80;
            case 15:
                if(this.acr & 1) {
                    return this.ira;
                } else {
                    return this.porta;
                }
        }
        return 0xff;
    },
};


var c = 0x08;
var addr_space = {
    write:function(addr, src) {
        icycles ++;

        if(addr>=0x300 && addr<0x400) {
            VIA.write(addr&0xf, src);
        }

        memory[addr] = src&0xFF;
    },
    read:function(addr) {
        if(addr >= 0x300 && addr<0x400) {
            return VIA.read(addr&0xf);
        }

        icycles ++;
        return memory[addr];
    }
}

var cpu = {
    fetch:function() {
        var tmp = addr_space.read(PC);
        if(logInstruction)
            str += hex(tmp) + " ";
        PC++;
        return tmp;
    }
}

function setN(f) {
    N = !!f;
}
function setV(f) {
    V = !!f;
}
function setZ(f) {
    Z = !f;
}
function setC(f) {
    C = !!f;
}
function setI(f) {
    I = f;
}
function setD(f) {
    D = f;
}

function dumpAround(addr) {
    console.log(hex(addr-2,4) + " " + hex(memory[addr-2]));
    console.log(hex(addr-1,4) + " " + hex(memory[addr-1]));
    console.log(hex(addr  ,4) + " " + hex(memory[addr]));
    console.log(hex(addr+1,4) + " " + hex(memory[addr+1]));
    console.log(hex(addr+2,4) + " " + hex(memory[addr+2]));
}

function dumpStack() {
    for(var i=0;i<10;i++)
        console.log(hex(0x100+SP+i,4) + " " + hex(memory[0x100+SP+i]));    
}

function getP() {
    // N V 1 B D I Z C
    return (N<<7) + (V<<6) + (1<<5) + (B<<4) + (D<<3) + (I<<2) + (Z<<1) + C; 
}

function push(v) {
    memory[0x100+SP] = v;
    SP--;
    SP&=0xFF;
    icycles ++;
}

function pull() {
    SP++;
    SP&=0xFF;
    var v = memory[0x100+SP];
    return v;
}

function push16(v) {
    push((v>>8)&0xFF);
    push(v&0xFF);
}

function pull16() {
    var lo = pull();
    var hi = pull();
    return (hi<<8) + lo;
}

function pad(n, width, z) {
  if(n==undefined) return "XX";
  z = z || '0';
  n = n + '';
  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;
}

function rpad(n, width, z) {
  if(n==undefined) return "XX";
  z = z || '0';
  n = n + '';
  return n.length >= width ? n : n + new Array(width - n.length + 1).join(z);
}

function setSR(SR) {
    N = !!(SR&0x80);
    V = !!(SR&0x40);
    B = 0;
    D = !!(SR&0x08);
    I = !!(SR&0x04);
    Z = !!(SR&0x02);
    C = !!(SR&0x01);
}

var oper;
var addr;
var M;
var operStr;
var tmp;
var base;
var opcode;

//
// ADDRESSAGE
//
function ABS() {
    var lo = cpu.fetch();
    var hi = cpu.fetch();
    oper = lo + (hi<<8)

    M = addr_space.read(oper);
    if(logInstruction)
        operStr = "$"+hex(oper,4) + " = " + hex(M);
}

function ABS_J() {
    var lo = cpu.fetch();
    var hi = cpu.fetch();
    oper = lo + (hi<<8)

    M = addr_space.read(oper);
    if(logInstruction)
        operStr = "$"+hex(oper,4);
}

function ACC() {
    oper = A;
    M = A;
}

function IMM() {
    oper = cpu.fetch();
    if(logInstruction)
        operStr = "#$"+hex(oper);
    M = oper;
}

function IMP() {
}

function ABS_X() {
    var lo = cpu.fetch();
    var hi = cpu.fetch();
    base = lo + (hi<<8)

        oper = base + X;
    M = addr_space.read(oper);
    if(logInstruction)
        operStr = "$"+hex(base,4)+",X @ "+hex(oper,4)+" = "+hex(M);
}

function ABS_Y() {
    var lo = cpu.fetch();
    var hi = cpu.fetch();
    base = lo + (hi<<8)

    oper = (base + Y)&0xFFFF;
    M = addr_space.read(oper);
    if(logInstruction)
        operStr = "$"+hex(base,4)+",Y @ "+hex(oper,4)+" = "+hex(M);
}

function ZPG() {
    oper = cpu.fetch();

    M = addr_space.read(oper);
    if(logInstruction)
        operStr = "$"+ hex(oper,2) +" = "+ hex(M,2);
}

function ZPG_X() {

    base = cpu.fetch();
    oper = (base + X)&0xFF;
    M = addr_space.read(oper);
    if(logInstruction)
        operStr = "$"+hex(base)+",X @ "+hex(oper)+" = "+hex(M);
}

function ZPG_Y() {
    base = cpu.fetch();
    oper = (base + Y)&0xFF;
    M = addr_space.read(oper);
    if(logInstruction)
        operStr = "$"+hex(base)+",Y @ "+hex(oper)+" = "+hex(M);
}

function IND() {
    var lo = cpu.fetch();
    var hi = cpu.fetch();
    addr = lo + (hi<<8)

    var nextAddr = (addr&0xFF00)+((addr+1)&0xFF); // next in page

    oper = addr_space.read(addr) + (addr_space.read(nextAddr)<<8);

    if(logInstruction)
        operStr = "($"+hex(addr,4)+") = "+hex(oper,4);
}

function X_IND() {
    base = cpu.fetch();
    oper = (base + X)&0xFF;
    addr  = memory[oper&0xFF] + (memory[(oper+1)&0xFF]<<8);
    M = addr_space.read(addr);

    if(logInstruction)
        operStr = "($"+hex(base)+",X) @ "+hex(oper&0xFF) +" = "+hex(addr) + " = " + hex(M);
    oper = addr;
}

function IND_Y() {
    oper = cpu.fetch();
    addr  = memory[oper] + (memory[(oper+1)&0xFF]<<8);  
    M = addr_space.read((addr+Y/*+C*/)&0xFFFF);

    if(logInstruction)
        operStr = "($"+hex(oper)+"),Y = "+hex(addr, 4) +" @ "+hex((addr+Y/*+C*/)&0xFFFF) + " = " + hex(M);
    oper = (addr+Y)&0xFFFF;
}

function REL() {
    var b = cpu.fetch();
    if(b > 127)
        b = (256-b) * -1;

    oper = PC + b;
    if(logInstruction)
        operStr = "$"+hex(oper,4);
}

// unknown addr mode
function UAM() {
}

function branch(pc) {
    PC = pc;
    icycles++;
}

//
// OPCODE
//

// unknown opcode
function UOP() {
}

function ADC() {
    tmp = A + M + C;

    setN( tmp&0x80 );
    setZ( tmp&0xFF );
    setC( tmp&0x100 );
    setV( (~(A^M))&(A^tmp)&0x80 );

    A = tmp&0xFF;
}

function ROR() {
    var M1 = M&1;
    tmp = M>>1;
    if(C)
        tmp|=0x80;
    setN(tmp&0x80);
    setC(M1);
   
    M = tmp&0xFF;
    addr_space.write(oper, tmp&0xFF);
}

function AND() {

    tmp = A & M;

    setN( tmp&0x80 );
    setZ( tmp&0xFF );

    A = tmp&0xFF;
}

function ASL() {
    tmp = (A<<1);

    setN( tmp&0x80 );
    setZ( tmp&0xFF );
    setC( tmp&0x100 );

    addr_space.write(oper, tmp&0xFF);
}
function ASLA() {
    tmp = (A<<1);

    setN( tmp&0x80 );
    setZ( tmp&0xFF );
    setC( tmp&0x100 );

    A = tmp&0xFF;
}
function BCC() {
    if(!C)
        branch(oper);
}
function BCS() {
    if(C) {
        branch(oper);
    }
}
function BEQ() {
    if(Z)
        branch(oper);
}
function BIT() {
    setN( M&0x80 );
    setV( M&0x40 );
    setZ( A&M );
}

function BMI() {
    if(N)
        branch(oper);
}
function BNE() {
    if(!Z)
        branch(oper);
}
function BPL() {
    if(!N)
        branch(oper);
}
function BRK() {
    push16(PC+1);
    push(getP());        
    setI(true);
    PC = (memory[0xfffe] + (memory[0xffff]<<8));
}
function BVC()  {
    if(!V)
        branch(oper);
}
function BVS() {
    if(V)
        branch(oper);
}
function CLC() {
    C = false;
}
function CLD() {
    D = false;
}
function CLI() {
    I = false;
}
function CLV() {    
    V = false;
}
function CMP() {
    tmp = A - M;

    setN( tmp&0x80 );
    setZ( tmp&0xFF );
    setC( A >= M );
}
function CPX() {
    tmp = X - M;

    setN(tmp&0x80);
    setZ(tmp&0xFF);
    setC(X >= M);
}
function CPY() {
    tmp = Y - M;

    setN(tmp&0x80);
    setZ(tmp&0xFF);
    setC( Y >= M );
}
function DEC() {

    tmp = memory[oper] - 1;

    setN(tmp&0x80);
    setZ(tmp&0xFF);

    addr_space.write(oper, tmp&0xFF);

}
function DEX() {
    tmp = X - 1;

    setN(tmp&0x80);
    setZ(tmp&0xFF);

    X = tmp&0xFF;
}
function DEY() {
    tmp = Y - 1;

    setN(tmp&0x80);
    setZ(tmp&0xFF);

    Y = tmp&0xFF;
}
function EOR() {
    tmp = A ^ M;

    setN(tmp&0x80);
    setZ(tmp&0xFF);

    A = tmp;

}
function INC() {
    tmp = M + 1;

    setN(tmp&0x80);
    setZ(tmp&0xFF);

    addr_space.write(oper, tmp&0xFF);
}
function INX() {
    tmp = X + 1;

    setN(tmp&0x80);
    setZ(tmp&0xFF);

    X = tmp&0xFF;
}
function INY() {
    tmp = Y + 1;

    setN(tmp&0x80);
    setZ(tmp&0xFF);

    Y = tmp&0xFF;
}
function JMP() {
    PC = oper;
}
function JSR() {
    push16(PC-1); icycles++;
    PC = oper;
}
function LDA() {
    tmp = M;

    setN(tmp&0x80);
    setZ(tmp&0xFF);

    A = tmp;
}
function LDX() {
    tmp = M;

    setN(tmp&0x80);
    setZ(tmp&0xFF);

    X = tmp;
}
function LDY() {
    tmp = M;

    setN(tmp&0x80);
    setZ(tmp&0xFF);

    Y = tmp;
}
function LSRA() {

    setC(M&1);
    tmp = (M>>1)
    
    setZ(tmp&0xFF);
    setN(tmp&0x80);

    A = (tmp&0xff);

}
function LSR() {

    setC(M&1);
    tmp = (M>>1)

    setZ(tmp&0xFF);
    setN(tmp&0x80);

    addr_space.write(oper, tmp&0xFF);
}
function NOP() {
}
function ORA() {
    tmp = A | M;

    setN(tmp&0x80);
    setZ(tmp&0xFF);

    A = tmp;
}
function PHA() {
    push(A);
}
function PHP() {

    push(getP()|(1<<4)); // PHP set the virtual B flag
}
function PLA() {
    tmp = A = pull();
    setN(tmp&0x80);
    setZ(tmp&0xFF);

}
function PLP() {
    var SR = pull();
    tmp = SR;;
    setSR(SR);            
}
function ROLA() {
    var M7 = !!(0x80&M);

    tmp = (M << 1);
    tmp |= (C?1:0);

    setN(tmp&0x80);
    setZ(tmp&0xFF);
    setC(M7);

    A = tmp&0xFF;
}
function ROL() {
    var M7 = !!(0x80&M);

    tmp = (M << 1);
    tmp |= (C?1:0);

    setN(tmp&0x80);
    setZ(tmp&0xFF);
    setC(M7);

    addr_space.write(oper, tmp&0xFF);
}
function RORA() {

    var M1 = !!(M&1);
    tmp = M>>1;
    tmp |= (C?0x80:0);
    setN(tmp&0x80);
    setC(M1);

    A = tmp&0xFF;

}
function RTI() {
    var SR = pull();
    setSR(SR);
    PC = pull16();
}
function RTS() {
    PC = pull16()+1;
}
function SBC() {
    if(opcode == 0xEB) opStr = "*SBC";

    tmp = A - M - (!C);           // sbc cary is revert

    setN(tmp&0x80);
    setZ(tmp&0xFF);
    setC(!(tmp&0x100));             // BLOG sbc carry is revert
    setV(((A^M))&(A^tmp)&0x80); // sbc A^M not negate

    A = tmp&0xFF;
}
function SEC() {
    setC(true);
}
function SED() {
    setD(true);
}
function SEI() {
    setI(true);
}
function STA() {
    addr_space.write(oper, A);
}
function STX() {
    addr_space.write(oper, X);
}
function STY() {
    addr_space.write(oper, Y);
}
function TAX() {
    tmp = A;
    setN(tmp&0x80);
    setZ(tmp&0xFF);
    X = tmp;
}
function TAY() {
    tmp = A;
    setN(tmp&0x80);
    setZ(tmp&0xFF);
    Y = tmp;
}
function TSX() {
    tmp = SP;
    setN(tmp&0x80);
    setZ(tmp&0xFF);
    X = tmp&0xff;
}
function TXA() {
    var tmp = X;
    setN(tmp&0x80);
    setZ(tmp&0xFF);
    A = tmp;
}
function TXS() {
    tmp = X;
    // do not change flags ??
    // N = !!(tmp&0x80);
    // Z = !(tmp&0xFF);
    SP = tmp&0xff;
}
function TYA() {
    tmp = Y;
    setN(tmp&0x80);
    setZ(tmp&0xFF);
    A = tmp;
}
function SLO() {

    var tmp = M<<1;
    addr_space.write(oper, tmp);

    tmp = A | tmp;
    setZ(tmp&0xFF);
    setN(tmp&0x80);
    setC(tmp&0x100);

    A = tmp&0xFF;

}
function SAX() {
    R = A & X;

    //setZ(R&0xFF);
    //setN(R&0x80);

    addr_space.write(oper, R);
}
function DCP() {

    tmp = M - 1;

    addr_space.write(oper, tmp&0xFF);

    tmp = A - tmp;

    setN( tmp&0x80 );
    setZ( tmp&0xFF );
    setC( A >= M );

}
function ISB() {

    // INC
    M = (M + 1)&0xFF;
    addr_space.write(oper, M);

    // SBC
    tmp = A - memory[oper] - (!C);           // sbc cary is revert

    setN(tmp&0x80);
    setZ(tmp&0xFF);
    setC(!(tmp&0x100));             // BLOG sbc carry is revert
    setV(((A^M))&(A^tmp)&0x80); // sbc A^M not negate

    A = tmp&0xFF;

}
function RLA() {
    var tmp = M<<1;
    tmp |= C?1:0;
    addr_space.write(oper, tmp);

    setC(tmp&0x100);

    tmp = A & tmp;
    setZ(tmp&0xFF);
    setN(tmp&0x80);

    A = tmp&0xFF;

}
function RRA() {
    ROR();
    ADC();
}
function SRE() {

    setC(M&1);
    tmp = (M>>1);
    setN(tmp&0x80);
    setZ(tmp&0xFF);
    addr_space.write(oper, tmp);

    tmp = A ^ tmp;

    setZ(tmp&0xFF);
    setN(tmp&0x80);

    A = tmp&0xFF;
}

function LAX() {
    A = M;
    X = M;
    setZ(A);
    setN(A&0x80);
}

var regStr;
var debugging = false;

var opcodes = [
// HI                                                                                       LO
//         00          01          02        03        04          05          06          07        08        09          0A        0B        0C          0D          0E          0F        
/* 00 */  BRK, IMP,   ORA, X_IND, UOP, UAM, UOP, UAM, UOP, UAM  , ORA, ZPG  , ASL, ZPG  , UOP, UAM, PHP, IMP, ORA, IMM  , ASLA, ACC, UOP, UAM, UOP, UAM  , ORA, ABS  , ASL, ABS  , UOP, UAM, 
/* 10 */  BPL, REL,   ORA, IND_Y, UOP, UAM, UOP, UAM, UOP, UAM  , ORA, ZPG_X, ASL, ZPG_X, UOP, UAM, CLC, IMP, ORA, ABS_Y, UOP,  UAM, UOP, UAM, UOP, UAM  , ORA, ABS_X, ASL, ABS_X, UOP, UAM, 
/* 20 */  JSR, ABS_J, AND, X_IND, UOP, UAM, UOP, UAM, BIT, ZPG  , AND, ZPG  , ROL, ZPG  , UOP, UAM, PLP, IMP, AND, IMM  , ROLA, ACC, UOP, UAM, BIT, ABS  , AND, ABS  , ROL, ABS  , UOP, UAM, 
/* 30 */  BMI, REL,   AND, IND_Y, UOP, UAM, UOP, UAM, UOP, UAM  , AND, ZPG_X, ROL, ZPG_X, UOP, UAM, SEC, IMP, AND, ABS_Y, UOP,  UAM, UOP, UAM, UOP, UAM  , AND, ABS_X, ROL, ABS_X, UOP, UAM, 
/* 40 */  RTI, IMP,   EOR, X_IND, UOP, UAM, UOP, UAM, UOP, UAM  , EOR, ZPG  , LSR, ZPG  , UOP, UAM, PHA, IMP, EOR, IMM  , LSRA, ACC, UOP, UAM, JMP, ABS_J, EOR, ABS  , LSR, ABS  , UOP, UAM, 
/* 50 */  BVC, REL,   EOR, IND_Y, UOP, UAM, UOP, UAM, UOP, UAM  , EOR, ZPG_X, LSR, ZPG_X, UOP, UAM, CLI, IMP, EOR, ABS_Y, UOP,  UAM, UOP, UAM, UOP, UAM  , EOR, ABS_X, LSR, ABS_X, UOP, UAM, 
/* 60 */  RTS, IMP,   ADC, X_IND, UOP, UAM, UOP, UAM, UOP, UAM  , ADC, ZPG  , ROR, ZPG  , UOP, UAM, PLA, IMP, ADC, IMM  , RORA, ACC, UOP, UAM, JMP, IND  , ADC, ABS  , ROR, ABS  , UOP, UAM, 
/* 70 */  BVS, REL,   ADC, IND_Y, UOP, UAM, UOP, UAM, UOP, UAM  , ADC, ZPG_X, ROR, ZPG_X, UOP, UAM, SEI, IMP, ADC, ABS_Y, UOP,  UAM, UOP, UAM, UOP, UAM  , ADC, ABS_X, ROR, ABS_X, UOP, UAM, 
/* 80 */  UOP, UAM,   STA, X_IND, UOP, UAM, UOP, UAM, STY, ZPG  , STA, ZPG  , STX, ZPG  , UOP, UAM, DEY, IMP, UOP, UAM  , TXA,  IMP, UOP, UAM, STY, ABS  , STA, ABS  , STX, ABS  , UOP, UAM, 
/* 90 */  BCC, REL,   STA, IND_Y, UOP, UAM, UOP, UAM, STY, ZPG_X, STA, ZPG_X, STX, ZPG_Y, UOP, UAM, TYA, IMP, STA, ABS_Y, TXS,  IMP, UOP, UAM, UOP, UAM  , STA, ABS_X, UOP, UAM  , UOP, UAM, 
/* A0 */  LDY, IMM,   LDA, X_IND, LDX, IMM, UOP, UAM, LDY, ZPG  , LDA, ZPG  , LDX, ZPG  , UOP, UAM, TAY, IMP, LDA, IMM  , TAX,  IMP, UOP, UAM, LDY, ABS  , LDA, ABS  , LDX, ABS  , UOP, UAM, 
/* B0 */  BCS, REL,   LDA, IND_Y, UOP, UAM, UOP, UAM, LDY, ZPG_X, LDA, ZPG_X, LDX, ZPG_Y, UOP, UAM, CLV, IMP, LDA, ABS_Y, TSX,  IMP, UOP, UAM, LDY, ABS_X, LDA, ABS_X, LDX, ABS_Y, UOP, UAM, 
/* C0 */  CPY, IMM,   CMP, X_IND, UOP, UAM, UOP, UAM, CPY, ZPG  , CMP, ZPG  , DEC, ZPG  , UOP, UAM, INY, IMP, CMP, IMM  , DEX,  IMP, UOP, UAM, CPY, ABS  , CMP, ABS  , DEC, ABS  , UOP, UAM, 
/* D0 */  BNE, REL,   CMP, IND_Y, UOP, UAM, UOP, UAM, UOP, UAM  , CMP, ZPG_X, DEC, ZPG_X, UOP, UAM, CLD, IMP, CMP, ABS_Y, UOP,  UAM, UOP, UAM, UOP, UAM  , CMP, ABS_X, DEC, ABS_X, UOP, UAM, 
/* E0 */  CPX, IMM,   SBC, X_IND, UOP, UAM, UOP, UAM, CPX, ZPG  , SBC, ZPG  , INC, ZPG  , UOP, UAM, INX, IMP, SBC, IMM  , NOP,  IMP, UOP, UAM, CPX, ABS  , SBC, ABS  , INC, ABS  , UOP, UAM, 
/* F0 */  BEQ, REL,   SBC, IND_Y, UOP, UAM, UOP, UAM, UOP, UAM  , SBC, ZPG_X, INC, ZPG_X, UOP, UAM, SED, IMP, SBC, ABS_Y, UOP,  UAM, UOP, UAM, UOP, UAM  , SBC, ABS_X, INC, ABS_X, UOP, UAM
];

function getStatusStr() {
    regStr ="A:"+hex(A)+" ";
    regStr+="X:"+hex(X)+" ";
    regStr+="Y:"+hex(Y)+" ";
    regStr+="P:"+hex(getP())+" ";
    regStr+="SP:"+hex(SP)+" "
    regStr+=(C?"C":"-");
    regStr+=(Z?"Z":"-");
    regStr+=(I?"I":"-");
    regStr+=(D?"D":"-");
    regStr+=(B?"B":"-");
    regStr+=(V?"V":"-");
    regStr+=(N?"N":"-");

    return hex(PC,4) + " " + regStr;
}


function getNextInstrAddr() {
    var orgPC = PC;

    str = "";
    operStr = "";

    var opcode = cpu.fetch();
    var ins     = opcodes[opcode*2+0];
    var addmode = opcodes[opcode*2+1];
    addmode();

    var nextAddr = PC;

    PC = orgPC;
    return nextAddr;
}

var rastercycles     = 20000;  // every 1/50s  = 20ms
var IRQCycles        = 100000; // every 1/100s = 10ms
var rasterlinecycles = 200;  // every 1/50s  = 20ms
var rasterLine = 0;

var n = 0 ;

var oric1 = {
    stats: {},
    run: function(opts) {

        // simulate reset
        push16(PC);
        push(getP());

        this.opts = opts;

        var self=this;
        function once() {
            var c = 1000;
            while(c--) {
                self.step();
            }
            
            window.setTimeout(once,0);
        }
        
        once();
    },
    debug: function(opts) {
        var readline = require('readline-sync');

        this.opts = opts;

        this.disassemble(PC,20);

        while(1) {
            var m;

            this.debugStatus();

            var q = readline.question("$ ");
            if(q == "n") {
                this.step();
            }
            if(q == "o") {
                if(memory[PC] == 0x20) { // JSR
                    var target = PC + 3;
                    while(PC!=target) {
                        this.step();
                    }
                } else {
                    this.step();
                }
            }
            if(m = q.match(/^g (....)/)) {
                var target = parseInt(m[1],16);
                if(target == PC) {
                    this.step();
                }
                while(PC!=target) {            
                    this.step();
                }
            }
            if(q == "r") {
                var lo = memory[0x100+SP+1];
                var hi = memory[0x100+SP+2];
                target = (lo | (hi<<8)) + 1;

                while(PC != target) {
                    this.step();
                }
            }
            if(m = q.match("^m (....)")) {
                var target = parseInt(m[1],16);
                console.log(hex(memory[target]));
            }
            if(q == "q") {
                return;
            }
        }
    },
    step: function() {
        var orgPC = PC;
        var orgSP = SP;

        if(logInstruction) {
            str = hex(PC,4)+" ";

            regStr =" A:"+hex(A)+" X:"+hex(X)+" Y:"+hex(Y)+" P:"+hex(getP())+" SP:"+hex(SP)+" ";
            
            var cyclesStr = 'CYC : '+((cycles*3)%340);
            operStr = "";
        }

        icycles = 0;

        // read and execute
        var opcode = cpu.fetch();
        var ins     = opcodes[opcode*2+0];
        var addmode = opcodes[opcode*2+1];
        addmode();
        ins();

        // update 6522 ports
        var row = 3;
        var col = 4;
       
        //
        // col est ecrite sur le 8912 via 6522. steps :
        // write address (register)
        // - set porta du 6522 to 0xE (30F)
        // - set CA2=1, CB2=1  (0x30C) 8912 selectionne le registre (0xE pour clavier )
        // - set CA2=1, CB2=1  (0x30C) 8912 arrete de recopier le registre
        // write data
        // - set porta du 6522 (0x30F)
        // - set CA2=0, CB2=1 (w 0x30C) => lecture du porta, ecriture sur le 8912 (CA2=BC1 du 8912 et CB2=BDIR du 8912 )
        // - set CA2=0, CB2=0 (w 0x30C) => arrete de lire les données

        // 1110
        // 12>>11111111
        // 12>>11011101
        // 11111011
        // 12>>11111101
        // 12>>11011101

        // should test only flags CA2 and CB2
        if(VIA.pcr == 0xFF) {
            p8912.address = VIA.porta;
        }

        if(VIA.pcr == 0xFD) {
            p8912.registers[p8912.address] = VIA.porta;
        }

        if( getKeyState(VIA.portb&7, p8912.registers[0xE]) ) {
            VIA.portb |= 0x8;
        } else {
            VIA.portb &= ~0x8;
        }

        // remove caps lock
        // memory[0x20c] &= ~0x80;

        // set shift key
        //memory[0x209] = 0xA4;

        // count cycles
        PC &= 0xFFFF;
        if(icycles==1)
            icycles = 2;
        cycles += icycles;

        // count raster line
        rasterlinecycles-=icycles;
        if(rasterlinecycles <= 0) {
            rasterlinecycles+=200;
            rasterline = (rasterLine++)%200;
            this.opts.onRasterLine(rasterline);
            if(rasterline == 0) {
                this.opts.onVSync();
            }
        }

        // count IRQ cycles
        IRQCycles -= icycles;
        if(IRQCycles<=0 && !I) {
            //IRQCycles += 100000;
            IRQCycles += 10000;

            memory[0x30d] = 0xFF; // simulate IFR

            // IRQ
            push16(PC);
            push(getP());
            PC = memory[0xFFFE] + (memory[0xFFFF]<<8);

            _300++;
            _300%=3;
        }

        if(logInstruction) {
            str = rpad(str, 16, " ");

            str+=ins.name+" ";
            str+=operStr+" ";
            str = rpad(str, 48, " ");

            str += regStr + cyclesStr; // + " " + dump;
            
            console.log(str);
        }
        
    },
    disassemble: function(from,nb) {
        var orgPC = PC;
        PC = from;

        while(nb--) {
            var tmpPC = PC;
            str = "";
            operStr = "";

            var opcode = cpu.fetch();
            var ins     = opcodes[opcode*2+0];
            var addmode = opcodes[opcode*2+1];
            addmode();

            console.log(((tmpPC==orgPC)?"> ":"  ")+hex(tmpPC) + " " + rpad(str,16, " ")+ ins.name+" "+operStr);
        }
        PC = orgPC;
    },
    dumpScreen: function() {
        var screen = "";
        for(var line=0;line<28;line++) {
            for(var col=0;col<40;col++) {


                var c=memory[0xbb80 + line*40 + col];
                var z = c;
                //if(c>127) {
                //    c-=128;
                //    c&=0xff;
                //}

                if(c<8) {
                    c = ' ';
                } else if(c < ' ' /*||c == 127*/) {
                    c= ' ';
                } else if(c == 0x60) {
                    c = '@';
                } else if(c == 0xa0) {
                    c = '#'; // cursor
                } else {
                    c = String.fromCharCode(c);
                }

                screen+= c;

            }
            screen+="\n";
        }
        console.log(screen);
    },

    debugStatus: function() {
        console.log(getStatusStr()+"\n");
        this.disassemble(PC, 20);
        //this.dumpScreen();
    }            
}

// 11111110 FE
// 11111101 FD
// 11111011 FB
// 11110111 F7
// 11101111 EF
// 11011111 DF
// 10111111 BF
// 01111111 7F

function getKeyState(row, col) {
    return keyboard[row][col];
}

function setKeyState(key,b) {
    //console.log(key);
    
    if(key.code == 'Digit3') // 3
        keyboard[0][0x7f]=b;
    if(key.code == 'KeyX') // x
        keyboard[0][0xbf]=b;
    if(key.code == 'Digit1') // 1
        keyboard[0][0xdf]=b;
    if(key.code == 'KeyV') // V
        keyboard[0][0xf7]=b;
    if(key.code == 'Digit5') // 5
        keyboard[0][0xfb]=b;
    if(key.code == 'KeyN') // N
        keyboard[0][0xfd]=b;
    if(key.code == 'Digit7') // 7
        keyboard[0][0xfe]=b;


    if(key.code == 'KeyD')
        keyboard[1][0x7f]=b;
    if(key.code == 'KeyQ')
        keyboard[1][0xbf]=b;
    if(key.code == 'KeyF')
        keyboard[1][0xf7]=b;
    if(key.code == 'KeyR')
        keyboard[1][0xfb]=b;
    if(key.code == 'KeyT')
        keyboard[1][0xfd]=b;
    if(key.code == 'KeyJ')
        keyboard[1][0xfe]=b;


    if(key.code == 'KeyC') // C
        keyboard[2][0x7f]=b;
    if(key.code == 'Digit2') // 2
        keyboard[2][0xbf]=b;
    if(key.code == 'KeyZ') // Z
        keyboard[2][0xdf]=b;
    if(key.code == 'AltLeft' || key.code == 'AltRight') // use alt as control otherwise it trigger browser shortcuts
        keyboard[2][0xef]=b;
    if(key.code == 'Digit4') // 4
        keyboard[2][0xf7]=b;
    if(key.code == 'KeyB') // B
        keyboard[2][0xfb]=b;
    if(key.code == 'Digit6') // 6
        keyboard[2][0xfd]=b;
    if(key.code == 'KeyM') // M
        keyboard[2][0xfe]=b;

        

    if(key.code == 'Quote') // '
        keyboard[3][0x7f]=b;
    if(key.code == 'Backslash') // \
        keyboard[3][0xbf]=b;
    if(key.code == 'ShiftLeft') // 
        keyboard[3][0xef]=b;
    if(key.code == 'Minus') // -
        keyboard[3][0xf7]=b;
    if(key.code == 'Semicolon') // =b;
        keyboard[3][0xfb]=b;
    if(key.code == 'Digit9') // 9
        keyboard[3][0xfd]=b;
    if(key.code == 'KeyK') // K
        keyboard[3][0xfe]=b;


    if(key.code == 'Space') // space
        keyboard[4][0x7f]=b;
    if(key.code == 'ArrowDown') // down
        keyboard[4][0xbf]=b;
    if(key.code == 'ArrowLeft') // left
        keyboard[4][0xdf]=b;
    if(key.code == 'ArrowUp') // up
        keyboard[4][0xf7]=b;
    if(key.code == 'Period') // .
        keyboard[4][0xfb]=b;
    if(key.code == 'Comma') // ][
        keyboard[4][0xfd]=b;

    if(key.code == 'BracketLeft') // [
        keyboard[5][0x7f]=b;
    if(key.code == 'BracketRight') // ]
        keyboard[5][0xbf]=b;
    if(key.code == 'Backspace') // backspace
        keyboard[5][0xdf]=b;
    if(key.code == 'KeyP') // P
        keyboard[5][0xf7]=b;
    if(key.code == 'KeyO') // O
        keyboard[5][0xfb]=b;
    if(key.code == 'KeyI') // I
        keyboard[5][0xfd]=b;
    if(key.code == 'KeyU') // U
        keyboard[5][0xfe]=b;

    if(key.code == 'KeyW') // W
        keyboard[6][0x7f]=b;
    if(key.code == 'KeyS') // S 
        keyboard[6][0xbf]=b;
    if(key.code == 'KeyA') // A
        keyboard[6][0xdf]=b;
    if(key.code == 'KeyE') // E
        keyboard[6][0xf7]=b;
    if(key.code == 'KeyG') // G
        keyboard[6][0xfb]=b;
    if(key.code == 'KeyH') // H
        keyboard[6][0xfd]=b;
    if(key.code == 'KeyY') // Y
        keyboard[6][0xfe]=b;

    if(key.code == 'Equal') // =
        keyboard[7][0x7f]=b;
    if(key.code == 'Enter') // RETURN
        keyboard[7][0xdf]=b;
    if(key.code == 'ShiftRight') // ?
        keyboard[7][0xef]=b;
    if(key.code == 'Slash') // /
        keyboard[7][0xf7]=b;
    if(key.code == 'Digit0') // 0
        keyboard[7][0xfb]=b;
    if(key.code == 'KeyL') // L
        keyboard[7][0xfd]=b;
    if(key.code == 'Digit8') // 8
        keyboard[7][0xfe]=b;
}

var key;
var pressedKey = [];
var keyboard=[];
for(var i=0;i<8;i++)
    keyboard[i]=[];

document.onkeyup = function(key) {
    setKeyState(key, false);
}
document.onkeydown = function(key) {
    setKeyState(key, true);
}

module.exports = oric1;
