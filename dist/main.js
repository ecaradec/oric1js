/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/basic11ROM.js":
/*!***************************!*\
  !*** ./src/basic11ROM.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var basic11ROM=[0x4C,0xCC,0xEC,0x4C,0x71,0xC4,0x72,0xC9,0x91,0xC6,0x86,0xE9,0xD0,0xE9,0x15,0xCD,0x18,0xCD,0x11,0xCA,0x50,0xDA,0xA0,0xDA,0xDD,0xD9,0x66,0xD9,0x84,0xDA,0xA0,0xDA,0x54,0xC8,0xFC,0xC7,0x08,0xC8,0x97,0xCE,0x3B,0xCA,0x54,0xCD,0x7D,0xD1,0xCD,0xCC,0x88,0xCD,0x1B,0xCB,0xE4,0xC9,0xBC,0xC9,0x6F,0xCA,0x51,0xC9,0xC7,0xC9,0x11,0xCA,0x98,0xCA,0xCD,0xEB,0xE6,0xEB,0x0B,0xEC,0x20,0xEC,0x32,0xEC,0xB4,0xFA,0xCA,0xFA,0xE0,0xFA,0x9E,0xFA,0xFB,0xEA,0xFB,0xEA,0xFB,0xEA,0xEF,0xEA,0xEF,0xEA,0xEF,0xEA,0xEF,0xEA,0xEF,0xEA,0xEF,0xEA,0xEF,0xEA,0xFB,0xEA,0xFB,0xEA,0x70,0xC9,0xC1,0xCA,0x57,0xD9,0x5A,0xE8,0x08,0xE9,0xB9,0xD4,0x4E,0xD9,0xAA,0xCB,0x9F,0xC9,0x47,0xC7,0x0C,0xC7,0x45,0xCD,0x45,0xE9,0x12,0xCD,0xED,0xC6,0x21,0xDF,0xBD,0xDF,0x49,0xDF,0x21,0x00,0x7E,0xD4,0xA6,0xD4,0xB5,0xD9,0xFB,0x02,0x2E,0xE2,0x4F,0xE3,0xAF,0xDC,0xAA,0xE2,0x8B,0xE3,0x92,0xE3,0xDB,0xE3,0x3F,0xE4,0x38,0xD9,0x83,0xD9,0xD4,0xDD,0xA6,0xD8,0x93,0xD5,0xD7,0xD8,0xB5,0xD8,0x16,0xD8,0x77,0xDE,0x0F,0xDF,0x0B,0xDF,0xDA,0xDA,0x3F,0xDA,0x45,0xEC,0x2A,0xD8,0x56,0xD8,0x61,0xD8,0x79,0x24,0xDB,0x79,0x0D,0xDB,0x7B,0xEF,0xDC,0x7B,0xE6,0xDD,0x7F,0x37,0xE2,0x50,0xE5,0xD0,0x46,0xE2,0xD0,0x7D,0x70,0xE2,0x5A,0x3B,0xD0,0x64,0x12,0xD1,0x45,0x4E,0xC4,0x45,0x44,0x49,0xD4,0x53,0x54,0x4F,0x52,0xC5,0x52,0x45,0x43,0x41,0x4C,0xCC,0x54,0x52,0x4F,0xCE,0x54,0x52,0x4F,0x46,0xC6,0x50,0x4F,0xD0,0x50,0x4C,0x4F,0xD4,0x50,0x55,0x4C,0xCC,0x4C,0x4F,0x52,0x45,0xD3,0x44,0x4F,0x4B,0xC5,0x52,0x45,0x50,0x45,0x41,0xD4,0x55,0x4E,0x54,0x49,0xCC,0x46,0x4F,0xD2,0x4C,0x4C,0x49,0x53,0xD4,0x4C,0x50,0x52,0x49,0x4E,0xD4,0x4E,0x45,0x58,0xD4,0x44,0x41,0x54,0xC1,0x49,0x4E,0x50,0x55,0xD4,0x44,0x49,0xCD,0x43,0x4C,0xD3,0x52,0x45,0x41,0xC4,0x4C,0x45,0xD4,0x47,0x4F,0x54,0xCF,0x52,0x55,0xCE,0x49,0xC6,0x52,0x45,0x53,0x54,0x4F,0x52,0xC5,0x47,0x4F,0x53,0x55,0xC2,0x52,0x45,0x54,0x55,0x52,0xCE,0x52,0x45,0xCD,0x48,0x49,0x4D,0x45,0xCD,0x47,0x52,0x41,0xC2,0x52,0x45,0x4C,0x45,0x41,0x53,0xC5,0x54,0x45,0x58,0xD4,0x48,0x49,0x52,0x45,0xD3,0x53,0x48,0x4F,0x4F,0xD4,0x45,0x58,0x50,0x4C,0x4F,0x44,0xC5,0x5A,0x41,0xD0,0x50,0x49,0x4E,0xC7,0x53,0x4F,0x55,0x4E,0xC4,0x4D,0x55,0x53,0x49,0xC3,0x50,0x4C,0x41,0xD9,0x43,0x55,0x52,0x53,0x45,0xD4,0x43,0x55,0x52,0x4D,0x4F,0xD6,0x44,0x52,0x41,0xD7,0x43,0x49,0x52,0x43,0x4C,0xC5,0x50,0x41,0x54,0x54,0x45,0x52,0xCE,0x46,0x49,0x4C,0xCC,0x43,0x48,0x41,0xD2,0x50,0x41,0x50,0x45,0xD2,0x49,0x4E,0xCB,0x53,0x54,0x4F,0xD0,0x4F,0xCE,0x57,0x41,0x49,0xD4,0x43,0x4C,0x4F,0x41,0xC4,0x43,0x53,0x41,0x56,0xC5,0x44,0x45,0xC6,0x50,0x4F,0x4B,0xC5,0x50,0x52,0x49,0x4E,0xD4,0x43,0x4F,0x4E,0xD4,0x4C,0x49,0x53,0xD4,0x43,0x4C,0x45,0x41,0xD2,0x47,0x45,0xD4,0x43,0x41,0x4C,0xCC,0xA1,0x4E,0x45,0xD7,0x54,0x41,0x42,0xA8,0x54,0xCF,0x46,0xCE,0x53,0x50,0x43,0xA8,0xC0,0x41,0x55,0x54,0xCF,0x45,0x4C,0x53,0xC5,0x54,0x48,0x45,0xCE,0x4E,0x4F,0xD4,0x53,0x54,0x45,0xD0,0xAB,0xAD,0xAA,0xAF,0xDE,0x41,0x4E,0xC4,0x4F,0xD2,0xBE,0xBD,0xBC,0x53,0x47,0xCE,0x49,0x4E,0xD4,0x41,0x42,0xD3,0x55,0x53,0xD2,0x46,0x52,0xC5,0x50,0x4F,0xD3,0x48,0x45,0x58,0xA4,0xA6,0x53,0x51,0xD2,0x52,0x4E,0xC4,0x4C,0xCE,0x45,0x58,0xD0,0x43,0x4F,0xD3,0x53,0x49,0xCE,0x54,0x41,0xCE,0x41,0x54,0xCE,0x50,0x45,0x45,0xCB,0x44,0x45,0x45,0xCB,0x4C,0x4F,0xC7,0x4C,0x45,0xCE,0x53,0x54,0x52,0xA4,0x56,0x41,0xCC,0x41,0x53,0xC3,0x43,0x48,0x52,0xA4,0x50,0xC9,0x54,0x52,0x55,0xC5,0x46,0x41,0x4C,0x53,0xC5,0x4B,0x45,0x59,0xA4,0x53,0x43,0x52,0xCE,0x50,0x4F,0x49,0x4E,0xD4,0x4C,0x45,0x46,0x54,0xA4,0x52,0x49,0x47,0x48,0x54,0xA4,0x4D,0x49,0x44,0xA4,0x00,0x4E,0x45,0x58,0x54,0x20,0x57,0x49,0x54,0x48,0x4F,0x55,0x54,0x20,0x46,0x4F,0xD2,0x53,0x59,0x4E,0x54,0x41,0xD8,0x52,0x45,0x54,0x55,0x52,0x4E,0x20,0x57,0x49,0x54,0x48,0x4F,0x55,0x54,0x20,0x47,0x4F,0x53,0x55,0xC2,0x4F,0x55,0x54,0x20,0x4F,0x46,0x20,0x44,0x41,0x54,0xC1,0x49,0x4C,0x4C,0x45,0x47,0x41,0x4C,0x20,0x51,0x55,0x41,0x4E,0x54,0x49,0x54,0xD9,0x4F,0x56,0x45,0x52,0x46,0x4C,0x4F,0xD7,0x4F,0x55,0x54,0x20,0x4F,0x46,0x20,0x4D,0x45,0x4D,0x4F,0x52,0xD9,0x55,0x4E,0x44,0x45,0x46,0x27,0x44,0x20,0x53,0x54,0x41,0x54,0x45,0x4D,0x45,0x4E,0xD4,0x42,0x41,0x44,0x20,0x53,0x55,0x42,0x53,0x43,0x52,0x49,0x50,0xD4,0x52,0x45,0x44,0x49,0x4D,0x27,0x44,0x20,0x41,0x52,0x52,0x41,0xD9,0x44,0x49,0x56,0x49,0x53,0x49,0x4F,0x4E,0x20,0x42,0x59,0x20,0x5A,0x45,0x52,0xCF,0x49,0x4C,0x4C,0x45,0x47,0x41,0x4C,0x20,0x44,0x49,0x52,0x45,0x43,0xD4,0x44,0x49,0x53,0x50,0x20,0x54,0x59,0x50,0x45,0x20,0x4D,0x49,0x53,0x4D,0x41,0x54,0x43,0xC8,0x53,0x54,0x52,0x49,0x4E,0x47,0x20,0x54,0x4F,0x4F,0x20,0x4C,0x4F,0x4E,0xC7,0x46,0x4F,0x52,0x4D,0x55,0x4C,0x41,0x20,0x54,0x4F,0x4F,0x20,0x43,0x4F,0x4D,0x50,0x4C,0x45,0xD8,0x43,0x41,0x4E,0x27,0x54,0x20,0x43,0x4F,0x4E,0x54,0x49,0x4E,0x55,0xC5,0x55,0x4E,0x44,0x45,0x46,0x27,0x44,0x20,0x46,0x55,0x4E,0x43,0x54,0x49,0x4F,0xCE,0x42,0x41,0x44,0x20,0x55,0x4E,0x54,0x49,0xCC,0x20,0x45,0x52,0x52,0x4F,0x52,0x00,0x20,0x49,0x4E,0x20,0x00,0x0D,0x0A,0x52,0x65,0x61,0x64,0x79,0x20,0x0D,0x0A,0x00,0x0D,0x0A,0x20,0x42,0x52,0x45,0x41,0x4B,0x00,0xBA,0xE8,0xE8,0xE8,0xE8,0xBD,0x01,0x01,0xC9,0x8D,0xD0,0x21,0xA5,0xB9,0xD0,0x0A,0xBD,0x02,0x01,0x85,0xB8,0xBD,0x03,0x01,0x85,0xB9,0xDD,0x03,0x01,0xD0,0x07,0xA5,0xB8,0xDD,0x02,0x01,0xF0,0x07,0x8A,0x18,0x69,0x12,0xAA,0xD0,0xD8,0x60,0x20,0x44,0xC4,0x85,0xA0,0x84,0xA1,0x38,0xA5,0xC9,0xE5,0xCE,0x85,0x91,0xA8,0xA5,0xCA,0xE5,0xCF,0xAA,0xE8,0x98,0xF0,0x23,0xA5,0xC9,0x38,0xE5,0x91,0x85,0xC9,0xB0,0x03,0xC6,0xCA,0x38,0xA5,0xC7,0xE5,0x91,0x85,0xC7,0xB0,0x08,0xC6,0xC8,0x90,0x04,0xB1,0xC9,0x91,0xC7,0x88,0xD0,0xF9,0xB1,0xC9,0x91,0xC7,0xC6,0xCA,0xC6,0xC8,0xCA,0xD0,0xF2,0x60,0x0A,0x69,0x3E,0xB0,0x40,0x85,0x91,0xBA,0xE4,0x91,0x90,0x39,0x60,0xC4,0xA3,0x90,0x28,0xD0,0x04,0xC5,0xA2,0x90,0x22,0x48,0xA2,0x09,0x98,0x48,0xB5,0xC6,0xCA,0x10,0xFA,0x20,0x50,0xD6,0xA2,0xF7,0x68,0x95,0xD0,0xE8,0x30,0xFA,0x68,0xA8,0x68,0xC4,0xA3,0x90,0x06,0xD0,0x10,0xC5,0xA2,0xB0,0x0C,0x60,0xAD,0xC0,0x02,0x29,0xFE,0x8D,0xC0,0x02,0x4C,0xA8,0xC4,0xA2,0x4D,0x20,0x2F,0xC8,0x46,0x2E,0x20,0xF0,0xCB,0x20,0xD7,0xCC,0xBD,0xA8,0xC2,0x48,0x29,0x7F,0x20,0xD9,0xCC,0xE8,0x68,0x10,0xF3,0x20,0x26,0xC7,0xA9,0xA6,0xA0,0xC3,0x20,0xB0,0xCC,0xA4,0xA9,0xC8,0xF0,0x03,0x20,0xBA,0xE0,0x4E,0x52,0x02,0x46,0x2E,0x4E,0xF2,0x02,0xA9,0xB2,0xA0,0xC3,0x20,0x1A,0x00,0x20,0x2F,0xC8,0x20,0x92,0xC5,0x86,0xE9,0x84,0xEA,0x20,0xE2,0x00,0xAA,0xF0,0xF0,0xA2,0xFF,0x86,0xA9,0x90,0x06,0x20,0xFA,0xC5,0x4C,0x0C,0xC9,0x20,0xE2,0xCA,0x20,0xFA,0xC5,0x84,0x26,0x20,0xB3,0xC6,0x90,0x44,0xA0,0x01,0xB1,0xCE,0x85,0x92,0xA5,0x9C,0x85,0x91,0xA5,0xCF,0x85,0x94,0xA5,0xCE,0x88,0xF1,0xCE,0x18,0x65,0x9C,0x85,0x9C,0x85,0x93,0xA5,0x9D,0x69,0xFF,0x85,0x9D,0xE5,0xCF,0xAA,0x38,0xA5,0xCE,0xE5,0x9C,0xA8,0xB0,0x03,0xE8,0xC6,0x94,0x18,0x65,0x91,0x90,0x03,0xC6,0x92,0x18,0xB1,0x91,0x91,0x93,0xC8,0xD0,0xF9,0xE6,0x92,0xE6,0x94,0xCA,0xD0,0xF2,0x20,0x08,0xC7,0x20,0x5F,0xC5,0xA5,0x35,0xF0,0x89,0x18,0xA5,0x9C,0x85,0xC9,0x65,0x26,0x85,0xC7,0xA4,0x9D,0x84,0xCA,0x90,0x01,0xC8,0x84,0xC8,0x20,0xF4,0xC3,0xA5,0xA0,0xA4,0xA1,0x85,0x9C,0x84,0x9D,0xA4,0x26,0x88,0xB9,0x31,0x00,0x91,0xCE,0x88,0x10,0xF8,0x20,0x08,0xC7,0x20,0x5F,0xC5,0x4C,0xB7,0xC4,0xA5,0x9A,0xA4,0x9B,0x85,0x91,0x84,0x92,0x18,0xA0,0x01,0xB1,0x91,0xF0,0x1D,0xA0,0x04,0xC8,0xB1,0x91,0xD0,0xFB,0xC8,0x98,0x65,0x91,0xAA,0xA0,0x00,0x91,0x91,0xA5,0x92,0x69,0x00,0xC8,0x91,0x91,0x86,0x91,0x85,0x92,0x90,0xDD,0x60,0xCA,0x10,0x05,0x20,0xF0,0xCB,0xA2,0x00,0x20,0xE8,0xC5,0xC9,0x01,0xD0,0x0D,0xAC,0x69,0x02,0xB1,0x12,0x29,0x7F,0xC9,0x20,0xB0,0x02,0xA9,0x09,0x48,0x20,0xD9,0xCC,0x68,0xC9,0x7F,0xF0,0xDB,0xC9,0x0D,0xF0,0x30,0xC9,0x03,0xF0,0x28,0xC9,0x18,0xF0,0x0B,0xC9,0x20,0x90,0xD3,0x95,0x35,0xE8,0xE0,0x4F,0x90,0x07,0xA9,0x5C,0x20,0xD9,0xCC,0xD0,0xC0,0xE0,0x4C,0x90,0xC1,0x8A,0x48,0x98,0x48,0x20,0x9F,0xFA,0x68,0xA8,0x68,0xAA,0x4C,0x94,0xC5,0xE6,0x17,0xA2,0x00,0x4C,0xEA,0xCB,0x20,0x3B,0x02,0x10,0xFB,0xC9,0x0F,0xD0,0x08,0x48,0xA5,0x2E,0x49,0xFF,0x85,0x2E,0x68,0x60,0xA6,0xE9,0xA0,0x04,0x84,0x2A,0xB5,0x00,0xC9,0x20,0xF0,0x41,0x85,0x25,0xC9,0x22,0xF0,0x5F,0x24,0x2A,0x70,0x37,0xC9,0x3F,0xD0,0x04,0xA9,0xBA,0xD0,0x2F,0xC9,0x30,0x90,0x04,0xC9,0x3C,0x90,0x27,0x84,0xE0,0xA0,0x00,0x84,0x26,0xA9,0xE9,0x85,0x18,0xA9,0xC0,0x85,0x19,0x86,0xE9,0xCA,0xE8,0xE6,0x18,0xD0,0x02,0xE6,0x19,0xB5,0x00,0x38,0xF1,0x18,0xF0,0xF2,0xC9,0x80,0xD0,0x2F,0x05,0x26,0xA4,0xE0,0xE8,0xC8,0x99,0x30,0x00,0xB9,0x30,0x00,0xF0,0x39,0x38,0xE9,0x3A,0xF0,0x04,0xC9,0x57,0xD0,0x02,0x85,0x2A,0x38,0xE9,0x63,0xD0,0x9F,0x85,0x25,0xB5,0x00,0xF0,0xE0,0xC5,0x25,0xF0,0xDC,0xC8,0x99,0x30,0x00,0xE8,0xD0,0xF1,0xA6,0xE9,0xE6,0x26,0xB1,0x18,0x08,0xE6,0x18,0xD0,0x02,0xE6,0x19,0x28,0x10,0xF4,0xB1,0x18,0xD0,0xB2,0xB5,0x00,0x10,0xBB,0x99,0x32,0x00,0xA9,0x34,0x85,0xE9,0x60,0x20,0xE2,0xCA,0x20,0xB3,0xC6,0x90,0x16,0x6E,0xF2,0x02,0x20,0x6C,0xC7,0x4E,0xF2,0x02,0x20,0xF0,0xCB,0xA9,0x0B,0x20,0xD9,0xCC,0x68,0x68,0x4C,0xB7,0xC4,0x4C,0x23,0xCA,0xA9,0x00,0x85,0x1D,0x85,0x1E,0xA5,0x9A,0xA6,0x9B,0xA0,0x01,0x85,0xCE,0x86,0xCF,0xB1,0xCE,0xF0,0x25,0xC8,0xC8,0xE6,0x1D,0xD0,0x02,0xE6,0x1E,0xA5,0x34,0xD1,0xCE,0x90,0x18,0xF0,0x03,0x88,0xD0,0x09,0xA5,0x33,0x88,0xD1,0xCE,0x90,0x0C,0xF0,0x0A,0x88,0xB1,0xCE,0xAA,0x88,0xB1,0xCE,0xB0,0xD1,0x18,0x60,0xD0,0xFD,0xA9,0x00,0x4E,0xF4,0x02,0xA8,0x91,0x9A,0xC8,0x91,0x9A,0xA5,0x9A,0x18,0x69,0x02,0x85,0x9C,0xA5,0x9B,0x69,0x00,0x85,0x9D,0x20,0x3A,0xC7,0xA9,0x00,0xD0,0x2A,0xA5,0xA6,0xA4,0xA7,0x85,0xA2,0x84,0xA3,0xA5,0x9C,0xA4,0x9D,0x85,0x9E,0x84,0x9F,0x85,0xA0,0x84,0xA1,0x20,0x52,0xC9,0xA2,0x88,0x86,0x85,0x68,0xA8,0x68,0xA2,0xFE,0x9A,0x48,0x98,0x48,0xA9,0x00,0x85,0xAD,0x85,0x2B,0x60,0x18,0xA5,0x9A,0x69,0xFF,0x85,0xE9,0xA5,0x9B,0x69,0xFF,0x85,0xEA,0x60,0x08,0x20,0xE2,0xCA,0x20,0xB3,0xC6,0x28,0xF0,0x14,0x20,0xE8,0x00,0xF0,0x15,0xC9,0xCD,0xD0,0x92,0x20,0xE2,0x00,0xF0,0x06,0x20,0xE2,0xCA,0xF0,0x07,0x60,0xA9,0xFF,0x85,0x33,0x85,0x34,0xA0,0x01,0xB1,0xCE,0xF0,0x4D,0x20,0x62,0xC9,0xC9,0x20,0xD0,0x0E,0x4E,0xDF,0x02,0xAD,0xDF,0x02,0x10,0xFB,0x20,0x62,0xC9,0x4E,0xDF,0x02,0xC8,0xB1,0xCE,0xAA,0xC8,0xB1,0xCE,0xC5,0x34,0xD0,0x04,0xE4,0x33,0xF0,0x02,0xB0,0x27,0x84,0xB8,0x48,0x20,0xF0,0xCB,0x68,0x20,0xC5,0xE0,0xA9,0x20,0xA4,0xB8,0x29,0x7F,0x20,0xD9,0xCC,0xC8,0xF0,0x11,0xB1,0xCE,0xD0,0x1E,0xA8,0xB1,0xCE,0xAA,0xC8,0xB1,0xCE,0x86,0xCE,0x85,0xCF,0xD0,0xAD,0x2C,0xF2,0x02,0x10,0x01,0x60,0x20,0xF0,0xCB,0x20,0x2F,0xC8,0x68,0x68,0x4C,0xA8,0xC4,0x10,0xD6,0x38,0xE9,0x7F,0xAA,0x84,0xB8,0xA0,0x00,0xA9,0xE9,0x85,0x18,0xA9,0xC0,0x85,0x19,0xCA,0xF0,0x0D,0xE6,0x18,0xD0,0x02,0xE6,0x19,0xB1,0x18,0x10,0xF6,0x4C,0xE2,0xC7,0xC8,0xB1,0x18,0x30,0xAD,0x20,0xD9,0xCC,0x4C,0xF2,0xC7,0x20,0x16,0xC8,0x4E,0xF2,0x02,0x20,0xE8,0x00,0x4C,0x48,0xC7,0x20,0x16,0xC8,0x20,0xE8,0x00,0x20,0xAB,0xCB,0x20,0x2F,0xC8,0x60,0x2C,0xF1,0x02,0x30,0x39,0xA5,0x30,0x8D,0x59,0x02,0xAD,0x58,0x02,0x85,0x30,0x38,0x6E,0xF1,0x02,0xAD,0x56,0x02,0x4C,0x44,0xC8,0x2C,0xF1,0x02,0x10,0x20,0xA5,0x30,0x8D,0x58,0x02,0xAD,0x59,0x02,0x85,0x30,0x4E,0xF1,0x02,0xAD,0x57,0x02,0x85,0x31,0x38,0xE9,0x08,0xB0,0xFB,0x49,0xFF,0xE9,0x06,0x18,0x65,0x31,0x85,0x32,0x60,0xA9,0x80,0x85,0x2B,0x20,0x1C,0xCB,0x20,0xC6,0xC3,0xD0,0x05,0x8A,0x69,0x0F,0xAA,0x9A,0x68,0x68,0xA9,0x09,0x20,0x37,0xC4,0x20,0x4E,0xCA,0x18,0x98,0x65,0xE9,0x48,0xA5,0xEA,0x69,0x00,0x48,0xA5,0xA9,0x48,0xA5,0xA8,0x48,0xA9,0xC3,0x20,0x67,0xD0,0x20,0x06,0xCF,0x20,0x03,0xCF,0xA5,0xD5,0x09,0x7F,0x25,0xD1,0x85,0xD1,0xA9,0x9E,0xA0,0xC8,0x85,0x91,0x84,0x92,0x4C,0xC0,0xCF,0xA9,0x81,0xA0,0xDC,0x20,0x7B,0xDE,0x20,0xE8,0x00,0xC9,0xCB,0xD0,0x06,0x20,0xE2,0x00,0x20,0x03,0xCF,0x20,0x13,0xDF,0x20,0xB1,0xCF,0xA5,0xB9,0x48,0xA5,0xB8,0x48,0xA9,0x8D,0x48,0x20,0x62,0xC9,0xA5,0xE9,0xA4,0xEA,0xF0,0x06,0x85,0xAC,0x84,0xAD,0xA0,0x00,0xB1,0xE9,0xD0,0x5B,0x4E,0x52,0x02,0xA0,0x02,0xB1,0xE9,0x18,0xD0,0x03,0x4C,0x8A,0xC9,0xC8,0xB1,0xE9,0x85,0xA8,0xC8,0xB1,0xE9,0x85,0xA9,0x98,0x65,0xE9,0x85,0xE9,0x90,0x02,0xE6,0xEA,0x2C,0xF4,0x02,0x10,0x13,0x48,0xA9,0x5B,0x20,0xFB,0xCC,0xA5,0xA9,0xA6,0xA8,0x20,0xC5,0xE0,0xA9,0x5D,0x20,0xFB,0xCC,0x68,0x20,0xE2,0x00,0x20,0x15,0xC9,0x4C,0xC1,0xC8,0xF0,0x49,0xE9,0x80,0x90,0x11,0xC9,0x42,0xB0,0x30,0x0A,0xA8,0xB9,0x07,0xC0,0x48,0xB9,0x06,0xC0,0x48,0x4C,0xE2,0x00,0x4C,0x1C,0xCB,0xC9,0x3A,0xF0,0xC1,0xC9,0xC8,0xD0,0x0E,0x2C,0x52,0x02,0x10,0x13,0x20,0xB1,0xCA,0x4E,0x52,0x02,0x4C,0xC1,0xC8,0xC9,0x27,0xD0,0x06,0x20,0x99,0xCA,0x4C,0xC1,0xC8,0x4C,0x70,0xD0,0x38,0xA5,0x9A,0xE9,0x01,0xA4,0x9B,0xB0,0x01,0x88,0x85,0xB0,0x84,0xB1,0x60,0x60,0xAD,0xDF,0x02,0x10,0xF9,0x29,0x7F,0xA2,0x08,0xC9,0x03,0xD0,0xF2,0xC9,0x03,0xB0,0x01,0x18,0xD0,0x43,0xA5,0xE9,0xA4,0xEA,0xF0,0x0C,0x85,0xAC,0x84,0xAD,0xA5,0xA8,0xA4,0xA9,0x85,0xAA,0x84,0xAB,0x68,0x68,0xA9,0xBD,0xA0,0xC3,0xA2,0x00,0x8E,0xF1,0x02,0x8E,0xDF,0x02,0x86,0x2E,0x90,0x03,0x4C,0x9D,0xC4,0x4C,0xA8,0xC4,0xD0,0x17,0xA2,0xD7,0xA4,0xAD,0xD0,0x03,0x4C,0x7E,0xC4,0xA5,0xAC,0x85,0xE9,0x84,0xEA,0xA5,0xAA,0xA4,0xAB,0x85,0xA8,0x84,0xA9,0x60,0x4C,0x36,0xD3,0xD0,0x03,0x4C,0x08,0xC7,0x20,0x0F,0xC7,0x4C,0xDC,0xC9,0xA9,0x03,0x20,0x37,0xC4,0xA5,0xEA,0x48,0xA5,0xE9,0x48,0xA5,0xA9,0x48,0xA5,0xA8,0x48,0xA9,0x9B,0x48,0x20,0xE8,0x00,0x20,0xE5,0xC9,0x4C,0xC1,0xC8,0x20,0x53,0xE8,0x20,0x51,0xCA,0xA5,0xA9,0xC5,0x34,0xB0,0x0B,0x98,0x38,0x65,0xE9,0xA6,0xEA,0x90,0x07,0xE8,0xB0,0x04,0xA5,0x9A,0xA6,0x9B,0x20,0xBD,0xC6,0x90,0x1E,0xA5,0xCE,0xE9,0x01,0x85,0xE9,0xA5,0xCF,0xE9,0x00,0x85,0xEA,0x60,0xD0,0xFD,0xA9,0xFF,0x85,0xB9,0x20,0xC6,0xC3,0x9A,0xC9,0x9B,0xF0,0x0B,0xA2,0x16,0x2C,0xA2,0x5A,0x4C,0x7E,0xC4,0x4C,0x70,0xD0,0x68,0x68,0xC0,0x0C,0xF0,0x19,0x85,0xA8,0x68,0x85,0xA9,0x68,0x85,0xE9,0x68,0x85,0xEA,0x20,0x4E,0xCA,0x98,0x18,0x65,0xE9,0x85,0xE9,0x90,0x02,0xE6,0xEA,0x60,0x68,0x68,0x68,0x60,0xA2,0x3A,0x2C,0xA2,0x00,0x86,0x24,0xA0,0x00,0x84,0x25,0xA5,0x25,0xA6,0x24,0x85,0x24,0x86,0x25,0xB1,0xE9,0xF0,0xE4,0xC5,0x25,0xF0,0xE0,0xC8,0xC9,0x22,0xD0,0xF3,0xF0,0xE9,0x20,0x17,0xCF,0x20,0xE8,0x00,0xC9,0x97,0xF0,0x05,0xA9,0xC9,0x20,0x67,0xD0,0xA5,0xD0,0xD0,0x05,0x20,0x9E,0xCA,0xF0,0xB7,0x20,0xE8,0x00,0xB0,0x03,0x4C,0xE5,0xC9,0x08,0x38,0x6E,0x52,0x02,0x28,0x4C,0x15,0xC9,0x20,0x51,0xCA,0xF0,0xA1,0xA0,0x00,0xB1,0xE9,0xF0,0x0C,0xC8,0xC9,0xC9,0xF0,0xF0,0xC9,0xC8,0xD0,0xF3,0x4C,0x3F,0xCA,0x60,0xA0,0xFF,0xC8,0xB1,0xE9,0xF0,0x04,0xC9,0x3A,0xD0,0xF7,0x4C,0x3F,0xCA,0x4C,0x70,0xD0,0x20,0xC8,0xD8,0x48,0xC9,0x9B,0xF0,0x04,0xC9,0x97,0xD0,0xF1,0xC6,0xD4,0xD0,0x04,0x68,0x4C,0x17,0xC9,0x20,0xE2,0x00,0x20,0xE2,0xCA,0xC9,0x2C,0xF0,0xEE,0x68,0x60,0xA2,0x00,0x86,0x33,0x86,0x34,0xB0,0xF7,0xE9,0x2F,0x85,0x24,0xA5,0x34,0x85,0x91,0xC9,0x19,0xB0,0xD4,0xA5,0x33,0x0A,0x26,0x91,0x0A,0x26,0x91,0x65,0x33,0x85,0x33,0xA5,0x91,0x65,0x34,0x85,0x34,0x06,0x33,0x26,0x34,0xA5,0x33,0x65,0x24,0x85,0x33,0x90,0x02,0xE6,0x34,0x20,0xE2,0x00,0x4C,0xE8,0xCA,0x20,0x88,0xD1,0x85,0xB8,0x84,0xB9,0xA9,0xD4,0x20,0x67,0xD0,0xA5,0x29,0x48,0xA5,0x28,0x48,0x20,0x17,0xCF,0x68,0x2A,0x20,0x09,0xCF,0xD0,0x18,0x68,0x10,0x12,0x20,0xF4,0xDE,0x20,0xA9,0xD2,0xA0,0x00,0xA5,0xD3,0x91,0xB8,0xC8,0xA5,0xD4,0x91,0xB8,0x60,0x4C,0xA9,0xDE,0x68,0xA0,0x02,0xB1,0xD3,0xC5,0xA3,0x90,0x17,0xD0,0x07,0x88,0xB1,0xD3,0xC5,0xA2,0x90,0x0E,0xA4,0xD4,0xC4,0x9D,0x90,0x08,0xD0,0x0D,0xA5,0xD3,0xC5,0x9C,0xB0,0x07,0xA5,0xD3,0xA4,0xD4,0x4C,0x8D,0xCB,0xA0,0x00,0xB1,0xD3,0x20,0xA3,0xD5,0xA5,0xBF,0xA4,0xC0,0x85,0xDE,0x84,0xDF,0x20,0xA4,0xD7,0xA9,0xD0,0xA0,0x00,0x85,0xBF,0x84,0xC0,0x20,0x05,0xD8,0xA0,0x00,0xB1,0xBF,0x91,0xB8,0xC8,0xB1,0xBF,0x91,0xB8,0xC8,0xB1,0xBF,0x91,0xB8,0x60,0x20,0xB3,0xCC,0x20,0xE8,0x00,0xF0,0x43,0xF0,0x5C,0xC9,0xC2,0xF0,0x7B,0xC9,0xC5,0x18,0xF0,0x76,0xC9,0x2C,0xF0,0x50,0xC9,0x3B,0xF0,0x6B,0xC9,0xC6,0xD0,0x03,0x4C,0x59,0xCC,0x20,0x17,0xCF,0x24,0x28,0x30,0xD7,0x20,0xD5,0xE0,0x20,0xB5,0xD5,0xA0,0x00,0xB1,0xD3,0x18,0x65,0x30,0xC5,0x31,0x90,0x03,0x20,0xF0,0xCB,0x20,0xB3,0xCC,0x20,0xD4,0xCC,0xD0,0xBE,0xA0,0x00,0x94,0x35,0xA2,0x34,0xA5,0x30,0x48,0xA9,0x0D,0x20,0xD9,0xCC,0x68,0x2C,0xF1,0x02,0x30,0x04,0xC5,0x31,0xF0,0x09,0xA9,0x00,0x85,0x30,0xA9,0x0A,0x20,0xD9,0xCC,0x60,0xA5,0x30,0x2C,0xF1,0x02,0x30,0x04,0x38,0xED,0x53,0x02,0x38,0xE9,0x08,0xB0,0xFC,0x49,0xFF,0x69,0x01,0xAA,0x18,0x65,0x30,0xC5,0x31,0x90,0x1F,0x20,0xF0,0xCB,0x4C,0x4B,0xCC,0x08,0x20,0xC5,0xD8,0xC9,0x29,0xD0,0x20,0x28,0x90,0x0E,0x8A,0xC5,0x31,0x90,0x03,0x4C,0x36,0xD3,0x38,0xE5,0x30,0x90,0x05,0xAA,0xE8,0xCA,0xD0,0x06,0x20,0xE2,0x00,0x4C,0xAD,0xCB,0x20,0xD4,0xCC,0xD0,0xF2,0x4C,0x70,0xD0,0x2C,0xF1,0x02,0x30,0xF8,0xAE,0x1F,0x02,0xF0,0x03,0x4C,0xF7,0xEA,0x20,0xC5,0xD8,0xE0,0x28,0xB0,0x40,0x86,0x0C,0x20,0x65,0xD0,0x20,0xC8,0xD8,0xE8,0xE0,0x1C,0xB0,0x33,0xAD,0x6A,0x02,0x48,0x29,0xFE,0x8D,0x6A,0x02,0xA9,0x00,0x20,0x01,0xF8,0xA5,0x0C,0x8D,0x69,0x02,0x8A,0x8D,0x68,0x02,0x20,0x0C,0xDA,0xA5,0x1F,0xA4,0x20,0x85,0x12,0x84,0x13,0x68,0x8D,0x6A,0x02,0xA9,0x01,0x20,0x01,0xF8,0xA9,0x3B,0x20,0x67,0xD0,0x4C,0xAD,0xCB,0x4C,0xC2,0xD8,0x20,0xB5,0xD5,0x20,0xD0,0xD7,0xAA,0xA0,0x00,0xE8,0xCA,0xF0,0x10,0xB1,0x91,0x20,0xD9,0xCC,0xC8,0xC9,0x0D,0xD0,0xF3,0x20,0x0B,0xCC,0x4C,0xBA,0xCC,0x60,0xA9,0x0C,0x2C,0xA9,0x11,0x2C,0xA9,0x20,0x2C,0xA9,0x3F,0x24,0x2E,0x30,0x33,0x48,0xC9,0x20,0x90,0x0B,0xA5,0x30,0xC5,0x31,0xD0,0x03,0x20,0xF0,0xCB,0xE6,0x30,0x68,0x2C,0xF1,0x02,0x10,0x08,0x48,0x20,0x3E,0x02,0x68,0x29,0xFF,0x60,0x86,0x27,0xAA,0x20,0x7C,0xF7,0xC9,0x20,0x90,0x04,0xC9,0x7F,0xD0,0x05,0xAE,0x69,0x02,0x86,0x30,0xA6,0x27,0x29,0xFF,0x60,0x6C,0xF5,0x02,0xA9,0x80,0x2C,0xA9,0x00,0x8D,0xF4,0x02,0x60,0xA5,0x2C,0xF0,0x13,0x30,0x04,0xA0,0xFF,0xD0,0x04,0xA5,0xAE,0xA4,0xAF,0x85,0xA8,0x84,0xA9,0xA2,0xA8,0x4C,0x7E,0xC4,0xA9,0x85,0xA0,0xCE,0x20,0xB0,0xCC,0xA5,0xAC,0xA4,0xAD,0x85,0xE9,0x84,0xEA,0x60,0x20,0xD2,0xD4,0xA2,0x36,0xA0,0x00,0x84,0x36,0xA9,0x40,0x20,0x8F,0xCD,0x60,0x46,0x2E,0xC9,0x22,0xD0,0x0B,0x20,0x25,0xD0,0xA9,0x3B,0x20,0x67,0xD0,0x20,0xB3,0xCC,0x20,0xD2,0xD4,0xA9,0x2C,0x85,0x34,0xA9,0x00,0x85,0x17,0x20,0x80,0xCD,0xA5,0x35,0xD0,0x16,0xA5,0x17,0xF0,0xF1,0x18,0x4C,0x80,0xC9,0x20,0xD7,0xCC,0x20,0xD4,0xCC,0x4C,0x92,0xC5,0xA6,0xB0,0xA4,0xB1,0xA9,0x98,0x85,0x2C,0x86,0xB2,0x84,0xB3,0x20,0x88,0xD1,0x85,0xB8,0x84,0xB9,0xA5,0xE9,0xA4,0xEA,0x85,0xBA,0x84,0xBB,0xA6,0xB2,0xA4,0xB3,0x86,0xE9,0x84,0xEA,0x20,0xE8,0x00,0xD0,0x1D,0x24,0x2C,0x50,0x0D,0x20,0x78,0xEB,0x10,0xFB,0x85,0x35,0xA2,0x34,0xA0,0x00,0xF0,0x08,0x30,0x71,0x20,0xD7,0xCC,0x20,0x80,0xCD,0x86,0xE9,0x84,0xEA,0x20,0xE2,0x00,0x24,0x28,0x10,0x31,0x24,0x2C,0x50,0x09,0xE8,0x86,0xE9,0xA9,0x00,0x85,0x24,0xF0,0x0C,0x85,0x24,0xC9,0x22,0xF0,0x07,0xA9,0x3A,0x85,0x24,0xA9,0x2C,0x18,0x85,0x25,0xA5,0xE9,0xA4,0xEA,0x69,0x00,0x90,0x01,0xC8,0x20,0xBB,0xD5,0x20,0x0D,0xD9,0x20,0x51,0xCB,0x4C,0x0E,0xCE,0x20,0xE7,0xDF,0xA5,0x29,0x20,0x39,0xCB,0x20,0xE8,0x00,0xF0,0x07,0xC9,0x2C,0xF0,0x03,0x4C,0x1F,0xCD,0xA5,0xE9,0xA4,0xEA,0x85,0xB2,0x84,0xB3,0xA5,0xBA,0xA4,0xBB,0x85,0xE9,0x84,0xEA,0x20,0xE8,0x00,0xF0,0x2C,0x20,0x65,0xD0,0x4C,0x95,0xCD,0x20,0x4E,0xCA,0xC8,0xAA,0xD0,0x12,0xA2,0x2A,0xC8,0xB1,0xE9,0xF0,0x69,0xC8,0xB1,0xE9,0x85,0xAE,0xC8,0xB1,0xE9,0xC8,0x85,0xAF,0xB1,0xE9,0xAA,0x20,0x3F,0xCA,0xE0,0x91,0xD0,0xDD,0x4C,0xCE,0xCD,0xA5,0xB2,0xA4,0xB3,0xA6,0x2C,0x10,0x03,0x4C,0x5C,0xC9,0xA0,0x00,0xB1,0xB2,0xF0,0x07,0xA9,0x74,0xA0,0xCE,0x4C,0xB0,0xCC,0x60,0x3F,0x45,0x58,0x54,0x52,0x41,0x20,0x49,0x47,0x4E,0x4F,0x52,0x45,0x44,0x0D,0x0A,0x00,0x3F,0x52,0x45,0x44,0x4F,0x20,0x46,0x52,0x4F,0x4D,0x20,0x53,0x54,0x41,0x52,0x54,0x0D,0x0A,0x00,0xD0,0x04,0xA0,0x00,0xF0,0x03,0x20,0x88,0xD1,0x85,0xB8,0x84,0xB9,0x20,0xC6,0xC3,0xF0,0x04,0xA2,0x00,0xF0,0x66,0x9A,0x8A,0x18,0x69,0x04,0x48,0x69,0x06,0x85,0x93,0x68,0xA0,0x01,0x20,0x7B,0xDE,0xBA,0xBD,0x09,0x01,0x85,0xD5,0xA5,0xB8,0xA4,0xB9,0x20,0x22,0xDB,0x20,0xA9,0xDE,0xA0,0x01,0x20,0x4E,0xDF,0xBA,0x38,0xFD,0x09,0x01,0xF0,0x17,0xBD,0x0F,0x01,0x85,0xA8,0xBD,0x10,0x01,0x85,0xA9,0xBD,0x12,0x01,0x85,0xE9,0xBD,0x11,0x01,0x85,0xEA,0x4C,0xC1,0xC8,0x8A,0x69,0x11,0xAA,0x9A,0x20,0xE8,0x00,0xC9,0x2C,0xD0,0xF1,0x20,0xE2,0x00,0x20,0x9E,0xCE,0x20,0x17,0xCF,0x18,0x24,0x38,0x24,0x28,0x30,0x03,0xB0,0x03,0x60,0xB0,0xFD,0xA2,0xA8,0x4C,0x7E,0xC4,0xA6,0xE9,0xD0,0x02,0xC6,0xEA,0xC6,0xE9,0xA2,0x00,0x24,0x48,0x8A,0x48,0xA9,0x01,0x20,0x37,0xC4,0x20,0x00,0xD0,0xA9,0x00,0x85,0xBC,0x20,0xE8,0x00,0x38,0xE9,0xD3,0x90,0x17,0xC9,0x03,0xB0,0x13,0xC9,0x01,0x2A,0x49,0x01,0x45,0xBC,0xC5,0xBC,0x90,0x61,0x85,0xBC,0x20,0xE2,0x00,0x4C,0x34,0xCF,0xA6,0xBC,0xD0,0x2C,0xB0,0x7F,0x69,0x07,0x90,0x7B,0x65,0x28,0xD0,0x03,0x4C,0x67,0xD7,0x69,0xFF,0x85,0x91,0x0A,0x65,0x91,0xA8,0x68,0xD9,0xCC,0xC0,0xB0,0x6B,0x20,0x06,0xCF,0x48,0x20,0x99,0xCF,0x68,0xA4,0xBA,0x10,0x17,0xAA,0xF0,0x5A,0xD0,0x63,0x46,0x28,0x8A,0x2A,0xA6,0xE9,0xD0,0x02,0xC6,0xEA,0xC6,0xE9,0xA0,0x1B,0x85,0xBC,0xD0,0xD7,0xD9,0xCC,0xC0,0xB0,0x4C,0x90,0xD9,0xB9,0xCE,0xC0,0x48,0xB9,0xCD,0xC0,0x48,0x20,0xAC,0xCF,0xA5,0xBC,0x4C,0x22,0xCF,0x4C,0x70,0xD0,0xA5,0xD5,0xBE,0xCC,0xC0,0xA8,0x68,0x85,0x91,0x68,0x85,0x92,0xE6,0x91,0xD0,0x02,0xE6,0x92,0x98,0x48,0x20,0xF4,0xDE,0xA5,0xD4,0x48,0xA5,0xD3,0x48,0xA5,0xD2,0x48,0xA5,0xD1,0x48,0xA5,0xD0,0x48,0x6C,0x91,0x00,0xA0,0xFF,0x68,0xF0,0x23,0xC9,0x64,0xF0,0x03,0x20,0x06,0xCF,0x84,0xBA,0x68,0x4A,0x85,0x2D,0x68,0x85,0xD8,0x68,0x85,0xD9,0x68,0x85,0xDA,0x68,0x85,0xDB,0x68,0x85,0xDC,0x68,0x85,0xDD,0x45,0xD5,0x85,0xDE,0xA5,0xD0,0x60,0xA9,0x00,0x85,0x28,0x20,0xE2,0x00,0xB0,0x03,0x4C,0xE7,0xDF,0x20,0x16,0xD2,0xB0,0x6B,0xC9,0x2E,0xF0,0xF4,0xC9,0x23,0xF0,0xF0,0xC9,0xCD,0xF0,0x58,0xC9,0xCC,0xF0,0xE3,0xC9,0x22,0xD0,0x0F,0xA5,0xE9,0xA4,0xEA,0x69,0x00,0x90,0x01,0xC8,0x20,0xB5,0xD5,0x4C,0x0D,0xD9,0xC9,0xCA,0xD0,0x13,0xA0,0x18,0xD0,0x3B,0x20,0xA9,0xD2,0xA5,0xD4,0x49,0xFF,0xA8,0xA5,0xD3,0x49,0xFF,0x4C,0x99,0xD4,0xC9,0xC4,0xD0,0x03,0x4C,0x22,0xD5,0xC9,0xD6,0x90,0x03,0x4C,0xA0,0xD0,0x20,0x62,0xD0,0x20,0x17,0xCF,0xA9,0x29,0x2C,0xA9,0x28,0x2C,0xA9,0x2C,0xA0,0x00,0xD1,0xE9,0xD0,0x03,0x4C,0xE2,0x00,0xA2,0x10,0x4C,0x7E,0xC4,0xA0,0x15,0x68,0x68,0x4C,0x73,0xCF,0x20,0x88,0xD1,0x85,0xD3,0x84,0xD4,0xA6,0x28,0xF0,0x05,0xA2,0x00,0x86,0xDF,0x60,0xA6,0x29,0x10,0x0D,0xA0,0x00,0xB1,0xD3,0xAA,0xC8,0xB1,0xD3,0xA8,0x8A,0x4C,0x99,0xD4,0x4C,0x7B,0xDE,0x0A,0x48,0xAA,0x20,0xE2,0x00,0xE0,0xDB,0x90,0x24,0xE0,0xE7,0x90,0x23,0x20,0x62,0xD0,0x20,0x17,0xCF,0x20,0x65,0xD0,0x20,0x08,0xCF,0x68,0xAA,0xA5,0xD4,0x48,0xA5,0xD3,0x48,0x8A,0x48,0x20,0xC8,0xD8,0x68,0xA8,0x8A,0x48,0x4C,0xD3,0xD0,0x20,0x59,0xD0,0x68,0xA8,0xB9,0xDE,0xBF,0x85,0xC4,0xB9,0xDF,0xBF,0x85,0xC5,0x20,0xC3,0x00,0x4C,0x06,0xCF,0xA0,0xFF,0x2C,0xA0,0x00,0x84,0x26,0x20,0xA9,0xD2,0xA5,0xD3,0x45,0x26,0x85,0x24,0xA5,0xD4,0x45,0x26,0x85,0x25,0x20,0xD5,0xDE,0x20,0xA9,0xD2,0xA5,0xD4,0x45,0x26,0x25,0x25,0x45,0x26,0xA8,0xA5,0xD3,0x45,0x26,0x25,0x24,0x45,0x26,0x4C,0x99,0xD4,0x20,0x09,0xCF,0xB0,0x13,0xA5,0xDD,0x09,0x7F,0x25,0xD9,0x85,0xD9,0xA9,0xD8,0xA0,0x00,0x20,0x4C,0xDF,0xAA,0x4C,0x5E,0xD1,0xA9,0x00,0x85,0x28,0xC6,0xBC,0x20,0xD0,0xD7,0x85,0xD0,0x86,0xD1,0x84,0xD2,0xA5,0xDB,0xA4,0xDC,0x20,0xD4,0xD7,0x86,0xDB,0x84,0xDC,0xAA,0x38,0xE5,0xD0,0xF0,0x08,0xA9,0x01,0x90,0x04,0xA6,0xD0,0xA9,0xFF,0x85,0xD5,0xA0,0xFF,0xE8,0xC8,0xCA,0xD0,0x07,0xA6,0xD5,0x30,0x0F,0x18,0x90,0x0C,0xB1,0xDB,0xD1,0xD1,0xF0,0xEF,0xA2,0xFF,0xB0,0x02,0xA2,0x01,0xE8,0x8A,0x2A,0x25,0x2D,0xF0,0x02,0xA9,0xFF,0x4C,0x24,0xDF,0x20,0x65,0xD0,0xAA,0x20,0x8D,0xD1,0x20,0xE8,0x00,0xD0,0xF4,0x60,0xA2,0x00,0x20,0xE8,0x00,0x86,0x27,0x85,0xB4,0x20,0xE8,0x00,0x20,0x16,0xD2,0xB0,0x03,0x4C,0x70,0xD0,0xA2,0x00,0x86,0x28,0x86,0x29,0x20,0xE2,0x00,0x90,0x05,0x20,0x16,0xD2,0x90,0x0B,0xAA,0x20,0xE2,0x00,0x90,0xFB,0x20,0x16,0xD2,0xB0,0xF6,0xC9,0x24,0xD0,0x06,0xA9,0xFF,0x85,0x28,0xD0,0x10,0xC9,0x25,0xD0,0x13,0xA5,0x2B,0x30,0xD0,0xA9,0x80,0x85,0x29,0x05,0xB4,0x85,0xB4,0x8A,0x09,0x80,0xAA,0x20,0xE2,0x00,0x86,0xB5,0x38,0x05,0x2B,0xE9,0x28,0xD0,0x03,0x4C,0xBB,0xD2,0x24,0x2B,0x70,0xF9,0xA9,0x00,0x85,0x2B,0xA5,0x9C,0xA6,0x9D,0xA0,0x00,0x86,0xCF,0x85,0xCE,0xE4,0x9F,0xD0,0x04,0xC5,0x9E,0xF0,0x24,0xA5,0xB4,0xD1,0xCE,0xD0,0x08,0xA5,0xB5,0xC8,0xD1,0xCE,0xF0,0x6C,0x88,0x18,0xA5,0xCE,0x69,0x07,0x90,0xE1,0xE8,0xD0,0xDC,0xC9,0x41,0x90,0x07,0xE9,0x5B,0x38,0xE9,0xA5,0xB0,0x00,0x60,0x68,0x48,0xC9,0x7E,0xD0,0x0D,0xBA,0xBD,0x02,0x01,0xC9,0xD0,0xD0,0x05,0xA9,0x07,0xA0,0xE2,0x60,0xA5,0x9E,0xA4,0x9F,0x85,0xCE,0x84,0xCF,0xA5,0xA0,0xA4,0xA1,0x85,0xC9,0x84,0xCA,0x18,0x69,0x07,0x90,0x01,0xC8,0x85,0xC7,0x84,0xC8,0x20,0xF4,0xC3,0xA5,0xC7,0xA4,0xC8,0xC8,0x85,0x9E,0x84,0x9F,0xA0,0x00,0xA5,0xB4,0x91,0xCE,0xC8,0xA5,0xB5,0x91,0xCE,0xA9,0x00,0xC8,0x91,0xCE,0xC8,0x91,0xCE,0xC8,0x91,0xCE,0xC8,0x91,0xCE,0xC8,0x91,0xCE,0xA5,0xCE,0x18,0x69,0x02,0xA4,0xCF,0x90,0x01,0xC8,0x85,0xB6,0x84,0xB7,0x60,0xA5,0x26,0x0A,0x69,0x05,0x65,0xCE,0xA4,0xCF,0x90,0x01,0xC8,0x85,0xC7,0x84,0xC8,0x60,0x90,0x80,0x00,0x00,0x00,0x20,0xE2,0x00,0x20,0x17,0xCF,0x20,0x06,0xCF,0xA5,0xD5,0x30,0x0D,0xA5,0xD0,0xC9,0x90,0x90,0x09,0xA9,0x97,0xA0,0xD2,0x20,0x4C,0xDF,0xD0,0x7E,0x4C,0x8C,0xDF,0xA5,0x2B,0xD0,0x47,0xA5,0x27,0x05,0x29,0x48,0xA5,0x28,0x48,0xA0,0x00,0x98,0x48,0xA5,0xB5,0x48,0xA5,0xB4,0x48,0x20,0x9C,0xD2,0x68,0x85,0xB4,0x68,0x85,0xB5,0x68,0xA8,0xBA,0xBD,0x02,0x01,0x48,0xBD,0x01,0x01,0x48,0xA5,0xD3,0x9D,0x02,0x01,0xA5,0xD4,0x9D,0x01,0x01,0xC8,0x20,0xE8,0x00,0xC9,0x2C,0xF0,0xD2,0x84,0x26,0x20,0x5F,0xD0,0x68,0x85,0x28,0x68,0x85,0x29,0x29,0x7F,0x85,0x27,0xA6,0x9E,0xA5,0x9F,0x86,0xCE,0x85,0xCF,0xC5,0xA1,0xD0,0x04,0xE4,0xA0,0xF0,0x3F,0xA0,0x00,0xB1,0xCE,0xC8,0xC5,0xB4,0xD0,0x06,0xA5,0xB5,0xD1,0xCE,0xF0,0x16,0xC8,0xB1,0xCE,0x18,0x65,0xCE,0xAA,0xC8,0xB1,0xCE,0x65,0xCF,0x90,0xD7,0xA2,0x6B,0x2C,0xA2,0x35,0x4C,0x7E,0xC4,0xA2,0x78,0xA5,0x27,0xD0,0xF7,0xA5,0x2B,0xF0,0x02,0x38,0x60,0x20,0x86,0xD2,0xA5,0x26,0xA0,0x04,0xD1,0xCE,0xD0,0xE1,0x4C,0xEB,0xD3,0xA5,0x2B,0xF0,0x08,0x20,0x3D,0xE9,0xA2,0x2A,0x4C,0x7E,0xC4,0x20,0x86,0xD2,0x20,0x44,0xC4,0xA9,0x00,0xA8,0x85,0xE1,0xA2,0x05,0xA5,0xB4,0x91,0xCE,0x10,0x01,0xCA,0xC8,0xA5,0xB5,0x91,0xCE,0x10,0x02,0xCA,0xCA,0x86,0xE0,0xA5,0x26,0xC8,0xC8,0xC8,0x91,0xCE,0xA2,0x0B,0xA9,0x00,0x24,0x27,0x50,0x08,0x68,0x18,0x69,0x01,0xAA,0x68,0x69,0x00,0xC8,0x91,0xCE,0xC8,0x8A,0x91,0xCE,0x20,0x4D,0xD4,0x86,0xE0,0x85,0xE1,0xA4,0x91,0xC6,0x26,0xD0,0xDC,0x65,0xC8,0xB0,0x5D,0x85,0xC8,0xA8,0x8A,0x65,0xC7,0x90,0x03,0xC8,0xF0,0x52,0x20,0x44,0xC4,0x85,0xA0,0x84,0xA1,0xA9,0x00,0xE6,0xE1,0xA4,0xE0,0xF0,0x05,0x88,0x91,0xC7,0xD0,0xFB,0xC6,0xC8,0xC6,0xE1,0xD0,0xF5,0xE6,0xC8,0x38,0xA5,0xA0,0xE5,0xCE,0xA0,0x02,0x91,0xCE,0xA5,0xA1,0xC8,0xE5,0xCF,0x91,0xCE,0xA5,0x27,0xD0,0x62,0xC8,0xB1,0xCE,0x85,0x26,0xA9,0x00,0x85,0xE0,0x85,0xE1,0xC8,0x68,0xAA,0x85,0xD3,0x68,0x85,0xD4,0xD1,0xCE,0x90,0x0E,0xD0,0x06,0xC8,0x8A,0xD1,0xCE,0x90,0x07,0x4C,0x33,0xD3,0x4C,0x7C,0xC4,0xC8,0xA5,0xE1,0x05,0xE0,0x18,0xF0,0x0A,0x20,0x4D,0xD4,0x8A,0x65,0xD3,0xAA,0x98,0xA4,0x91,0x65,0xD4,0x86,0xE0,0xC6,0x26,0xD0,0xCA,0x85,0xE1,0xA2,0x05,0xA5,0xB4,0x10,0x01,0xCA,0xA5,0xB5,0x10,0x02,0xCA,0xCA,0x86,0x97,0xA9,0x00,0x20,0x56,0xD4,0x8A,0x65,0xC7,0x85,0xB6,0x98,0x65,0xC8,0x85,0xB7,0xA8,0xA5,0xB6,0x60,0x84,0x91,0xB1,0xCE,0x85,0x97,0x88,0xB1,0xCE,0x85,0x98,0xA9,0x10,0x85,0xCC,0xA2,0x00,0xA0,0x00,0x8A,0x0A,0xAA,0x98,0x2A,0xA8,0xB0,0xA4,0x06,0xE0,0x26,0xE1,0x90,0x0B,0x18,0x8A,0x65,0x97,0xAA,0x98,0x65,0x98,0xA8,0xB0,0x93,0xC6,0xCC,0xD0,0xE3,0x60,0xA5,0x28,0xF0,0x03,0x20,0xD0,0xD7,0x20,0x50,0xD6,0x38,0xA5,0xA2,0xE5,0xA0,0xA8,0xA5,0xA3,0xE5,0xA1,0xA2,0x00,0x86,0x28,0x4C,0x40,0xDF,0xA2,0x00,0x86,0x28,0x85,0xD1,0x84,0xD2,0xA2,0x90,0x4C,0x2C,0xDF,0x20,0xCB,0xD8,0x8A,0xF0,0x08,0xAC,0x58,0x02,0x2C,0xF1,0x02,0x10,0x02,0xA4,0x30,0xA9,0x00,0xF0,0xDF,0xC9,0xD9,0xD0,0x21,0x20,0xE2,0x00,0xA9,0xD4,0x20,0x67,0xD0,0x20,0x53,0xE8,0xA5,0x33,0xA4,0x34,0x85,0x22,0x84,0x23,0x60,0xA6,0xA9,0xE8,0xD0,0xFA,0xA2,0x95,0x2C,0xA2,0xE5,0x4C,0x7E,0xC4,0x20,0x0D,0xD5,0x20,0xD2,0xD4,0x20,0x62,0xD0,0xA9,0x80,0x85,0x2B,0x20,0x88,0xD1,0x20,0x06,0xCF,0x20,0x5F,0xD0,0xA9,0xD4,0x20,0x67,0xD0,0x48,0xA5,0xB7,0x48,0xA5,0xB6,0x48,0xA5,0xEA,0x48,0xA5,0xE9,0x48,0x20,0x3C,0xCA,0x4C,0x7D,0xD5,0xA9,0xC4,0x20,0x67,0xD0,0x09,0x80,0xA2,0x80,0x86,0x2B,0x20,0x8F,0xD1,0x85,0xBD,0x84,0xBE,0x4C,0x06,0xCF,0x20,0x0D,0xD5,0xA5,0xBE,0x48,0xA5,0xBD,0x48,0x20,0x59,0xD0,0x20,0x06,0xCF,0x68,0x85,0xBD,0x68,0x85,0xBE,0xA0,0x02,0xB1,0xBD,0x85,0xB6,0xAA,0xC8,0xB1,0xBD,0xF0,0x97,0x85,0xB7,0xC8,0xB1,0xB6,0x48,0x88,0x10,0xFA,0xA4,0xB7,0x20,0xAD,0xDE,0xA5,0xEA,0x48,0xA5,0xE9,0x48,0xB1,0xBD,0x85,0xE9,0xC8,0xB1,0xBD,0x85,0xEA,0xA5,0xB7,0x48,0xA5,0xB6,0x48,0x20,0x03,0xCF,0x68,0x85,0xBD,0x68,0x85,0xBE,0x20,0xE8,0x00,0xF0,0x03,0x4C,0x70,0xD0,0x68,0x85,0xE9,0x68,0x85,0xEA,0xA0,0x00,0x68,0x91,0xBD,0x68,0xC8,0x91,0xBD,0x68,0xC8,0x91,0xBD,0x68,0xC8,0x91,0xBD,0x68,0xC8,0x91,0xBD,0x60,0x20,0x06,0xCF,0xA0,0x00,0x20,0xD7,0xE0,0x68,0x68,0xA9,0xFF,0xA0,0x00,0xF0,0x12,0xA6,0xD3,0xA4,0xD4,0x86,0xBF,0x84,0xC0,0x20,0x1E,0xD6,0x86,0xD1,0x84,0xD2,0x85,0xD0,0x60,0xA2,0x22,0x86,0x24,0x86,0x25,0x85,0xDE,0x84,0xDF,0x85,0xD1,0x84,0xD2,0xA0,0xFF,0xC8,0xB1,0xDE,0xF0,0x0C,0xC5,0x24,0xF0,0x04,0xC5,0x25,0xD0,0xF3,0xC9,0x22,0xF0,0x01,0x18,0x84,0xD0,0x98,0x65,0xDE,0x85,0xE0,0xA6,0xDF,0x90,0x01,0xE8,0x86,0xE1,0xA5,0xDF,0xD0,0x0B,0x98,0x20,0xA3,0xD5,0xA6,0xDE,0xA4,0xDF,0x20,0xB2,0xD7,0xA6,0x85,0xE0,0x91,0xD0,0x05,0xA2,0xC4,0x4C,0x7E,0xC4,0xA5,0xD0,0x95,0x00,0xA5,0xD1,0x95,0x01,0xA5,0xD2,0x95,0x02,0xA0,0x00,0x86,0xD3,0x84,0xD4,0x84,0xDF,0x88,0x84,0x28,0x86,0x86,0xE8,0xE8,0xE8,0x86,0x85,0x60,0x46,0x2A,0x48,0x49,0xFF,0x38,0x65,0xA2,0xA4,0xA3,0xB0,0x01,0x88,0xC4,0xA1,0x90,0x11,0xD0,0x04,0xC5,0xA0,0x90,0x0B,0x85,0xA2,0x84,0xA3,0x85,0xA4,0x84,0xA5,0xAA,0x68,0x60,0xA2,0x4D,0xA5,0x2A,0x30,0xB6,0x20,0x50,0xD6,0xA9,0x80,0x85,0x2A,0x68,0xD0,0xD0,0xA6,0xA6,0xA5,0xA7,0x86,0xA2,0x85,0xA3,0xA0,0x00,0x84,0xBE,0x84,0xBD,0xA5,0xA0,0xA6,0xA1,0x85,0xCE,0x86,0xCF,0xA9,0x88,0xA2,0x00,0x85,0x91,0x86,0x92,0xC5,0x85,0xF0,0x05,0x20,0xF1,0xD6,0xF0,0xF7,0xA9,0x07,0x85,0xC2,0xA5,0x9C,0xA6,0x9D,0x85,0x91,0x86,0x92,0xE4,0x9F,0xD0,0x04,0xC5,0x9E,0xF0,0x05,0x20,0xE7,0xD6,0xF0,0xF3,0x85,0xC7,0x86,0xC8,0xA9,0x03,0x85,0xC2,0xA5,0xC7,0xA6,0xC8,0xE4,0xA1,0xD0,0x07,0xC5,0xA0,0xD0,0x03,0x4C,0x30,0xD7,0x85,0x91,0x86,0x92,0xA0,0x00,0xB1,0x91,0xAA,0xC8,0xB1,0x91,0x08,0xC8,0xB1,0x91,0x65,0xC7,0x85,0xC7,0xC8,0xB1,0x91,0x65,0xC8,0x85,0xC8,0x28,0x10,0xD3,0x8A,0x30,0xD0,0xC8,0xB1,0x91,0xA0,0x00,0x0A,0x69,0x05,0x65,0x91,0x85,0x91,0x90,0x02,0xE6,0x92,0xA6,0x92,0xE4,0xC8,0xD0,0x04,0xC5,0xC7,0xF0,0xBA,0x20,0xF1,0xD6,0xF0,0xF3,0xB1,0x91,0x30,0x35,0xC8,0xB1,0x91,0x10,0x30,0xC8,0xB1,0x91,0xF0,0x2B,0xC8,0xB1,0x91,0xAA,0xC8,0xB1,0x91,0xC5,0xA3,0x90,0x06,0xD0,0x1E,0xE4,0xA2,0xB0,0x1A,0xC5,0xCF,0x90,0x16,0xD0,0x04,0xE4,0xCE,0x90,0x10,0x86,0xCE,0x85,0xCF,0xA5,0x91,0xA6,0x92,0x85,0xBD,0x86,0xBE,0xA5,0xC2,0x85,0xC4,0xA5,0xC2,0x18,0x65,0x91,0x85,0x91,0x90,0x02,0xE6,0x92,0xA6,0x92,0xA0,0x00,0x60,0xA5,0xBE,0x05,0xBD,0xF0,0xF5,0xA5,0xC4,0x29,0x04,0x4A,0xA8,0x85,0xC4,0xB1,0xBD,0x65,0xCE,0x85,0xC9,0xA5,0xCF,0x69,0x00,0x85,0xCA,0xA5,0xA2,0xA6,0xA3,0x85,0xC7,0x86,0xC8,0x20,0xFB,0xC3,0xA4,0xC4,0xC8,0xA5,0xC7,0x91,0xBD,0xAA,0xE6,0xC8,0xA5,0xC8,0xC8,0x91,0xBD,0x4C,0x54,0xD6,0xA5,0xD4,0x48,0xA5,0xD3,0x48,0x20,0x00,0xD0,0x20,0x08,0xCF,0x68,0x85,0xDE,0x68,0x85,0xDF,0xA0,0x00,0xB1,0xDE,0x18,0x71,0xD3,0x90,0x05,0xA2,0xB5,0x4C,0x7E,0xC4,0x20,0xA3,0xD5,0x20,0xA4,0xD7,0xA5,0xBF,0xA4,0xC0,0x20,0xD4,0xD7,0x20,0xB6,0xD7,0xA5,0xDE,0xA4,0xDF,0x20,0xD4,0xD7,0x20,0xF4,0xD5,0x4C,0x31,0xCF,0xA0,0x00,0xB1,0xDE,0x48,0xC8,0xB1,0xDE,0xAA,0xC8,0xB1,0xDE,0xA8,0x68,0x86,0x91,0x84,0x92,0xA8,0xF0,0x0A,0x48,0x88,0xB1,0x91,0x91,0xA4,0x98,0xD0,0xF8,0x68,0x18,0x65,0xA4,0x85,0xA4,0x90,0x02,0xE6,0xA5,0x60,0x20,0x08,0xCF,0xA5,0xD3,0xA4,0xD4,0x85,0x91,0x84,0x92,0x20,0x05,0xD8,0x08,0xA0,0x00,0xB1,0x91,0x48,0xC8,0xB1,0x91,0xAA,0xC8,0xB1,0x91,0xA8,0x68,0x28,0xD0,0x13,0xC4,0xA3,0xD0,0x0F,0xE4,0xA2,0xD0,0x0B,0x48,0x18,0x65,0xA2,0x85,0xA2,0x90,0x02,0xE6,0xA3,0x68,0x86,0x91,0x84,0x92,0x60,0xC4,0x87,0xD0,0x0C,0xC5,0x86,0xD0,0x08,0x85,0x85,0xE9,0x03,0x85,0x86,0xA0,0x00,0x60,0x20,0xCB,0xD8,0x8A,0x48,0xA9,0x01,0x20,0xAB,0xD5,0x68,0xA0,0x00,0x91,0xD1,0x68,0x68,0x4C,0xF4,0xD5,0x20,0x8B,0xD8,0xD1,0xBF,0x98,0x90,0x04,0xB1,0xBF,0xAA,0x98,0x48,0x8A,0x48,0x20,0xAB,0xD5,0xA5,0xBF,0xA4,0xC0,0x20,0xD4,0xD7,0x68,0xA8,0x68,0x18,0x65,0x91,0x85,0x91,0x90,0x02,0xE6,0x92,0x98,0x20,0xB6,0xD7,0x4C,0xF4,0xD5,0x20,0x8B,0xD8,0x18,0xF1,0xBF,0x49,0xFF,0x4C,0x30,0xD8,0xA9,0xFF,0x85,0xD4,0x20,0xE8,0x00,0xC9,0x29,0xF0,0x06,0x20,0x65,0xD0,0x20,0xC8,0xD8,0x20,0x8B,0xD8,0xF0,0x4B,0xCA,0x8A,0x48,0x18,0xA2,0x00,0xF1,0xBF,0xB0,0xB6,0x49,0xFF,0xC5,0xD4,0x90,0xB1,0xA5,0xD4,0xB0,0xAD,0x20,0x5F,0xD0,0x68,0xA8,0x68,0x85,0xC4,0x68,0x68,0x68,0xAA,0x68,0x85,0xBF,0x68,0x85,0xC0,0xA5,0xC4,0x48,0x98,0x48,0xA0,0x00,0x8A,0x60,0x20,0xAC,0xD8,0x4C,0xB6,0xD4,0x20,0xCD,0xD7,0xA2,0x00,0x86,0x28,0xA8,0x60,0x20,0xAC,0xD8,0xF0,0x08,0xA0,0x00,0xB1,0x91,0xA8,0x4C,0xB6,0xD4,0x4C,0x36,0xD3,0x20,0xE2,0x00,0x20,0x03,0xCF,0x20,0xA2,0xD2,0xA6,0xD3,0xD0,0xF0,0xA6,0xD4,0x4C,0xE8,0x00,0x20,0xAC,0xD8,0xD0,0x03,0x4C,0xB2,0xDB,0xA6,0xE9,0xA4,0xEA,0x86,0xE0,0x84,0xE1,0xA6,0x91,0x86,0xE9,0x18,0x65,0x91,0x85,0x93,0xA6,0x92,0x86,0xEA,0x90,0x01,0xE8,0x86,0x94,0xA0,0x00,0xB1,0x93,0x48,0xA9,0x00,0x91,0x93,0x20,0xE8,0x00,0x20,0xE7,0xDF,0x68,0xA0,0x00,0x91,0x93,0xA6,0xE0,0xA4,0xE1,0x86,0xE9,0x84,0xEA,0x60,0x20,0x03,0xCF,0x20,0x22,0xD9,0x20,0x65,0xD0,0x4C,0xC8,0xD8,0xA5,0xD5,0x30,0x9C,0xA5,0xD0,0xC9,0x91,0xB0,0x96,0x20,0x8C,0xDF,0xA5,0xD3,0xA4,0xD4,0x84,0x33,0x85,0x34,0x60,0xA5,0x34,0x48,0xA5,0x33,0x48,0x20,0x22,0xD9,0xA0,0x00,0xB1,0x33,0xA8,0x68,0x85,0x33,0x68,0x85,0x34,0x4C,0xB6,0xD4,0x20,0x16,0xD9,0x8A,0xA0,0x00,0x91,0x33,0x60,0x20,0x03,0xCF,0x20,0x22,0xD9,0xA4,0x33,0xA6,0x34,0xA9,0x02,0x4C,0xC9,0xEE,0x20,0x53,0xE8,0xA5,0x33,0xA4,0x34,0x85,0x1D,0x84,0x1E,0x20,0x65,0xD0,0x20,0x53,0xE8,0xA0,0x01,0xB9,0x33,0x00,0x91,0x1D,0x88,0x10,0xF8,0x60,0x20,0x22,0xD9,0xA0,0x01,0xB1,0x33,0x48,0x88,0xB1,0x33,0xA8,0x68,0x4C,0x40,0xDF,0x48,0x4A,0x4A,0x4A,0x4A,0x20,0x9C,0xD9,0x68,0x29,0x0F,0x09,0x30,0xC9,0x3A,0x90,0x02,0x69,0x06,0xC9,0x30,0xD0,0x04,0xA4,0x2F,0xF0,0x06,0x85,0x2F,0x9D,0x00,0x01,0xE8,0x60,0x20,0x22,0xD9,0xA2,0x00,0x86,0x2F,0xA9,0x23,0x85,0xFF,0xA5,0x34,0x20,0x93,0xD9,0xA5,0x33,0x20,0x93,0xD9,0x8A,0xD0,0x06,0xA9,0x30,0x9D,0x00,0x01,0xE8,0xA9,0x00,0x9D,0x00,0x01,0x4C,0x9B,0xD5,0x4C,0x70,0xD0,0x20,0x21,0xEC,0x20,0xC8,0xD8,0x8A,0xF0,0x06,0xCA,0xD0,0xF1,0xA9,0x09,0x2C,0xA9,0x08,0xA2,0x10,0x8E,0xF8,0x02,0xA2,0x1B,0x48,0x8A,0x20,0x0C,0xDA,0xAD,0xF8,0x02,0xA0,0x27,0x91,0x1F,0x88,0xD0,0xFB,0x68,0x91,0x1F,0xCA,0xD0,0xEB,0x60,0x20,0x31,0xF7,0x84,0x20,0x18,0x69,0x80,0x48,0x85,0x1F,0xA9,0xBB,0x65,0x20,0x85,0x20,0x68,0x60,0x4C,0xC2,0xD8,0x20,0xF6,0xDA,0x20,0xC8,0xD8,0xE0,0x28,0xB0,0xF3,0x8E,0xF8,0x02,0x20,0x65,0xD0,0x20,0xC8,0xD8,0xE0,0x1B,0xB0,0xE6,0xE8,0x8A,0x20,0x0C,0xDA,0x60,0x20,0x62,0xD0,0x20,0x22,0xDA,0x20,0x5F,0xD0,0xAC,0xF8,0x02,0xB1,0x1F,0xA8,0x4C,0xB6,0xD4,0x20,0x22,0xDA,0x20,0x65,0xD0,0x20,0x17,0xCF,0x24,0x28,0x10,0x1D,0x20,0xD0,0xD7,0xAA,0x18,0xAD,0xF8,0x02,0x65,0x1F,0x90,0x02,0xE6,0x20,0x85,0x1F,0xA0,0x00,0xE8,0xCA,0xF0,0x10,0xB1,0x91,0x91,0x1F,0xC8,0xD0,0xF6,0x20,0xCB,0xD8,0x8A,0xAC,0xF8,0x02,0x91,0x1F,0x60,0xD0,0x17,0xA9,0x03,0x20,0x37,0xC4,0xA5,0xEA,0x48,0xA5,0xE9,0x48,0xA5,0xA9,0x48,0xA5,0xA8,0x48,0xA9,0x8B,0x48,0x4C,0xC1,0xC8,0x4C,0x70,0xD0,0xA9,0xFF,0x85,0xB9,0x20,0xC6,0xC3,0x9A,0xC9,0x8B,0xF0,0x05,0xA2,0xF5,0x4C,0x7E,0xC4,0xC0,0x10,0xD0,0x05,0x84,0xD0,0x98,0xD0,0x06,0x20,0xE8,0x00,0x20,0x17,0xCF,0x68,0xA5,0xD0,0xF0,0x05,0x68,0x68,0x68,0x68,0x60,0x68,0x85,0xA8,0x68,0x85,0xA9,0x68,0x85,0xE9,0x68,0x85,0xEA,0x4C,0x8C,0xDA,0x20,0x78,0xEB,0x08,0x48,0x10,0x03,0xA9,0x01,0x2C,0xA9,0x00,0x20,0xAB,0xD5,0x68,0x28,0x10,0x04,0xA0,0x00,0x91,0xD1,0x68,0x68,0x4C,0xF4,0xD5,0xAD,0xC0,0x02,0x29,0x01,0xF0,0x05,0xA2,0xA3,0x4C,0x7E,0xC4,0x60,0x60,0xA9,0x05,0xA0,0xE2,0x4C,0x22,0xDB,0x20,0x51,0xDD,0xA5,0xD5,0x49,0xFF,0x85,0xD5,0x45,0xDD,0x85,0xDE,0xA5,0xD0,0x4C,0x25,0xDB,0x20,0x54,0xDC,0x90,0x3C,0x20,0x51,0xDD,0xD0,0x03,0x4C,0xD5,0xDE,0xA6,0xDF,0x86,0xC5,0xA2,0xD8,0xA5,0xD8,0xA8,0xF0,0xCE,0x38,0xE5,0xD0,0xF0,0x24,0x90,0x12,0x84,0xD0,0xA4,0xDD,0x84,0xD5,0x49,0xFF,0x69,0x00,0xA0,0x00,0x84,0xC5,0xA2,0xD0,0xD0,0x04,0xA0,0x00,0x84,0xDF,0xC9,0xF9,0x30,0xC7,0xA8,0xA5,0xDF,0x56,0x01,0x20,0x6B,0xDC,0x24,0xDE,0x10,0x57,0xA0,0xD0,0xE0,0xD8,0xF0,0x02,0xA0,0xD8,0x38,0x49,0xFF,0x65,0xC5,0x85,0xDF,0xB9,0x04,0x00,0xF5,0x04,0x85,0xD4,0xB9,0x03,0x00,0xF5,0x03,0x85,0xD3,0xB9,0x02,0x00,0xF5,0x02,0x85,0xD2,0xB9,0x01,0x00,0xF5,0x01,0x85,0xD1,0xB0,0x03,0x20,0x02,0xDC,0xA0,0x00,0x98,0x18,0xA6,0xD1,0xD0,0x4A,0xA6,0xD2,0x86,0xD1,0xA6,0xD3,0x86,0xD2,0xA6,0xD4,0x86,0xD3,0xA6,0xDF,0x86,0xD4,0x84,0xDF,0x69,0x08,0xC9,0x28,0xD0,0xE4,0xA9,0x00,0x85,0xD0,0x85,0xD5,0x60,0x65,0xC5,0x85,0xDF,0xA5,0xD4,0x65,0xDC,0x85,0xD4,0xA5,0xD3,0x65,0xDB,0x85,0xD3,0xA5,0xD2,0x65,0xDA,0x85,0xD2,0xA5,0xD1,0x65,0xD9,0x85,0xD1,0x4C,0xF1,0xDB,0x69,0x01,0x06,0xDF,0x26,0xD4,0x26,0xD3,0x26,0xD2,0x26,0xD1,0x10,0xF2,0x38,0xE5,0xD0,0xB0,0xC7,0x49,0xFF,0x69,0x01,0x85,0xD0,0x90,0x0E,0xE6,0xD0,0xF0,0x42,0x66,0xD1,0x66,0xD2,0x66,0xD3,0x66,0xD4,0x66,0xDF,0x60,0xA5,0xD5,0x49,0xFF,0x85,0xD5,0xA5,0xD1,0x49,0xFF,0x85,0xD1,0xA5,0xD2,0x49,0xFF,0x85,0xD2,0xA5,0xD3,0x49,0xFF,0x85,0xD3,0xA5,0xD4,0x49,0xFF,0x85,0xD4,0xA5,0xDF,0x49,0xFF,0x85,0xDF,0xE6,0xDF,0xD0,0x0E,0xE6,0xD4,0xD0,0x0A,0xE6,0xD3,0xD0,0x06,0xE6,0xD2,0xD0,0x02,0xE6,0xD1,0x60,0xA2,0x45,0x4C,0x7E,0xC4,0xA2,0x94,0xB4,0x04,0x84,0xDF,0xB4,0x03,0x94,0x04,0xB4,0x02,0x94,0x03,0xB4,0x01,0x94,0x02,0xA4,0xD7,0x94,0x01,0x69,0x08,0x30,0xE8,0xF0,0xE6,0xE9,0x08,0xA8,0xA5,0xDF,0xB0,0x14,0x16,0x01,0x90,0x02,0xF6,0x01,0x76,0x01,0x76,0x01,0x76,0x02,0x76,0x03,0x76,0x04,0x6A,0xC8,0xD0,0xEC,0x18,0x60,0x82,0x13,0x5D,0x8D,0xDE,0x82,0x49,0x0F,0xDA,0x9E,0x81,0x00,0x00,0x00,0x00,0x03,0x7F,0x5E,0x56,0xCB,0x79,0x80,0x13,0x9B,0x0B,0x64,0x80,0x76,0x38,0x93,0x16,0x82,0x38,0xAA,0x3B,0x20,0x80,0x35,0x04,0xF3,0x34,0x81,0x35,0x04,0xF3,0x34,0x80,0x80,0x00,0x00,0x00,0x80,0x31,0x72,0x17,0xF8,0x20,0x13,0xDF,0xF0,0x02,0x10,0x03,0x4C,0x36,0xD3,0xA5,0xD0,0xE9,0x7F,0x48,0xA9,0x80,0x85,0xD0,0xA9,0x9B,0xA0,0xDC,0x20,0x22,0xDB,0xA9,0xA0,0xA0,0xDC,0x20,0xE4,0xDD,0xA9,0x81,0xA0,0xDC,0x20,0x0B,0xDB,0xA9,0x86,0xA0,0xDC,0x20,0xFD,0xE2,0xA9,0xA5,0xA0,0xDC,0x20,0x22,0xDB,0x68,0x20,0x76,0xE0,0xA9,0xAA,0xA0,0xDC,0x20,0x51,0xDD,0xD0,0x03,0x4C,0x50,0xDD,0x20,0x7C,0xDD,0xA9,0x00,0x85,0x95,0x85,0x96,0x85,0x97,0x85,0x98,0xA5,0xDF,0x20,0x1E,0xDD,0xA5,0xD4,0x20,0x1E,0xDD,0xA5,0xD3,0x20,0x1E,0xDD,0xA5,0xD2,0x20,0x1E,0xDD,0xA5,0xD1,0x20,0x23,0xDD,0x4C,0x64,0xDE,0xD0,0x03,0x4C,0x3E,0xDC,0x4A,0x09,0x80,0xA8,0x90,0x19,0x18,0xA5,0x98,0x65,0xDC,0x85,0x98,0xA5,0x97,0x65,0xDB,0x85,0x97,0xA5,0x96,0x65,0xDA,0x85,0x96,0xA5,0x95,0x65,0xD9,0x85,0x95,0x66,0x95,0x66,0x96,0x66,0x97,0x66,0x98,0x66,0xDF,0x98,0x4A,0xD0,0xD6,0x60,0x85,0x91,0x84,0x92,0xA0,0x04,0xB1,0x91,0x85,0xDC,0x88,0xB1,0x91,0x85,0xDB,0x88,0xB1,0x91,0x85,0xDA,0x88,0xB1,0x91,0x85,0xDD,0x45,0xD5,0x85,0xDE,0xA5,0xDD,0x09,0x80,0x85,0xD9,0x88,0xB1,0x91,0x85,0xD8,0xA5,0xD0,0x60,0xA5,0xD8,0xF0,0x1F,0x18,0x65,0xD0,0x90,0x04,0x30,0x1D,0x18,0x2C,0x10,0x14,0x69,0x80,0x85,0xD0,0xD0,0x03,0x4C,0xB6,0xDB,0xA5,0xDE,0x85,0xD5,0x60,0xA5,0xD5,0x49,0xFF,0x30,0x05,0x68,0x68,0x4C,0xB2,0xDB,0x4C,0x39,0xDC,0x20,0xE5,0xDE,0xAA,0xF0,0x10,0x18,0x69,0x02,0xB0,0xF2,0xA2,0x00,0x86,0xDE,0x20,0x32,0xDB,0xE6,0xD0,0xF0,0xE7,0x60,0x84,0x20,0x00,0x00,0x00,0x20,0xE5,0xDE,0xA9,0xBE,0xA0,0xDD,0xA2,0x00,0x86,0xDE,0x20,0x7B,0xDE,0x4C,0xE7,0xDD,0x20,0xAF,0xDC,0x20,0xE5,0xDE,0xA9,0x77,0xA0,0xDC,0x20,0x7B,0xDE,0x4C,0xE7,0xDD,0x20,0x51,0xDD,0xF0,0x76,0x20,0xF4,0xDE,0xA9,0x00,0x38,0xE5,0xD0,0x85,0xD0,0x20,0x7C,0xDD,0xE6,0xD0,0xF0,0xAA,0xA2,0xFC,0xA9,0x01,0xA4,0xD9,0xC4,0xD1,0xD0,0x10,0xA4,0xDA,0xC4,0xD2,0xD0,0x0A,0xA4,0xDB,0xC4,0xD3,0xD0,0x04,0xA4,0xDC,0xC4,0xD4,0x08,0x2A,0x90,0x09,0xE8,0x95,0x98,0xF0,0x32,0x10,0x34,0xA9,0x01,0x28,0xB0,0x0E,0x06,0xDC,0x26,0xDB,0x26,0xDA,0x26,0xD9,0xB0,0xE6,0x30,0xCE,0x10,0xE2,0xA8,0xA5,0xDC,0xE5,0xD4,0x85,0xDC,0xA5,0xDB,0xE5,0xD3,0x85,0xDB,0xA5,0xDA,0xE5,0xD2,0x85,0xDA,0xA5,0xD9,0xE5,0xD1,0x85,0xD9,0x98,0x4C,0x24,0xDE,0xA9,0x40,0xD0,0xCE,0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,0x85,0xDF,0x28,0x4C,0x64,0xDE,0xA2,0x85,0x4C,0x7E,0xC4,0xA5,0x95,0x85,0xD1,0xA5,0x96,0x85,0xD2,0xA5,0x97,0x85,0xD3,0xA5,0x98,0x85,0xD4,0x4C,0x92,0xDB,0xA9,0x7C,0xA0,0xDC,0x85,0x91,0x84,0x92,0xA0,0x04,0xB1,0x91,0x85,0xD4,0x88,0xB1,0x91,0x85,0xD3,0x88,0xB1,0x91,0x85,0xD2,0x88,0xB1,0x91,0x85,0xD5,0x09,0x80,0x85,0xD1,0x88,0xB1,0x91,0x85,0xD0,0x84,0xDF,0x60,0xA2,0xCB,0x2C,0xA2,0xC6,0xA0,0x00,0xF0,0x04,0xA6,0xB8,0xA4,0xB9,0x20,0xF4,0xDE,0x86,0x91,0x84,0x92,0xA0,0x04,0xA5,0xD4,0x91,0x91,0x88,0xA5,0xD3,0x91,0x91,0x88,0xA5,0xD2,0x91,0x91,0x88,0xA5,0xD5,0x09,0x7F,0x25,0xD1,0x91,0x91,0x88,0xA5,0xD0,0x91,0x91,0x84,0xDF,0x60,0xA5,0xDD,0x85,0xD5,0xA2,0x05,0xB5,0xD7,0x95,0xCF,0xCA,0xD0,0xF9,0x86,0xDF,0x60,0x20,0xF4,0xDE,0xA2,0x06,0xB5,0xCF,0x95,0xD7,0xCA,0xD0,0xF9,0x86,0xDF,0x60,0xA5,0xD0,0xF0,0xFB,0x06,0xDF,0x90,0xF7,0x20,0x2A,0xDC,0xD0,0xF2,0x4C,0xF3,0xDB,0x20,0xA9,0xD2,0x46,0xD4,0xB0,0x04,0xA9,0x00,0xF0,0x15,0xA9,0xFF,0x30,0x11,0xA5,0xD0,0xF0,0x09,0xA5,0xD5,0x2A,0xA9,0xFF,0xB0,0x02,0xA9,0x01,0x60,0x20,0x13,0xDF,0x85,0xD1,0xA9,0x00,0x85,0xD2,0xA2,0x88,0xA5,0xD1,0x49,0xFF,0x2A,0xA9,0x00,0x85,0xD4,0x85,0xD3,0x86,0xD0,0x85,0xDF,0x85,0xD5,0x4C,0x8D,0xDB,0x85,0xD1,0x84,0xD2,0xA2,0x90,0x38,0xB0,0xE8,0x46,0xD5,0x60,0x85,0x93,0x84,0x94,0xA0,0x00,0xB1,0x93,0xC8,0xAA,0xF0,0xBB,0xB1,0x93,0x45,0xD5,0x30,0xB9,0xE4,0xD0,0xD0,0x21,0xB1,0x93,0x09,0x80,0xC5,0xD1,0xD0,0x19,0xC8,0xB1,0x93,0xC5,0xD2,0xD0,0x12,0xC8,0xB1,0x93,0xC5,0xD3,0xD0,0x0B,0xC8,0xA9,0x7F,0xC5,0xDF,0xB1,0x93,0xE5,0xD4,0xF0,0x28,0xA5,0xD5,0x90,0x02,0x49,0xFF,0x4C,0x19,0xDF,0xA5,0xD0,0xF0,0x4A,0x38,0xE9,0xA0,0x24,0xD5,0x10,0x09,0xAA,0xA9,0xFF,0x85,0xD7,0x20,0x08,0xDC,0x8A,0xA2,0xD0,0xC9,0xF9,0x10,0x06,0x20,0x54,0xDC,0x84,0xD7,0x60,0xA8,0xA5,0xD5,0x29,0x80,0x46,0xD1,0x05,0xD1,0x85,0xD1,0x20,0x6B,0xDC,0x84,0xD7,0x60,0xA5,0xD0,0xC9,0xA0,0xB0,0x20,0x20,0x8C,0xDF,0x84,0xDF,0xA5,0xD5,0x84,0xD5,0x49,0x80,0x2A,0xA9,0xA0,0x85,0xD0,0xA5,0xD4,0x85,0x24,0x4C,0x8D,0xDB,0x85,0xD1,0x85,0xD2,0x85,0xD3,0x85,0xD4,0xA8,0x60,0x4C,0x81,0xE9,0xA0,0x00,0xA2,0x0A,0x94,0xCC,0xCA,0x10,0xFB,0x90,0x13,0xC9,0x23,0xF0,0xEE,0xC9,0x2D,0xD0,0x04,0x86,0xD6,0xF0,0x04,0xC9,0x2B,0xD0,0x05,0x20,0xE2,0x00,0x90,0x5B,0xC9,0x2E,0xF0,0x2E,0xC9,0x45,0xD0,0x30,0x20,0xE2,0x00,0x90,0x17,0xC9,0xCD,0xF0,0x0E,0xC9,0x2D,0xF0,0x0A,0xC9,0xCC,0xF0,0x08,0xC9,0x2B,0xF0,0x04,0xD0,0x07,0x66,0xCF,0x20,0xE2,0x00,0x90,0x5C,0x24,0xCF,0x10,0x0E,0xA9,0x00,0x38,0xE5,0xCD,0x4C,0x41,0xE0,0x66,0xCE,0x24,0xCE,0x50,0xC3,0xA5,0xCD,0x38,0xE5,0xCC,0x85,0xCD,0xF0,0x12,0x10,0x09,0x20,0xC3,0xDD,0xE6,0xCD,0xD0,0xF9,0xF0,0x07,0x20,0xA7,0xDD,0xC6,0xCD,0xD0,0xF9,0xA5,0xD6,0x30,0x01,0x60,0x4C,0x71,0xE2,0x48,0x24,0xCE,0x10,0x02,0xE6,0xCC,0x20,0xA7,0xDD,0x68,0x38,0xE9,0x30,0x20,0x76,0xE0,0x4C,0x02,0xE0,0x48,0x20,0xE5,0xDE,0x68,0x20,0x24,0xDF,0xA5,0xDD,0x45,0xD5,0x85,0xDE,0xA6,0xD0,0x4C,0x25,0xDB,0xA5,0xCD,0xC9,0x0A,0x90,0x09,0xA9,0x64,0x24,0xCF,0x30,0x11,0x4C,0x39,0xDC,0x0A,0x0A,0x18,0x65,0xCD,0x0A,0x18,0xA0,0x00,0x71,0xE9,0x38,0xE9,0x30,0x85,0xCD,0x4C,0x28,0xE0,0x9B,0x3E,0xBC,0x1F,0xFD,0x9E,0x6E,0x6B,0x27,0xFD,0x9E,0x6E,0x6B,0x28,0x00,0xA9,0xAD,0xA0,0xC3,0x20,0xD2,0xE0,0xA5,0xA9,0xA6,0xA8,0x85,0xD1,0x86,0xD2,0xA2,0x90,0x38,0x20,0x31,0xDF,0x20,0xD5,0xE0,0x4C,0xB0,0xCC,0xA0,0x01,0xA9,0x20,0x24,0xD5,0x10,0x02,0xA9,0x2D,0x99,0xFF,0x00,0x85,0xD5,0x84,0xE0,0xC8,0xA9,0x30,0xA6,0xD0,0xD0,0x03,0x4C,0xF8,0xE1,0xA9,0x00,0xE0,0x80,0xF0,0x02,0xB0,0x09,0xA9,0xB5,0xA0,0xE0,0x20,0xED,0xDC,0xA9,0xF7,0x85,0xCC,0xA9,0xB0,0xA0,0xE0,0x20,0x4C,0xDF,0xF0,0x1E,0x10,0x12,0xA9,0xAB,0xA0,0xE0,0x20,0x4C,0xDF,0xF0,0x02,0x10,0x0E,0x20,0xA7,0xDD,0xC6,0xCC,0xD0,0xEE,0x20,0xC3,0xDD,0xE6,0xCC,0xD0,0xDC,0x20,0x04,0xDB,0x20,0x8C,0xDF,0xA2,0x01,0xA5,0xCC,0x18,0x69,0x0A,0x30,0x09,0xC9,0x0B,0xB0,0x06,0x69,0xFF,0xAA,0xA9,0x02,0x38,0xE9,0x02,0x85,0xCD,0x86,0xCC,0x8A,0xF0,0x02,0x10,0x13,0xA4,0xE0,0xA9,0x2E,0xC8,0x99,0xFF,0x00,0x8A,0xF0,0x06,0xA9,0x30,0xC8,0x99,0xFF,0x00,0x84,0xE0,0xA0,0x00,0xA2,0x80,0xA5,0xD4,0x18,0x79,0x0D,0xE2,0x85,0xD4,0xA5,0xD3,0x79,0x0C,0xE2,0x85,0xD3,0xA5,0xD2,0x79,0x0B,0xE2,0x85,0xD2,0xA5,0xD1,0x79,0x0A,0xE2,0x85,0xD1,0xE8,0xB0,0x04,0x10,0xDE,0x30,0x02,0x30,0xDA,0x8A,0x90,0x04,0x49,0xFF,0x69,0x0A,0x69,0x2F,0xC8,0xC8,0xC8,0xC8,0x84,0xB6,0xA4,0xE0,0xC8,0xAA,0x29,0x7F,0x99,0xFF,0x00,0xC6,0xCC,0xD0,0x06,0xA9,0x2E,0xC8,0x99,0xFF,0x00,0x84,0xE0,0xA4,0xB6,0x8A,0x49,0xFF,0x29,0x80,0xAA,0xC0,0x24,0xD0,0xAA,0xA4,0xE0,0xB9,0xFF,0x00,0x88,0xC9,0x30,0xF0,0xF8,0xC9,0x2E,0xF0,0x01,0xC8,0xA9,0x2B,0xA6,0xCD,0xF0,0x2E,0x10,0x08,0xA9,0x00,0x38,0xE5,0xCD,0xAA,0xA9,0x2D,0x99,0x01,0x01,0xA9,0x45,0x99,0x00,0x01,0x8A,0xA2,0x2F,0x38,0xE8,0xE9,0x0A,0xB0,0xFB,0x69,0x3A,0x99,0x03,0x01,0x8A,0x99,0x02,0x01,0xA9,0x00,0x99,0x04,0x01,0xF0,0x08,0x99,0xFF,0x00,0xA9,0x00,0x99,0x00,0x01,0xA9,0x00,0xA0,0x01,0x60,0x80,0x00,0x00,0x00,0x00,0xFA,0x0A,0x1F,0x00,0x00,0x98,0x96,0x80,0xFF,0xF0,0xBD,0xC0,0x00,0x01,0x86,0xA0,0xFF,0xFF,0xD8,0xF0,0x00,0x00,0x03,0xE8,0xFF,0xFF,0xFF,0x9C,0x00,0x00,0x00,0x0A,0xFF,0xFF,0xFF,0xFF,0x20,0xE5,0xDE,0xA9,0x05,0xA0,0xE2,0x20,0x7B,0xDE,0xF0,0x70,0xA5,0xD8,0xD0,0x03,0x4C,0xB4,0xDB,0xA2,0xBD,0xA0,0x00,0x20,0xAD,0xDE,0xA5,0xDD,0x10,0x0F,0x20,0xBD,0xDF,0xA9,0xBD,0xA0,0x00,0x20,0x4C,0xDF,0xD0,0x03,0x98,0xA4,0x24,0x20,0xD7,0xDE,0x98,0x48,0x20,0xAF,0xDC,0xA9,0xBD,0xA0,0x00,0x20,0xED,0xDC,0x20,0xAA,0xE2,0x68,0x4A,0x90,0x0A,0xA5,0xD0,0xF0,0x06,0xA5,0xD5,0x49,0xFF,0x85,0xD5,0x60,0x81,0x38,0xAA,0x3B,0x29,0x07,0x71,0x34,0x58,0x3E,0x56,0x74,0x16,0x7E,0xB3,0x1B,0x77,0x2F,0xEE,0xE3,0x85,0x7A,0x1D,0x84,0x1C,0x2A,0x7C,0x63,0x59,0x58,0x0A,0x7E,0x75,0xFD,0xE7,0xC6,0x80,0x31,0x72,0x18,0x10,0x81,0x00,0x00,0x00,0x00,0xA9,0x7C,0xA0,0xE2,0x20,0xED,0xDC,0xA5,0xDF,0x69,0x50,0x90,0x03,0x20,0xFC,0xDE,0x85,0xC5,0x20,0xE8,0xDE,0xA5,0xD0,0xC9,0x88,0x90,0x03,0x20,0x99,0xDD,0x20,0xBD,0xDF,0xA5,0x24,0x18,0x69,0x81,0xF0,0xF3,0x38,0xE9,0x01,0x48,0xA2,0x05,0xB5,0xD8,0xB4,0xD0,0x95,0xD0,0x94,0xD8,0xCA,0x10,0xF5,0xA5,0xC5,0x85,0xDF,0x20,0x0E,0xDB,0x20,0x71,0xE2,0xA9,0x81,0xA0,0xE2,0x20,0x13,0xE3,0xA9,0x00,0x85,0xDE,0x68,0x20,0x7E,0xDD,0x60,0x85,0xE0,0x84,0xE1,0x20,0xA3,0xDE,0xA9,0xC6,0x20,0xED,0xDC,0x20,0x17,0xE3,0xA9,0xC6,0xA0,0x00,0x4C,0xED,0xDC,0x85,0xE0,0x84,0xE1,0x20,0xA0,0xDE,0xB1,0xE0,0x85,0xD6,0xA4,0xE0,0xC8,0x98,0xD0,0x02,0xE6,0xE1,0x85,0xE0,0xA4,0xE1,0x20,0xED,0xDC,0xA5,0xE0,0xA4,0xE1,0x18,0x69,0x05,0x90,0x01,0xC8,0x85,0xE0,0x84,0xE1,0x20,0x22,0xDB,0xA9,0xCB,0xA0,0x00,0xC6,0xD6,0xD0,0xE4,0x60,0x98,0x35,0x44,0x7A,0x68,0x28,0xB1,0x46,0x20,0x13,0xDF,0xAA,0x30,0x18,0xA9,0xFA,0xA0,0x00,0x20,0x7B,0xDE,0x8A,0xF0,0xE7,0xA9,0x47,0xA0,0xE3,0x20,0xED,0xDC,0xA9,0x4B,0xA0,0xE3,0x20,0x22,0xDB,0xA6,0xD4,0xA5,0xD1,0x85,0xD4,0x86,0xD1,0xA9,0x00,0x85,0xD5,0xA5,0xD0,0x85,0xDF,0xA9,0x80,0x85,0xD0,0x20,0x92,0xDB,0xA2,0xFA,0xA0,0x00,0x4C,0xAD,0xDE,0xA9,0x07,0xA0,0xE4,0x20,0x22,0xDB,0x20,0xE5,0xDE,0xA9,0x0C,0xA0,0xE4,0xA6,0xDD,0x20,0xCC,0xDD,0x20,0xE5,0xDE,0x20,0xBD,0xDF,0xA9,0x00,0x85,0xDE,0x20,0x0E,0xDB,0xA9,0x11,0xA0,0xE4,0x20,0x0B,0xDB,0xA5,0xD5,0x48,0x10,0x0D,0x20,0x04,0xDB,0xA5,0xD5,0x30,0x09,0xA5,0x2D,0x49,0xFF,0x85,0x2D,0x20,0x71,0xE2,0xA9,0x11,0xA0,0xE4,0x20,0x22,0xDB,0x68,0x10,0x03,0x20,0x71,0xE2,0xA9,0x16,0xA0,0xE4,0x4C,0xFD,0xE2,0x20,0xA3,0xDE,0xA9,0x00,0x85,0x2D,0x20,0x92,0xE3,0xA2,0xBD,0xA0,0x00,0x20,0x88,0xE3,0xA9,0xC6,0xA0,0x00,0x20,0x7B,0xDE,0xA9,0x00,0x85,0xD5,0xA5,0x2D,0x20,0x03,0xE4,0xA9,0xBD,0xA0,0x00,0x4C,0xE4,0xDD,0x48,0x4C,0xC4,0xE3,0x81,0x49,0x0F,0xDA,0xA2,0x83,0x49,0x0F,0xDA,0xA2,0x7F,0x00,0x00,0x00,0x00,0x05,0x84,0xE6,0x1A,0x2D,0x1B,0x86,0x28,0x07,0xFB,0xF8,0x87,0x99,0x68,0x89,0x01,0x87,0x23,0x35,0xDF,0xE1,0x86,0xA5,0x5D,0xE7,0x28,0x83,0x49,0x0F,0xDA,0xA2,0xA1,0x54,0x46,0x8F,0x13,0x8F,0x52,0x43,0x89,0xCD,0xA5,0xD5,0x48,0x10,0x03,0x20,0x71,0xE2,0xA5,0xD0,0x48,0xC9,0x81,0x90,0x07,0xA9,0x81,0xA0,0xDC,0x20,0xE4,0xDD,0xA9,0x6F,0xA0,0xE4,0x20,0xFD,0xE2,0x68,0xC9,0x81,0x90,0x07,0xA9,0x07,0xA0,0xE4,0x20,0x0B,0xDB,0x68,0x10,0x03,0x4C,0x71,0xE2,0x60,0x0B,0x76,0xB3,0x83,0xBD,0xD3,0x79,0x1E,0xF4,0xA6,0xF5,0x7B,0x83,0xFC,0xB0,0x10,0x7C,0x0C,0x1F,0x67,0xCA,0x7C,0xDE,0x53,0xCB,0xC1,0x7D,0x14,0x64,0x70,0x4C,0x7D,0xB7,0xEA,0x51,0x7A,0x7D,0x63,0x30,0x88,0x7E,0x7E,0x92,0x44,0x99,0x3A,0x7E,0x4C,0xCC,0x91,0xC7,0x7F,0xAA,0xAA,0xAA,0x13,0x81,0x00,0x00,0x00,0x00,0x20,0x35,0xE7,0x20,0xC9,0xE6,0xC9,0x24,0xD0,0xF9,0x8E,0xB1,0x02,0xA2,0x09,0x20,0xC9,0xE6,0x9D,0xA7,0x02,0xCA,0xD0,0xF7,0x20,0xC9,0xE6,0xF0,0x0A,0xE0,0x10,0xB0,0xF7,0x9D,0x93,0x02,0xE8,0xD0,0xF1,0x9D,0x93,0x02,0x20,0x94,0xE5,0x20,0x90,0xE7,0x8A,0xD0,0xCD,0x60,0xAD,0xA9,0x02,0xAC,0xAA,0x02,0x85,0x33,0x84,0x34,0xA0,0x00,0x20,0xC9,0xE6,0xAE,0x5B,0x02,0xD0,0x05,0x91,0x33,0x4C,0x05,0xE5,0xD1,0x33,0xF0,0x08,0xEE,0x5C,0x02,0xD0,0x03,0xEE,0x5D,0x02,0x20,0x6C,0xE5,0x90,0xE2,0x60,0x10,0x07,0x53,0x65,0x61,0x72,0x63,0x68,0x69,0x6E,0x67,0x20,0x2E,0x2E,0x00,0x10,0x07,0x4C,0x6F,0x61,0x64,0x69,0x6E,0x67,0x20,0x2E,0x2E,0x00,0x0A,0x0D,0x45,0x72,0x72,0x6F,0x72,0x73,0x20,0x66,0x6F,0x75,0x6E,0x64,0x0D,0x0A,0x00,0x10,0x07,0x46,0x6F,0x75,0x6E,0x64,0x20,0x2E,0x2E,0x00,0x10,0x07,0x56,0x65,0x72,0x69,0x66,0x79,0x69,0x6E,0x67,0x20,0x2E,0x2E,0x00,0x20,0x56,0x65,0x72,0x69,0x66,0x79,0x20,0x65,0x72,0x72,0x6F,0x72,0x73,0x20,0x64,0x65,0x74,0x65,0x63,0x74,0x65,0x64,0x0D,0x0A,0x00,0xA5,0x33,0xCD,0xAB,0x02,0xA5,0x34,0xED,0xAC,0x02,0xE6,0x33,0xD0,0x02,0xE6,0x34,0x60,0xA9,0x0B,0xA0,0xE5,0x20,0xEA,0xE5,0x60,0xA9,0x45,0xA0,0xE6,0x20,0xEA,0xE5,0xA9,0x7F,0xA0,0x02,0x20,0xB6,0xE5,0x60,0xA9,0x38,0xA0,0xE5,0x4C,0xAB,0xE5,0xAD,0x5B,0x02,0xD0,0x07,0xA9,0x1A,0xA0,0xE5,0x4C,0xAB,0xE5,0xA9,0x43,0xA0,0xE5,0x20,0xEA,0xE5,0xA9,0x93,0xA0,0x02,0x20,0xB6,0xE5,0x60,0x20,0x65,0xF8,0xE8,0xA0,0x00,0x8C,0x5F,0x02,0xAD,0xAE,0x02,0xF0,0x13,0xC8,0x2C,0xAE,0x02,0x30,0x0D,0xC8,0x2C,0xAF,0x02,0x30,0x07,0xC8,0x2C,0xB0,0x02,0x30,0x01,0xC8,0xB9,0xE5,0xE5,0x8D,0x5E,0x02,0xA9,0x5E,0xA0,0x02,0x20,0x65,0xF8,0x60,0x42,0x43,0x53,0x49,0x52,0x20,0xF5,0xE5,0xA2,0x00,0x20,0x65,0xF8,0xE8,0xE8,0x60,0x48,0xAD,0x1F,0x02,0xD0,0x0A,0xA2,0x22,0xA9,0x10,0x9D,0x80,0xBB,0xCA,0x10,0xFA,0x68,0x60,0x20,0x5A,0xE7,0xA9,0x24,0x20,0x5E,0xE6,0xA2,0x09,0xBD,0xA7,0x02,0x20,0x5E,0xE6,0xCA,0xD0,0xF7,0xBD,0x7F,0x02,0xF0,0x06,0x20,0x5E,0xE6,0xE8,0xD0,0xF5,0x20,0x5E,0xE6,0xA2,0x00,0xCA,0xD0,0xFD,0x60,0xAD,0xA9,0x02,0xAC,0xAA,0x02,0x85,0x33,0x84,0x34,0xA0,0x00,0xB1,0x33,0x20,0x5E,0xE6,0x20,0x6C,0xE5,0x90,0xF6,0x60,0x10,0x07,0x53,0x61,0x76,0x69,0x6E,0x67,0x20,0x2E,0x2E,0x00,0xAD,0xB1,0x02,0xF0,0x07,0xA9,0x27,0xA0,0xE5,0x20,0xB0,0xCC,0x60,0x85,0x2F,0x8A,0x48,0x98,0x48,0x20,0xC0,0xE6,0x18,0xA0,0x09,0xA9,0x00,0xF0,0x06,0x46,0x2F,0x08,0x69,0x00,0x28,0x20,0x8B,0xE6,0x88,0xD0,0xF4,0x49,0x01,0x4A,0xA0,0x04,0x20,0x8B,0xE6,0x38,0x88,0xD0,0xF9,0x68,0xA8,0x68,0xAA,0x60,0x48,0x08,0xAD,0x4D,0x02,0xD0,0x0A,0x38,0x20,0xB2,0xE6,0x28,0x20,0xB2,0xE6,0x68,0x60,0x20,0xB2,0xE6,0xA2,0x0F,0x28,0xB0,0x02,0xA2,0x07,0x20,0xAB,0xE6,0x68,0x60,0x20,0xC0,0xE6,0xCA,0xD0,0xFA,0x60,0xA9,0xD0,0xA2,0x00,0xB0,0x02,0x0A,0xE8,0x8D,0x06,0x03,0x8E,0x07,0x03,0xAD,0x04,0x03,0x2C,0x0D,0x03,0x50,0xFB,0x60,0x98,0x48,0x8A,0x48,0x20,0x1C,0xE7,0x20,0x1C,0xE7,0xB0,0xFB,0x20,0xFF,0xE6,0xB0,0x16,0xA9,0x00,0xA0,0x08,0x20,0xFC,0xE6,0x08,0x66,0x2F,0x28,0x69,0x00,0x88,0xD0,0xF4,0x20,0xFC,0xE6,0xE9,0x00,0x4A,0x90,0x03,0x2E,0xB1,0x02,0x68,0xAA,0x68,0xA8,0xA5,0x2F,0x60,0x20,0x1C,0xE7,0x48,0xAD,0x4D,0x02,0xF0,0x15,0x20,0x1C,0xE7,0xA2,0x02,0x90,0x02,0xA2,0x06,0xA9,0x00,0x20,0x1C,0xE7,0x69,0x00,0xCA,0xD0,0xF8,0xC9,0x04,0x68,0x60,0x48,0xAD,0x00,0x03,0xAD,0x0D,0x03,0x29,0x10,0xF0,0xF9,0xAD,0x09,0x03,0x48,0xA9,0xFF,0x8D,0x09,0x03,0x68,0xC9,0xFE,0x68,0x60,0x20,0xFC,0xE6,0x66,0x2F,0xA9,0x16,0xC5,0x2F,0xD0,0xF5,0xAD,0x4D,0x02,0xF0,0x08,0x20,0x1C,0xE7,0x20,0x1C,0xE7,0xB0,0xFB,0xA2,0x03,0x20,0xC9,0xE6,0xC9,0x16,0xD0,0xDF,0xCA,0xD0,0xF6,0x60,0xA2,0x02,0xA0,0x03,0xA9,0x16,0x20,0x5E,0xE6,0x88,0xD0,0xF8,0xCA,0xD0,0xF5,0x60,0x20,0x1A,0xEE,0xA0,0x06,0x78,0xBE,0x82,0xE7,0xB9,0x89,0xE7,0x9D,0x00,0x03,0x88,0x10,0xF4,0xA9,0x40,0x8D,0x00,0x03,0x60,0x05,0x04,0x0B,0x02,0x0C,0x08,0x0E,0x00,0xD0,0xC0,0xFF,0x10,0xF4,0x7F,0xA0,0x00,0xA2,0x00,0xAD,0x7F,0x02,0xF0,0x15,0xB9,0x7F,0x02,0xD9,0x93,0x02,0xF0,0x01,0xE8,0x99,0x93,0x02,0xC8,0xC0,0x11,0xB0,0x04,0x48,0x68,0xD0,0xEB,0x60,0x4C,0x70,0xD0,0xA9,0x00,0x8D,0x4D,0x02,0x8D,0xAD,0x02,0x8D,0xAE,0x02,0x8D,0x5B,0x02,0x8D,0x5A,0x02,0x8D,0x5C,0x02,0x8D,0x5D,0x02,0x8D,0xB1,0x02,0x20,0x17,0xCF,0x24,0x28,0x10,0xDC,0x20,0xD0,0xD7,0xAA,0xA0,0x00,0xE8,0xCA,0xF0,0x0A,0xB1,0x91,0x99,0x7F,0x02,0xC8,0xC0,0x10,0xD0,0xF3,0xA9,0x00,0x99,0x7F,0x02,0x20,0xE8,0x00,0xF0,0x61,0xC9,0x2C,0xD0,0xBA,0x20,0xE2,0x00,0xF0,0x58,0xC9,0x2C,0xF0,0xF7,0xC9,0xC7,0xD0,0x05,0x8D,0xAD,0x02,0xB0,0xEE,0xC9,0x53,0xD0,0x05,0x8D,0x4D,0x02,0xB0,0xE5,0xC9,0x56,0xD0,0x05,0x8D,0x5B,0x02,0xB0,0xDC,0xC9,0x4A,0xD0,0x05,0x8D,0x5A,0x02,0xB0,0xD3,0xC9,0x41,0xF0,0x04,0xC9,0x45,0xD0,0x47,0x85,0x0E,0x20,0xE2,0x00,0xA2,0x80,0x8E,0xAE,0x02,0x20,0x53,0xE8,0xA5,0x33,0xA4,0x34,0xA6,0x0E,0xE0,0x41,0xD0,0x08,0x8D,0xA9,0x02,0x8C,0xAA,0x02,0xB0,0xA3,0x8D,0xAB,0x02,0x8C,0xAC,0x02,0x4C,0xEC,0xE7,0x60,0x20,0x03,0xCF,0x20,0x22,0xD9,0x18,0x60,0x08,0x20,0xB2,0xE7,0xAD,0xAD,0x02,0x0D,0xAE,0x02,0xD0,0x0A,0xAD,0x5A,0x02,0xF0,0x08,0xAD,0x5B,0x02,0xF0,0x03,0x4C,0x70,0xD0,0x20,0x6A,0xE7,0x20,0x7D,0xE5,0x20,0xAC,0xE4,0x2C,0xAE,0x02,0x70,0xF8,0xAD,0x5A,0x02,0xF0,0x2C,0xAD,0xAE,0x02,0xD0,0xEE,0xA5,0x9C,0xA4,0x9D,0x38,0xE9,0x02,0xB0,0x01,0x88,0x8D,0xA9,0x02,0x8C,0xAA,0x02,0x38,0xE5,0x9A,0xAA,0x98,0xE5,0x9B,0xA8,0x18,0x8A,0x6D,0xAB,0x02,0x8D,0xAB,0x02,0x98,0x6D,0xAC,0x02,0x8D,0xAC,0x02,0x20,0x9B,0xE5,0x20,0xE0,0xE4,0x20,0x3D,0xE9,0x28,0xAD,0x5B,0x02,0xF0,0x11,0xAE,0x5C,0x02,0xAD,0x5D,0x02,0x20,0xC5,0xE0,0xA9,0x52,0xA0,0xE5,0x20,0xB0,0xCC,0x60,0x20,0x51,0xE6,0xAD,0xAE,0x02,0xF0,0x0E,0xAD,0xAD,0x02,0xF0,0x08,0xAD,0xB1,0x02,0xEA,0xEA,0x6C,0xA9,0x02,0x60,0xAE,0xAB,0x02,0xAD,0xAC,0x02,0x86,0x9C,0x85,0x9D,0x20,0x5F,0xC5,0xAD,0xAD,0x02,0xF0,0x08,0xAD,0xB1,0x02,0xEA,0xEA,0x4C,0x08,0xC7,0x20,0x08,0xC7,0x4C,0xA8,0xC4,0xA5,0x9A,0xA4,0x9B,0x8D,0xA9,0x02,0x8C,0xAA,0x02,0xA5,0x9C,0xA4,0x9D,0x8D,0xAB,0x02,0x8C,0xAC,0x02,0x08,0x20,0xB2,0xE7,0xAD,0x5A,0x02,0x0D,0x5B,0x02,0xF0,0x03,0x4C,0x70,0xD0,0x20,0x6A,0xE7,0x20,0x85,0xE5,0x20,0x07,0xE6,0x20,0x2E,0xE6,0x20,0x3D,0xE9,0x28,0x60,0x20,0xF5,0xE5,0x20,0xAA,0xF9,0x4C,0xE0,0xED,0x20,0x53,0xE8,0x6C,0x33,0x00,0xA2,0x00,0x86,0x0C,0x86,0x0D,0xF0,0x13,0xA2,0x03,0x0A,0x0A,0x0A,0x0A,0x0A,0x26,0x0C,0x26,0x0D,0x90,0x03,0x4C,0x39,0xDC,0xCA,0x10,0xF3,0x20,0xE2,0x00,0xC9,0x80,0xB0,0x0E,0x09,0x80,0x49,0xB0,0xC9,0x0A,0x90,0xDE,0x69,0x88,0xC9,0xFA,0xB0,0xD8,0xA5,0x0D,0xA4,0x0C,0x60,0x20,0x4C,0xE9,0x4C,0x40,0xDF,0x08,0x20,0x57,0xEA,0xA9,0x40,0x8D,0xAE,0x02,0xA5,0x28,0x8D,0xAF,0x02,0xA5,0x29,0x8D,0xB0,0x02,0x20,0x85,0xE5,0x20,0x07,0xE6,0x20,0x9E,0xEA,0x20,0x2E,0xE6,0x24,0x28,0x10,0x22,0xA0,0x00,0xB1,0x0C,0xF0,0x17,0xAA,0xA0,0x02,0xB1,0x0C,0x99,0xD0,0x00,0x88,0xD0,0xF8,0xE8,0xCA,0xF0,0x08,0xB1,0xD1,0x20,0x5E,0xE6,0xC8,0xD0,0xF5,0x20,0x42,0xEA,0x90,0xDE,0x20,0x3D,0xE9,0x28,0x60,0x20,0x50,0xD6,0x08,0x20,0x57,0xEA,0x20,0x7D,0xE5,0x20,0xAC,0xE4,0x2C,0xAE,0x02,0x50,0xF8,0xAD,0xAF,0x02,0x45,0x28,0xD0,0xF1,0xAD,0xB0,0x02,0x45,0x29,0xD0,0xEA,0x20,0x9B,0xE5,0xA0,0x02,0xB1,0xCE,0xCD,0xA9,0x02,0xC8,0xB1,0xCE,0xED,0xAA,0x02,0xB0,0x06,0x20,0x3D,0xE9,0x4C,0x7C,0xC4,0x20,0x9E,0xEA,0x20,0xE0,0xE4,0x24,0x28,0x10,0x27,0xA0,0x00,0xB1,0x0C,0xF0,0x1C,0x20,0xAB,0xD5,0xA0,0x00,0xAA,0xE8,0xCA,0xF0,0x08,0x20,0xC9,0xE6,0x91,0xD1,0xC8,0xD0,0xF5,0xA0,0x02,0xB9,0xD0,0x00,0x91,0x0C,0x88,0xD0,0xF8,0x20,0x42,0xEA,0x90,0xD9,0x20,0x3D,0xE9,0x20,0x51,0xE6,0x28,0x60,0x18,0xA9,0x03,0x65,0x0C,0x85,0x0C,0x90,0x02,0xE6,0x0D,0xA8,0xA5,0x0D,0xCC,0xAB,0x02,0xED,0xAC,0x02,0x60,0xA9,0x40,0x85,0x2B,0x20,0x88,0xD1,0xA9,0x00,0x85,0x2B,0xA0,0x03,0xB1,0xCE,0x8D,0xAA,0x02,0x88,0xB1,0xCE,0x8D,0xA9,0x02,0xD0,0x03,0xCE,0xAA,0x02,0xCE,0xA9,0x02,0x20,0x65,0xD0,0xA5,0x29,0x48,0xA5,0x28,0x48,0x20,0xB2,0xE7,0x68,0x85,0x28,0x68,0x85,0x29,0xAD,0x5B,0x02,0x0D,0xAD,0x02,0x0D,0xAE,0x02,0x0D,0x5A,0x02,0xF0,0x03,0x4C,0x70,0xD0,0x20,0x6A,0xE7,0x60,0x18,0xA5,0xCE,0x6D,0xA9,0x02,0x8D,0xAB,0x02,0xA5,0xCF,0x6D,0xAA,0x02,0x8D,0xAC,0x02,0xA0,0x04,0xB1,0xCE,0x20,0x88,0xD2,0x8D,0xA9,0x02,0x8C,0xAA,0x02,0x85,0x0C,0x84,0x0D,0x60,0x3F,0xFB,0x17,0xFC,0xCF,0xFB,0xC7,0xF0,0xFC,0xF0,0x0F,0xF1,0x7E,0xF3,0x1C,0xF1,0x67,0xF2,0x2C,0xF1,0x03,0xF2,0x0F,0xF2,0x03,0x04,0x04,0x03,0x03,0x03,0x02,0x01,0x03,0x03,0x01,0x01,0x00,0x00,0x00,0x00,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0xAD,0xC0,0x02,0x29,0x01,0xD0,0x05,0xA2,0xA3,0x4C,0x7E,0xC4,0xC0,0x4E,0xB0,0x03,0x4C,0x70,0xD0,0xC0,0x66,0xB0,0xF9,0x98,0x38,0xE9,0x4E,0xA8,0xB9,0xC2,0xEA,0x48,0xB9,0xC1,0xEA,0x48,0x98,0x4A,0xA8,0xB9,0xD9,0xEA,0x48,0xB9,0xE5,0xEA,0x8D,0xC3,0x02,0xA9,0x00,0x8D,0xF0,0x02,0x20,0x03,0xCF,0xAD,0xC3,0x02,0xD0,0x06,0x20,0x22,0xD9,0x4C,0x3B,0xEB,0xA5,0xD0,0xC9,0x90,0x20,0x2A,0xD9,0xAC,0xF0,0x02,0xA5,0x33,0x99,0xE1,0x02,0xA5,0x34,0x99,0xE2,0x02,0xC8,0xC8,0x8C,0xF0,0x02,0x68,0xA8,0x88,0xF0,0x08,0x98,0x48,0x20,0x65,0xD0,0x4C,0x26,0xEB,0xA9,0x00,0x8D,0xE0,0x02,0x68,0xAA,0x68,0xA8,0xA9,0xEB,0x48,0xA9,0x6D,0x48,0x98,0x48,0x8A,0x48,0x60,0xA9,0x01,0x2C,0xE0,0x02,0xF0,0xF8,0x4C,0x36,0xD3,0xAD,0xDF,0x02,0x10,0x0B,0x08,0x29,0x7F,0x48,0xA9,0x00,0x8D,0xDF,0x02,0x68,0x28,0x60,0xC4,0x9D,0xB0,0x02,0x38,0x60,0xD0,0x06,0xC5,0x9C,0x90,0xF9,0xF0,0xF7,0x20,0xB5,0xEB,0x90,0xF2,0xAA,0xAD,0xC0,0x02,0x29,0x02,0x08,0x8A,0x28,0xD0,0xE6,0x98,0x48,0x38,0xE9,0x1C,0xA8,0x8A,0x20,0xB5,0xEB,0x68,0xA8,0x8A,0x60,0xCC,0xC2,0x02,0x90,0x02,0xF0,0x01,0x60,0xCD,0xC1,0x02,0x60,0xAC,0xC2,0x02,0xAD,0xC1,0x02,0xD0,0x01,0x88,0x38,0xE9,0x01,0x60,0x20,0x03,0xCF,0x20,0x22,0xD9,0xA5,0x33,0xA4,0x34,0x20,0x89,0xEB,0x90,0x03,0x4C,0x7C,0xC4,0x85,0xA6,0x84,0xA7,0x4C,0x0F,0xC7,0xAD,0x60,0x02,0xD0,0xF1,0xAD,0xC0,0x02,0x48,0x29,0x01,0xF0,0x05,0xA2,0xA3,0x4C,0x7E,0xC4,0x68,0x29,0xFD,0x8D,0xC0,0x02,0x20,0xC1,0xEB,0x48,0x98,0x18,0x69,0x1C,0xA8,0x68,0x4C,0xE0,0xEB,0x20,0xC1,0xEB,0x20,0x89,0xEB,0xB0,0xC9,0x48,0xAD,0xC0,0x02,0x09,0x02,0x8D,0xC0,0x02,0x68,0x4C,0xE0,0xEB,0xAD,0xC0,0x02,0xA8,0x29,0x01,0xF0,0x09,0x98,0x29,0xFE,0x8D,0xC0,0x02,0x20,0x67,0xF9,0x60,0xAD,0xC0,0x02,0x48,0x29,0x02,0xF0,0xB9,0x68,0x09,0x01,0x8D,0xC0,0x02,0x20,0x20,0xF9,0x60,0x20,0x62,0xD0,0x20,0x17,0xCF,0xA5,0x34,0x48,0xA5,0x33,0x48,0x20,0x22,0xD9,0xA5,0x33,0x8D,0xE1,0x02,0xA5,0x34,0x8D,0xE2,0x02,0x68,0x85,0x33,0x68,0x85,0x34,0x20,0x65,0xD0,0x20,0x17,0xCF,0xA5,0x34,0x48,0xA5,0x33,0x48,0x20,0x22,0xD9,0xA5,0x34,0x8D,0xE4,0x02,0xA5,0x33,0x8D,0xE3,0x02,0x68,0x85,0x33,0x68,0x85,0x34,0x20,0xC8,0xF1,0xAC,0xE1,0x02,0xAD,0xE0,0x02,0x29,0x01,0xD0,0x09,0xAD,0xE2,0x02,0x20,0x99,0xD4,0x4C,0x5F,0xD0,0x4C,0xC2,0xD8,0xE6,0xE9,0xD0,0x02,0xE6,0xEA,0xAD,0x60,0xEA,0xC9,0x20,0xF0,0xF3,0x20,0xB9,0xEC,0x60,0x2C,0x60,0xEA,0x2C,0x60,0xEA,0x60,0x80,0x4F,0xC7,0x52,0x58,0xC9,0xC8,0xF0,0x0E,0xC9,0x27,0xF0,0x0A,0xC9,0x3A,0xB0,0x06,0x38,0xE9,0x30,0x38,0xE9,0xD0,0x60,0xD8,0xA2,0xFF,0x86,0xA9,0x9A,0xA9,0xCC,0xA0,0xEC,0x85,0x1B,0x84,0x1C,0xA9,0x4C,0x85,0x1A,0x85,0xC3,0x85,0x21,0x8D,0xFB,0x02,0xA9,0x36,0xA0,0xD3,0x85,0x22,0x84,0x23,0x8D,0xFC,0x02,0x8C,0xFD,0x02,0x8D,0xF5,0x02,0x8C,0xF6,0x02,0xA2,0x1C,0xBD,0x9B,0xEC,0x95,0xE1,0xCA,0xD0,0xF8,0xA9,0x03,0x85,0xC2,0x8A,0x85,0xD7,0x85,0x87,0x85,0x2F,0x48,0x85,0x2E,0x8D,0xF2,0x02,0xA2,0x88,0x86,0x85,0xA8,0xA9,0x02,0x8D,0xC0,0x02,0xA9,0x28,0x8D,0x57,0x02,0xA9,0x50,0x8D,0x56,0x02,0xA9,0x00,0x85,0x30,0x8D,0x58,0x02,0x8D,0x59,0x02,0x20,0x3E,0xC8,0x20,0xCE,0xCC,0xA9,0x96,0xA0,0xED,0x20,0xB0,0xCC,0x20,0xF0,0xCB,0xA2,0x00,0xA0,0x05,0x86,0x9A,0x84,0x9B,0xA0,0x00,0x98,0x91,0x9A,0xE6,0x9A,0xD0,0x02,0xE6,0x9B,0x20,0xF0,0xC6,0xA5,0x9A,0xA4,0x9B,0x20,0x44,0xC4,0x20,0xF0,0xCB,0xA5,0xA6,0x38,0xE5,0x9A,0xAA,0xA5,0xA7,0xE5,0x9B,0x20,0xC5,0xE0,0xA9,0x88,0xA0,0xED,0x20,0xB0,0xCC,0xA9,0xB0,0xA0,0xCC,0x85,0x1B,0x84,0x1C,0xA9,0x10,0x8D,0xF8,0x02,0x4C,0xA8,0xC4,0x00,0x00,0x20,0x42,0x59,0x54,0x45,0x53,0x20,0x46,0x52,0x45,0x45,0x0A,0x0D,0x00,0x4F,0x52,0x49,0x43,0x20,0x45,0x58,0x54,0x45,0x4E,0x44,0x45,0x44,0x20,0x42,0x41,0x53,0x49,0x43,0x20,0x56,0x31,0x2E,0x31,0x0D,0x0A,0x60,0x20,0x31,0x39,0x38,0x33,0x20,0x54,0x41,0x4E,0x47,0x45,0x52,0x49,0x4E,0x45,0x0D,0x0A,0x00,0x00,0xA2,0x00,0xA0,0x00,0xC4,0x10,0xD0,0x04,0xE4,0x11,0xF0,0x0F,0xB1,0x0C,0x91,0x0E,0xC8,0xD0,0xF1,0xE6,0x0D,0xE6,0x0F,0xE8,0x4C,0xC8,0xED,0x60,0x48,0x20,0x8C,0xEE,0xA9,0x00,0xA2,0x00,0xA0,0x03,0x20,0xAB,0xEE,0xA9,0x01,0xA0,0x19,0x20,0xAB,0xEE,0xA9,0x00,0x8D,0x71,0x02,0xAD,0x0B,0x03,0x29,0x7F,0x09,0x40,0x8D,0x0B,0x03,0xA9,0xC0,0x8D,0x0E,0x03,0xA9,0x10,0x8D,0x06,0x03,0x8D,0x04,0x03,0xA9,0x27,0x8D,0x07,0x03,0x8D,0x05,0x03,0x68,0x60,0x48,0xA9,0x40,0x8D,0x0E,0x03,0x68,0x60,0x48,0xAD,0x0D,0x03,0x29,0x40,0xF0,0x06,0x8D,0x0D,0x03,0x20,0x34,0xEE,0x68,0x4C,0x4A,0x02,0x48,0x8A,0x48,0x98,0x48,0xA0,0x00,0xB9,0x72,0x02,0x38,0xE9,0x01,0x99,0x72,0x02,0xC8,0xB9,0x72,0x02,0xE9,0x00,0x99,0x72,0x02,0xC8,0xC0,0x06,0xD0,0xE9,0xA9,0x00,0x20,0x9D,0xEE,0xC0,0x00,0xD0,0x10,0xA2,0x00,0xA0,0x03,0x20,0xAB,0xEE,0x20,0x95,0xF4,0x8A,0x10,0x03,0x8E,0xDF,0x02,0xA9,0x01,0x20,0x9D,0xEE,0xC0,0x00,0xD0,0x12,0xA2,0x00,0xA0,0x19,0x20,0xAB,0xEE,0xAD,0x71,0x02,0x49,0x01,0x8D,0x71,0x02,0x20,0x01,0xF8,0x68,0xA8,0x68,0xAA,0x68,0x60,0x48,0x98,0x48,0xA0,0x05,0xA9,0x00,0x99,0x72,0x02,0x88,0x10,0xFA,0x68,0xA8,0x68,0x60,0x48,0x0A,0xA8,0x78,0xB9,0x72,0x02,0xBE,0x73,0x02,0x58,0xA8,0x68,0x60,0x48,0x8A,0x48,0x98,0x48,0xBA,0xBD,0x03,0x01,0x0A,0xA8,0x68,0x48,0x78,0x99,0x72,0x02,0xBD,0x02,0x01,0x99,0x73,0x02,0x58,0x68,0xA8,0x68,0xAA,0x68,0x60,0x20,0xAB,0xEE,0x20,0x9D,0xEE,0xC0,0x00,0xD0,0xF9,0xE0,0x00,0xD0,0xF5,0x60,0xAD,0x13,0x02,0x8D,0x14,0x02,0x4E,0x12,0x02,0x6E,0x12,0x02,0x6E,0x12,0x02,0x60,0x48,0x98,0x48,0x20,0xDE,0xEE,0x20,0x49,0xF0,0x20,0x24,0xF0,0x68,0xA8,0x68,0x60,0xD8,0x20,0xD8,0xEE,0x2C,0xE2,0x02,0x10,0x0A,0xA9,0xFF,0x4D,0xE1,0x02,0xAA,0xE8,0x8E,0xE1,0x02,0x2C,0xE4,0x02,0x10,0x0A,0xA9,0xFF,0x4D,0xE3,0x02,0xAA,0xE8,0x8E,0xE3,0x02,0xAD,0xE1,0x02,0xCD,0xE3,0x02,0x90,0x0F,0xAE,0xE1,0x02,0xF0,0x09,0xAD,0xE3,0x02,0x20,0x40,0xEF,0x20,0x84,0xEF,0x60,0xAE,0xE3,0x02,0xF0,0x09,0xAD,0xE1,0x02,0x20,0x40,0xEF,0x20,0x5C,0xEF,0x60,0x85,0x0D,0x8E,0x00,0x02,0xA9,0x00,0x85,0x0C,0x8D,0x01,0x02,0x20,0xC8,0xEF,0x20,0xFA,0xEF,0xA9,0x00,0x85,0x0E,0x85,0x0F,0x8D,0x00,0x02,0x60,0x2C,0xE4,0x02,0x10,0x06,0x20,0x95,0xF0,0x4C,0x6A,0xEF,0x20,0x89,0xF0,0x20,0xAC,0xEF,0xF0,0x0E,0x2C,0xE2,0x02,0x10,0x06,0x20,0xB2,0xF0,0x4C,0x7D,0xEF,0x20,0xA1,0xF0,0x20,0x16,0xF0,0xCA,0xD0,0xD9,0x60,0x2C,0xE2,0x02,0x10,0x06,0x20,0xB2,0xF0,0x4C,0x92,0xEF,0x20,0xA1,0xF0,0x20,0xAC,0xEF,0xF0,0x0E,0x2C,0xE4,0x02,0x10,0x06,0x20,0x95,0xF0,0x4C,0xA5,0xEF,0x20,0x89,0xF0,0x20,0x16,0xF0,0xCA,0xD0,0xD9,0x60,0xD8,0x18,0xA5,0x0E,0x65,0x0C,0x85,0x0E,0xA5,0x0F,0x65,0x0D,0x85,0x0F,0x24,0x0E,0x10,0x03,0x18,0x69,0x01,0xCD,0x00,0x02,0x8D,0x00,0x02,0x60,0x48,0x8A,0x48,0x98,0x48,0xA9,0x00,0x85,0x0E,0x85,0x0F,0xA2,0x10,0x06,0x0C,0x26,0x0D,0x26,0x0E,0x26,0x0F,0xA5,0x0E,0x38,0xED,0x00,0x02,0xA8,0xA5,0x0F,0xED,0x01,0x02,0x90,0x06,0xE6,0x0C,0x84,0x0E,0x85,0x0F,0xCA,0xD0,0xE1,0x68,0xA8,0x68,0xAA,0x68,0x60,0x48,0x0E,0x00,0x02,0x2E,0x01,0x02,0xAD,0x00,0x02,0x38,0xE5,0x0E,0xAD,0x01,0x02,0xE5,0x0F,0xB0,0x06,0xE6,0x0C,0xD0,0x02,0xE6,0x0D,0x68,0x60,0x2C,0x14,0x02,0x18,0x10,0x04,0x20,0x24,0xF0,0x38,0x2E,0x14,0x02,0x60,0xA0,0x00,0xB1,0x10,0x29,0x40,0xF0,0x1C,0xAD,0x15,0x02,0x2C,0x12,0x02,0x30,0x0E,0x70,0x07,0x49,0xFF,0x31,0x10,0x91,0x10,0x60,0x11,0x10,0x91,0x10,0x60,0x70,0x04,0x51,0x10,0x91,0x10,0x60,0xD8,0x48,0x98,0x48,0x20,0x31,0xF7,0x18,0x69,0x00,0x85,0x10,0x98,0x69,0xA0,0x85,0x11,0xA9,0x00,0x85,0x0D,0x8D,0x01,0x02,0x86,0x0C,0xA9,0x06,0x8D,0x00,0x02,0x20,0xC8,0xEF,0x18,0xA5,0x0C,0x65,0x10,0x85,0x10,0xA9,0x00,0x65,0x11,0x85,0x11,0xA9,0x20,0xA4,0x0E,0xF0,0x04,0x4A,0x88,0x90,0xFA,0x8D,0x15,0x02,0x68,0xA8,0x68,0x60,0x18,0xA5,0x10,0x69,0x28,0x85,0x10,0x90,0x02,0xE6,0x11,0x60,0x38,0xA5,0x10,0xE9,0x28,0x85,0x10,0xB0,0x02,0xC6,0x11,0x60,0x4E,0x15,0x02,0x90,0x0B,0xA9,0x20,0x8D,0x15,0x02,0xE6,0x10,0xD0,0x02,0xE6,0x11,0x60,0x0E,0x15,0x02,0x2C,0x15,0x02,0x50,0x0D,0xA9,0x01,0x8D,0x15,0x02,0xA5,0x10,0xD0,0x02,0xC6,0x11,0xC6,0x10,0x60,0xA9,0x04,0xA2,0xE5,0x20,0xF8,0xF2,0xB0,0x28,0xAD,0xE5,0x02,0x8D,0x12,0x02,0xA9,0xF0,0xA2,0xE1,0x20,0xF8,0xF2,0xB0,0x19,0xA9,0xC8,0xA2,0xE3,0x20,0xF8,0xF2,0xB0,0x10,0xAE,0xE1,0x02,0x8E,0x19,0x02,0xAC,0xE3,0x02,0x8C,0x1A,0x02,0x20,0xE8,0xEE,0x60,0xEE,0xE0,0x02,0x60,0x20,0x0A,0xF3,0xB0,0x0A,0xAE,0x19,0x02,0xAC,0x1A,0x02,0x20,0xE8,0xEE,0x60,0xEE,0xE0,0x02,0x60,0x20,0x0A,0xF3,0xB0,0x04,0x20,0xF8,0xEE,0x60,0xEE,0xE0,0x02,0x60,0xAE,0xE2,0x02,0xD0,0x07,0xAE,0xE1,0x02,0x8E,0x13,0x02,0x60,0xEE,0xE0,0x02,0x60,0xAE,0xE2,0x02,0xD0,0x3B,0xAE,0xE1,0x02,0xE0,0x20,0x90,0x34,0xE0,0x80,0xB0,0x30,0xA9,0x02,0xA2,0xE3,0x20,0xF8,0xF2,0xB0,0x27,0xA9,0x04,0xA2,0xE5,0x20,0xF8,0xF2,0xB0,0x1E,0xAD,0x19,0x02,0xC9,0xEB,0xB0,0x17,0xAD,0x1A,0x02,0xC9,0xC1,0xB0,0x10,0x20,0x71,0xF1,0x20,0x9B,0xF1,0xAE,0x19,0x02,0xAC,0x1A,0x02,0x20,0x49,0xF0,0x60,0xEE,0xE0,0x02,0x60,0xD8,0xAD,0xE5,0x02,0x8D,0x12,0x02,0x20,0xDE,0xEE,0xAD,0xE1,0x02,0x85,0x0C,0xA9,0x00,0x85,0x0D,0xA2,0x03,0x06,0x0C,0x26,0x0D,0xCA,0xD0,0xF9,0xAD,0xE3,0x02,0x0A,0x0A,0x18,0x69,0x98,0x18,0x65,0x0D,0x85,0x0D,0x60,0xD8,0xA0,0x00,0x84,0x0F,0xB1,0x0C,0x85,0x0E,0x20,0x5D,0xF3,0x26,0x0E,0x26,0x0E,0xA2,0x06,0x26,0x0E,0x90,0x03,0x20,0x24,0xF0,0x20,0xA1,0xF0,0xCA,0xD0,0xF3,0x20,0x6E,0xF3,0x20,0x89,0xF0,0xA4,0x0F,0xC8,0xC0,0x08,0xD0,0xD7,0x60,0xA9,0xF0,0xA2,0xE1,0x20,0xF8,0xF2,0xB0,0x2F,0xA9,0xC8,0xA2,0xE3,0x20,0xF8,0xF2,0xB0,0x26,0xAE,0xE1,0x02,0x8E,0x19,0x02,0xAC,0xE3,0x02,0x8C,0x1A,0x02,0x20,0x49,0xF0,0xA0,0x00,0xB1,0x10,0x2D,0x15,0x02,0xF0,0x05,0xA9,0xFF,0x4C,0xF9,0xF1,0xA9,0x00,0x8D,0xE1,0x02,0x8D,0xE2,0x02,0x60,0xEE,0xE0,0x02,0x60,0xA9,0x10,0x85,0x0C,0xA9,0x00,0x85,0x0D,0x20,0x1C,0xF2,0x60,0xA9,0x00,0x85,0x0C,0xA9,0x01,0x85,0x0D,0x20,0x1C,0xF2,0x60,0xA9,0x08,0xA2,0xE1,0x20,0xF8,0xF2,0xB0,0x3F,0x20,0x5D,0xF3,0xAD,0xE1,0x02,0x05,0x0C,0x8D,0x02,0x02,0xAE,0x1F,0x02,0xD0,0x12,0xA6,0x0D,0x9D,0x6B,0x02,0xA9,0xA8,0x18,0x65,0x0D,0xAA,0xA0,0xBB,0xA9,0x1B,0x4C,0x51,0xF2,0xA9,0x00,0x18,0x65,0x0D,0xAA,0xA0,0xA0,0xA9,0xC8,0x8D,0x00,0x02,0x86,0x10,0x84,0x11,0xA9,0x01,0x8D,0x01,0x02,0x20,0xCD,0xF2,0x20,0x6E,0xF3,0x60,0xEE,0xE0,0x02,0x60,0xD8,0xAD,0xE3,0x02,0x8D,0x01,0x02,0xF0,0x58,0xA0,0x00,0xAD,0x19,0x02,0x38,0xE9,0x06,0x90,0x04,0xC8,0x4C,0x76,0xF2,0x98,0x18,0x6D,0xE3,0x02,0xA8,0xAD,0xE4,0x02,0x69,0x00,0xD0,0x3D,0xC0,0x29,0xB0,0x39,0xAD,0xE6,0x02,0xD0,0x34,0xAD,0xE1,0x02,0x8D,0x00,0x02,0xF0,0x2C,0x18,0x6D,0x1A,0x02,0xA8,0xAD,0xE2,0x02,0x69,0x00,0xD0,0x20,0xC0,0xC9,0xB0,0x1C,0xC0,0xC8,0xD0,0x02,0xA0,0x00,0x8C,0x1A,0x02,0xAD,0xE5,0x02,0x8D,0x02,0x02,0x20,0xCD,0xF2,0xAC,0x1A,0x02,0xAE,0x19,0x02,0x20,0x49,0xF0,0x60,0xEE,0xE0,0x02,0x60,0xD8,0xAD,0x02,0x02,0xA0,0x00,0x91,0x10,0xC8,0xCC,0x01,0x02,0xD0,0xF8,0x20,0x89,0xF0,0xCE,0x00,0x02,0xD0,0xEB,0x60,0x8D,0x04,0x02,0xBD,0x01,0x02,0xD0,0x0A,0xBD,0x00,0x02,0xF0,0x05,0xCD,0x04,0x02,0x90,0x01,0x38,0x60,0x8D,0x04,0x02,0xBD,0x01,0x02,0xD0,0x08,0xBD,0x00,0x02,0xCD,0x04,0x02,0x90,0x01,0x38,0x60,0xA9,0x04,0xA2,0xE5,0x20,0xF8,0xF2,0xB0,0x49,0x18,0xAD,0xE1,0x02,0x6D,0x19,0x02,0x8D,0x00,0x02,0xAD,0xE2,0x02,0x69,0x00,0x8D,0x01,0x02,0xA2,0x00,0xA9,0xF0,0x20,0xF8,0xF2,0xB0,0x2E,0x18,0xAD,0xE3,0x02,0x6D,0x1A,0x02,0x8D,0x02,0x02,0xAD,0xE4,0x02,0x69,0x00,0x8D,0x03,0x02,0xA2,0x02,0xA9,0xC8,0x20,0xF8,0xF2,0xB0,0x13,0xAD,0xE5,0x02,0x8D,0x12,0x02,0xAD,0x00,0x02,0x8D,0x19,0x02,0xAD,0x02,0x02,0x8D,0x1A,0x02,0x18,0x60,0xA5,0x10,0x8D,0x16,0x02,0xA5,0x11,0x8D,0x17,0x02,0xAD,0x15,0x02,0x8D,0x18,0x02,0x60,0xAD,0x16,0x02,0x85,0x10,0xAD,0x17,0x02,0x85,0x11,0xAD,0x18,0x02,0x8D,0x15,0x02,0x60,0xD8,0xAD,0xE2,0x02,0xD0,0x3D,0xAD,0xE1,0x02,0xF0,0x38,0xAD,0x19,0x02,0xCD,0xE1,0x02,0x90,0x30,0x18,0x6D,0xE1,0x02,0xC9,0xF0,0xB0,0x28,0xAD,0x1A,0x02,0xCD,0xE1,0x02,0x90,0x20,0x18,0x6D,0xE1,0x02,0xC9,0xC8,0xB0,0x18,0xA2,0xE3,0xA9,0x04,0x20,0xF8,0xF2,0xB0,0x0F,0xAD,0xE3,0x02,0x8D,0x12,0x02,0x20,0xD8,0xEE,0x20,0xC6,0xF3,0x4C,0xC5,0xF3,0xEE,0xE0,0x02,0x60,0x20,0x5D,0xF3,0xAD,0x1A,0x02,0x38,0xED,0xE1,0x02,0xA8,0xAE,0x19,0x02,0x20,0x49,0xF0,0xAD,0xE1,0x02,0x85,0x0F,0x20,0x85,0xF4,0xA9,0x80,0x8D,0x1B,0x02,0x8D,0x1D,0x02,0xA9,0x00,0x8D,0x1C,0x02,0xAD,0xE1,0x02,0x8D,0x1E,0x02,0xA9,0x00,0x85,0x0F,0x20,0x14,0xF4,0x20,0x44,0xF4,0xA5,0x0F,0xF0,0x03,0x20,0x16,0xF0,0xAD,0x1C,0x02,0xD0,0xEA,0xAD,0x1E,0x02,0xCD,0xE1,0x02,0xD0,0xE2,0x20,0x6E,0xF3,0x60,0xAD,0x1D,0x02,0xAE,0x1E,0x02,0x20,0x74,0xF4,0xA5,0x0C,0x18,0x6D,0x1B,0x02,0x8D,0x1B,0x02,0xAD,0x1C,0x02,0x85,0x0C,0x65,0x0D,0x8D,0x1C,0x02,0xC5,0x0C,0xF0,0x0F,0xB0,0x06,0x20,0xA1,0xF0,0x4C,0x3F,0xF4,0x20,0xB2,0xF0,0xA9,0x01,0x85,0x0F,0x60,0xAD,0x1B,0x02,0xAE,0x1C,0x02,0x20,0x74,0xF4,0x38,0xAD,0x1D,0x02,0xE5,0x0C,0x8D,0x1D,0x02,0xAD,0x1E,0x02,0x85,0x0C,0xE5,0x0D,0x8D,0x1E,0x02,0xC5,0x0C,0xF0,0x0F,0xB0,0x06,0x20,0x89,0xF0,0x4C,0x6F,0xF4,0x20,0x95,0xF0,0xA9,0x01,0x85,0x0F,0x60,0x85,0x0C,0x86,0x0D,0xA6,0x0E,0xA5,0x0D,0x2A,0x66,0x0D,0x66,0x0C,0xCA,0xD0,0xF6,0x60,0xE6,0x0F,0xA9,0x00,0x85,0x0E,0xA9,0x01,0x0A,0xE6,0x0E,0xC5,0x0F,0x90,0xF9,0x60,0x48,0x08,0x98,0x48,0xD8,0xAD,0x08,0x02,0x10,0x1E,0x29,0x87,0x8D,0x10,0x02,0xAE,0x0A,0x02,0x20,0x61,0xF5,0xCD,0x10,0x02,0xD0,0x0E,0xCE,0x0E,0x02,0xD0,0x33,0xAD,0x4F,0x02,0x8D,0x0E,0x02,0x4C,0xC6,0xF4,0xAD,0x4E,0x02,0x8D,0x0E,0x02,0x20,0x23,0xF5,0x20,0xEF,0xF4,0xAA,0x10,0x1D,0x48,0xAD,0x6A,0x02,0x29,0x08,0xD0,0x0F,0x68,0x48,0xC9,0xA0,0x90,0x06,0x20,0x14,0xFB,0x4C,0xE3,0xF4,0x20,0x2A,0xFB,0x68,0x4C,0xE9,0xF4,0xA9,0x00,0xAA,0x68,0xA8,0x28,0x68,0x60,0xAD,0x09,0x02,0xA8,0xA9,0x00,0xC0,0xA4,0xF0,0x04,0xC0,0xA7,0xD0,0x03,0x18,0x69,0x40,0x18,0x6D,0x08,0x02,0x10,0x1C,0x29,0x7F,0xAA,0xBD,0x78,0xFF,0x2D,0x0C,0x02,0x10,0x03,0x38,0xE9,0x20,0x29,0x7F,0xC0,0xA2,0xD0,0x06,0xC9,0x40,0x30,0x02,0x29,0x1F,0x09,0x80,0x60,0xA9,0x38,0x8D,0x0D,0x02,0x8D,0x08,0x02,0x8D,0x09,0x02,0xA9,0x7F,0x48,0x68,0x48,0xAA,0xA9,0x07,0x20,0x61,0xF5,0x0D,0x0D,0x02,0x10,0x12,0xA2,0x00,0xA0,0x20,0xCC,0x0D,0x02,0xD0,0x01,0xE8,0x9D,0x08,0x02,0x68,0x48,0x9D,0x0A,0x02,0x38,0x68,0x6A,0x48,0x38,0xAD,0x0D,0x02,0xE9,0x08,0x8D,0x0D,0x02,0x10,0xD2,0x68,0x60,0x48,0xA9,0x0E,0x20,0x90,0xF5,0x68,0x29,0x07,0xAA,0x8D,0x11,0x02,0x09,0xB8,0x8D,0x00,0x03,0xA0,0x04,0x88,0xD0,0xFD,0xAD,0x00,0x03,0x29,0x08,0xD0,0x0D,0xCA,0x8A,0x29,0x07,0xAA,0xCD,0x11,0x02,0xD0,0xE5,0xA9,0x00,0x60,0x8A,0x09,0x80,0x60,0x08,0x78,0x8D,0x0F,0x03,0xA8,0x8A,0xC0,0x07,0xD0,0x02,0x09,0x40,0x48,0xAD,0x0C,0x03,0x09,0xEE,0x8D,0x0C,0x03,0x29,0x11,0x09,0xCC,0x8D,0x0C,0x03,0xAA,0x68,0x8D,0x0F,0x03,0x8A,0x09,0xEC,0x8D,0x0C,0x03,0x29,0x11,0x09,0xCC,0x8D,0x0C,0x03,0x28,0x60,0x08,0x78,0x8D,0x01,0x03,0xAD,0x00,0x03,0x29,0xEF,0x8D,0x00,0x03,0xAD,0x00,0x03,0x09,0x10,0x8D,0x00,0x03,0x28,0xAD,0x0D,0x03,0x29,0x02,0xF0,0xF9,0xAD,0x0D,0x03,0x60,0xCF,0xCF,0xCF,0xCF,0xA3,0xCF,0xA6,0xCC,0x00,0x27,0x34,0x0F,0x66,0x99,0x60,0xCF,0xA7,0xB3,0xCF,0xA8,0xBE,0xCF,0xCF,0xCF,0xCF,0xCF,0xA5,0xA5,0xCF,0xA4,0x84,0xCF,0x29,0x1F,0xAA,0xBD,0xE2,0xF5,0x18,0x69,0x2F,0x8D,0x61,0x02,0xA9,0x00,0x69,0xF6,0x8D,0x62,0x02,0xAD,0x6A,0x02,0x48,0x29,0xFE,0x8D,0x6A,0x02,0x68,0x29,0x01,0x8D,0x51,0x02,0xA9,0x00,0x20,0x01,0xF8,0x38,0xA9,0x00,0x6C,0x61,0x02,0xCE,0x69,0x02,0x30,0x05,0x20,0xD7,0xF7,0xD0,0x40,0xA9,0x27,0x8D,0x69,0x02,0xAD,0x68,0x02,0xC9,0x01,0xF0,0x34,0xCE,0x68,0x02,0x38,0xA5,0x12,0xE9,0x28,0x85,0x12,0xB0,0x02,0xC6,0x13,0x4C,0xFE,0xF6,0xEE,0x69,0x02,0xA2,0x27,0xEC,0x69,0x02,0x10,0x19,0x20,0x0D,0xF7,0xAD,0x68,0x02,0xCD,0x7E,0x02,0xF0,0x11,0xEE,0x68,0x02,0x18,0xA5,0x12,0x69,0x28,0x85,0x12,0x90,0x02,0xE6,0x13,0x4C,0xFE,0xF6,0x20,0x5D,0xF3,0xA2,0x06,0xBD,0x77,0x02,0x95,0x0B,0xCA,0xD0,0xF8,0x20,0xC4,0xED,0x20,0x6E,0xF3,0x20,0x1A,0xF7,0x4C,0xFE,0xF6,0xAE,0x7E,0x02,0xAD,0x7A,0x02,0x85,0x12,0xAD,0x7B,0x02,0x85,0x13,0x20,0x1A,0xF7,0x18,0xA5,0x12,0x69,0x28,0x85,0x12,0x90,0x02,0xE6,0x13,0xCA,0xD0,0xEF,0x20,0x0D,0xF7,0xA9,0x01,0x8D,0x68,0x02,0xAD,0x7A,0x02,0x85,0x12,0xAD,0x7B,0x02,0x85,0x13,0x4C,0xFE,0xF6,0x20,0x0D,0xF7,0x8E,0x53,0x02,0x4C,0xFE,0xF6,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x4D,0x6A,0x02,0x8D,0x6A,0x02,0x4C,0xFE,0xF6,0xAD,0x51,0x02,0x49,0x01,0x8D,0x51,0x02,0x4C,0xFE,0xF6,0xAD,0x0C,0x02,0x49,0x80,0x8D,0x0C,0x02,0x20,0x5A,0xF7,0x4C,0xFE,0xF6,0x20,0x9F,0xFA,0xAD,0x6A,0x02,0x0D,0x51,0x02,0x8D,0x6A,0x02,0xA9,0x01,0x20,0x01,0xF8,0x60,0xA2,0x00,0x20,0xDE,0xF7,0xD0,0x02,0xE8,0xE8,0x8E,0x69,0x02,0x60,0xA0,0x27,0xA9,0x20,0x91,0x12,0x88,0x10,0xFB,0xA0,0x00,0xAD,0x6B,0x02,0x91,0x12,0xAD,0x6C,0x02,0xC8,0x91,0x12,0x60,0xA0,0x00,0x8C,0x63,0x02,0x8D,0x64,0x02,0x0A,0x2E,0x63,0x02,0x0A,0x2E,0x63,0x02,0x18,0x6D,0x64,0x02,0x90,0x03,0xEE,0x63,0x02,0x0A,0x2E,0x63,0x02,0x0A,0x2E,0x63,0x02,0x0A,0x2E,0x63,0x02,0xAC,0x63,0x02,0x60,0xAD,0x0C,0x02,0x10,0x07,0xA9,0x70,0xA0,0xF7,0x4C,0x6A,0xF7,0xA9,0x76,0xA0,0xF7,0xA2,0x23,0x20,0x65,0xF8,0x60,0x07,0x43,0x41,0x50,0x53,0x00,0x07,0x20,0x20,0x20,0x20,0x00,0x48,0x08,0x98,0x48,0x8A,0x48,0xD8,0xE0,0x13,0xF0,0x46,0xE0,0x14,0xF0,0x42,0xE0,0x06,0xF0,0x3E,0xAD,0x6A,0x02,0x29,0x02,0xF0,0x3A,0x8A,0xC9,0x20,0x90,0x32,0xAD,0x6A,0x02,0x29,0x10,0xF0,0x13,0x8A,0x38,0xE9,0x40,0x30,0x09,0x29,0x1F,0x20,0xE4,0xF7,0xA9,0x1B,0xD0,0x1C,0xA9,0x20,0x10,0xF5,0xE0,0x7F,0xF0,0x08,0x68,0x48,0x20,0xE4,0xF7,0x4C,0xD0,0xF7,0xA9,0x08,0x20,0x02,0xF6,0xA9,0x20,0x20,0xE4,0xF7,0xA9,0x08,0x20,0x02,0xF6,0x68,0xAA,0x68,0xA8,0x28,0x68,0x60,0xAD,0x69,0x02,0x29,0xFE,0xD0,0x05,0xAD,0x6A,0x02,0x29,0x20,0x60,0x48,0xAC,0x69,0x02,0x91,0x12,0x2C,0x6A,0x02,0x50,0x0B,0xAD,0x69,0x02,0x18,0x69,0x28,0xA8,0x68,0x48,0x91,0x12,0xA9,0x09,0x20,0x02,0xF6,0x68,0x60,0x2D,0x6A,0x02,0x4A,0x6A,0x8D,0x65,0x02,0xAC,0x69,0x02,0xB1,0x12,0x29,0x7F,0x0D,0x65,0x02,0x91,0x12,0x60,0xA9,0x00,0x85,0x0C,0xA9,0xB9,0x85,0x0D,0xA9,0x00,0x20,0x2D,0xF8,0xA0,0xBA,0x84,0x0D,0xA9,0x20,0x20,0x2D,0xF8,0x60,0xA0,0x00,0x48,0x20,0x54,0xF8,0x91,0x0C,0xC8,0x68,0x48,0x20,0x52,0xF8,0x68,0x48,0x20,0x50,0xF8,0x91,0x0C,0xC8,0xC0,0x00,0xF0,0x07,0x68,0x18,0x69,0x01,0x4C,0x2F,0xF8,0x68,0x60,0x4A,0x4A,0x4A,0x4A,0x29,0x03,0xAA,0xBD,0x61,0xF8,0x91,0x0C,0xC8,0x91,0x0C,0xC8,0x60,0x00,0x38,0x07,0x3F,0x85,0x0C,0x84,0x0D,0xAD,0x1F,0x02,0xD0,0x0D,0xA0,0x00,0xB1,0x0C,0xF0,0x07,0x9D,0x80,0xBB,0xE8,0xC8,0xD0,0xF5,0x60,0x4C,0x7C,0xF7,0x4C,0x78,0xEB,0x4C,0xC1,0xF5,0x4C,0x65,0xF8,0x4C,0x22,0xEE,0x4C,0xB2,0xF8,0x40,0xA2,0xFF,0x9A,0x58,0xD8,0xA2,0x12,0xBD,0x7C,0xF8,0x9D,0x38,0x02,0xCA,0x10,0xF7,0xA9,0x20,0x8D,0x4E,0x02,0xA9,0x04,0x8D,0x4F,0x02,0x20,0x14,0xFA,0x20,0xB8,0xF8,0x4C,0xCC,0xEC,0x20,0xB8,0xF8,0x4C,0x71,0xC4,0x20,0xAA,0xF9,0xA9,0x07,0xA2,0x40,0x20,0x90,0xF5,0x20,0xE0,0xED,0x20,0x0E,0xF9,0xA9,0xFF,0x8D,0x0C,0x02,0x20,0xC9,0xF9,0xA2,0x05,0x20,0x82,0xF9,0x20,0x16,0xF8,0x20,0x5A,0xF7,0x60,0x48,0x8A,0x48,0xA9,0x01,0x8D,0x1F,0x02,0xA9,0xBF,0x8D,0x7B,0x02,0x8D,0x79,0x02,0xA9,0x68,0x8D,0x7A,0x02,0xA9,0x90,0x8D,0x78,0x02,0xA9,0x03,0x8D,0x7E,0x02,0xA9,0x00,0x8D,0x7D,0x02,0xA9,0x50,0x8D,0x7C,0x02,0xA2,0x0C,0x20,0x38,0x02,0x68,0xAA,0x68,0x60,0x48,0xA9,0x03,0x8D,0x6A,0x02,0xA9,0x00,0x8D,0x6C,0x02,0xA9,0x17,0x8D,0x6B,0x02,0x68,0x60,0x48,0xAD,0x1F,0x02,0xD0,0x05,0xA2,0x0B,0x20,0x82,0xF9,0xA9,0xFE,0x2D,0x6A,0x02,0x8D,0x6A,0x02,0xA9,0x1E,0x8D,0xDF,0xBF,0xA9,0x40,0x8D,0x00,0xA0,0xA2,0x17,0x20,0x82,0xF9,0xA9,0x00,0x8D,0x19,0x02,0x8D,0x1A,0x02,0x85,0x10,0xA9,0xA0,0x85,0x11,0xA9,0x20,0x8D,0x15,0x02,0xA9,0xFF,0x8D,0x13,0x02,0x20,0xDC,0xF8,0xA9,0x01,0x0D,0x6A,0x02,0x8D,0x6A,0x02,0x68,0x60,0x48,0xA9,0xFE,0x2D,0x6A,0x02,0x8D,0x6A,0x02,0xA2,0x11,0x20,0x82,0xF9,0x20,0xC9,0xF9,0xA9,0x01,0x0D,0x6A,0x02,0x8D,0x6A,0x02,0x68,0x60,0xA0,0x06,0xBD,0x92,0xF9,0x99,0x0B,0x00,0xCA,0x88,0xD0,0xF6,0x20,0xC4,0xED,0x60,0x78,0xFC,0x00,0xB5,0x00,0x03,0x00,0xB4,0x00,0x98,0x80,0x07,0x00,0x98,0x00,0xB4,0x80,0x07,0x00,0xA0,0x01,0xA0,0x3F,0x1F,0xA9,0xFF,0x8D,0x03,0x03,0xA9,0xF7,0x8D,0x02,0x03,0xA9,0xB7,0x8D,0x00,0x03,0xA9,0xDD,0x8D,0x0C,0x03,0xA9,0x7F,0x8D,0x0E,0x03,0xA9,0x00,0x8D,0x0B,0x03,0x60,0xA9,0x1A,0x20,0x07,0xFA,0xA9,0x20,0xA0,0x28,0x99,0x7F,0xBB,0x88,0xD0,0xFA,0xA9,0x00,0x8D,0x1F,0x02,0xA9,0xBB,0x8D,0x7B,0x02,0x8D,0x79,0x02,0xA9,0xA8,0x8D,0x7A,0x02,0xA9,0xD0,0x8D,0x78,0x02,0xA9,0x1B,0x8D,0x7E,0x02,0xA9,0x04,0x8D,0x7D,0x02,0xA9,0x10,0x8D,0x7C,0x02,0xA2,0x0C,0x20,0x38,0x02,0x20,0x5A,0xF7,0x60,0x8D,0xDF,0xBF,0xA9,0x02,0xA2,0x00,0xA0,0x03,0x20,0xC9,0xEE,0x60,0xA0,0x00,0x8C,0x60,0x02,0x8C,0x20,0x02,0x8C,0x00,0x05,0x84,0x0E,0x88,0x84,0x0C,0x8C,0x00,0x45,0xAD,0x00,0x05,0xD0,0x04,0xA9,0xC0,0xD0,0x05,0xEE,0x20,0x02,0xA9,0x40,0x85,0x0F,0xC8,0xA9,0x03,0x85,0x0D,0xE6,0x0C,0xD0,0x02,0xE6,0x0D,0xA5,0x0C,0xC5,0x0E,0xD0,0x06,0xA5,0x0D,0xC5,0x0F,0xF0,0x0F,0xA9,0xAA,0x91,0x0C,0xD1,0x0C,0xD0,0x07,0x4A,0x91,0x0C,0xD1,0x0C,0xF0,0xDF,0x38,0xA5,0x0F,0xE9,0x28,0x85,0x0F,0xA5,0x0E,0xC5,0x0C,0xA5,0x0F,0xE5,0x0D,0x90,0x09,0xA5,0x0C,0xA4,0x0D,0xEE,0x60,0x02,0xD0,0x04,0xA5,0x0E,0xA4,0x0F,0x85,0xA6,0x84,0xA7,0x8D,0xC1,0x02,0x8C,0xC2,0x02,0x60,0x08,0x78,0x86,0x14,0x84,0x15,0xA0,0x00,0xB1,0x14,0xAA,0x98,0x48,0x20,0x90,0xF5,0x68,0xA8,0xC8,0xC0,0x0E,0xD0,0xF1,0x28,0x60,0xA2,0xA7,0xA0,0xFA,0x20,0x86,0xFA,0x60,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x10,0x00,0x00,0x00,0x0F,0x00,0xA2,0xBD,0xA0,0xFA,0x20,0x86,0xFA,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x07,0x10,0x10,0x10,0x00,0x08,0x00,0xA2,0xD3,0xA0,0xFA,0x20,0x86,0xFA,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x07,0x10,0x10,0x10,0x00,0x18,0x00,0xA2,0x06,0xA0,0xFB,0x20,0x86,0xFA,0xA9,0x00,0xAA,0x8A,0x48,0xA9,0x00,0x20,0x90,0xF5,0xA2,0x00,0xCA,0xD0,0xFD,0x68,0xAA,0xE8,0xE0,0x70,0xD0,0xED,0xA9,0x08,0xA2,0x00,0x20,0x90,0xF5,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x0F,0x00,0x00,0x00,0x00,0x00,0xA2,0x1C,0xA0,0xFB,0x20,0x86,0xFA,0x60,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x10,0x00,0x00,0x1F,0x00,0x00,0xA2,0x32,0xA0,0xFB,0x20,0x86,0xFA,0x60,0x2F,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x10,0x00,0x00,0x1F,0x00,0x00,0xAD,0xE1,0x02,0xC9,0x01,0xD0,0x22,0xA9,0x00,0xAE,0xE3,0x02,0x20,0x90,0xF5,0xA9,0x01,0xAE,0xE4,0x02,0x20,0x90,0xF5,0xAD,0xE5,0x02,0x29,0x0F,0xD0,0x04,0xA2,0x10,0xD0,0x01,0xAA,0xA9,0x08,0x20,0x90,0xF5,0x60,0xC9,0x02,0xD0,0x22,0xA9,0x02,0xAE,0xE3,0x02,0x20,0x90,0xF5,0xA9,0x03,0xAE,0xE4,0x02,0x20,0x90,0xF5,0xAD,0xE5,0x02,0x29,0x0F,0xD0,0x04,0xA2,0x10,0xD0,0x01,0xAA,0xA9,0x09,0x20,0x90,0xF5,0x60,0xC9,0x03,0xD0,0x22,0xA9,0x04,0xAE,0xE3,0x02,0x20,0x90,0xF5,0xA9,0x05,0xAE,0xE4,0x02,0x20,0x90,0xF5,0xAD,0xE5,0x02,0x29,0x0F,0xD0,0x04,0xA2,0x10,0xD0,0x01,0xAA,0xA9,0x0A,0x20,0x90,0xF5,0x60,0xA9,0x06,0xAE,0xE3,0x02,0x20,0x90,0xF5,0xAD,0xE1,0x02,0xC9,0x04,0xF0,0x93,0xC9,0x05,0xF0,0xB5,0xC9,0x06,0xF0,0xD7,0xEE,0xE0,0x02,0x60,0xAD,0xE3,0x02,0x0A,0x0A,0x0A,0x0D,0xE1,0x02,0x49,0x3F,0xAA,0xA9,0x07,0x20,0x90,0xF5,0x18,0xAD,0xE7,0x02,0x0A,0x8D,0xE7,0x02,0xAD,0xE8,0x02,0x2A,0x8D,0xE8,0x02,0xA9,0x0B,0xAE,0xE7,0x02,0x20,0x90,0xF5,0xA9,0x0C,0xAE,0xE8,0x02,0x20,0x90,0xF5,0xAD,0xE5,0x02,0x29,0x07,0xA8,0xB9,0x10,0xFC,0xAA,0xA9,0x0D,0x20,0x90,0xF5,0x60,0x00,0x00,0x04,0x08,0x0A,0x0B,0x0C,0x0D,0xA2,0xE1,0xA9,0x04,0x20,0xE4,0xF2,0xB0,0x39,0xA2,0xE3,0xA9,0x08,0x20,0xF8,0xF2,0xB0,0x30,0xA2,0xE5,0xA9,0x0D,0x20,0xE4,0xF2,0xB0,0x27,0xAC,0xE3,0x02,0xAE,0xE5,0x02,0xBD,0x5E,0xFC,0x8D,0xE4,0x02,0xBD,0x6B,0xFC,0x8D,0xE3,0x02,0xAD,0xE7,0x02,0x8D,0xE5,0x02,0x88,0x30,0x09,0x4E,0xE4,0x02,0x6E,0xE3,0x02,0x4C,0x4B,0xFC,0x4C,0x40,0xFB,0xEE,0xE0,0x02,0x60,0x00,0x07,0x07,0x06,0x06,0x05,0x05,0x05,0x04,0x04,0x04,0x04,0x03,0x00,0x77,0x0B,0xA6,0x47,0xEC,0x97,0x47,0xFB,0xB3,0x70,0x30,0xF4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x08,0x08,0x08,0x08,0x00,0x08,0x00,0x14,0x14,0x14,0x00,0x00,0x00,0x00,0x00,0x14,0x14,0x3E,0x14,0x3E,0x14,0x14,0x00,0x08,0x1E,0x28,0x1C,0x0A,0x3C,0x08,0x00,0x30,0x32,0x04,0x08,0x10,0x26,0x06,0x00,0x10,0x28,0x28,0x10,0x2A,0x24,0x1A,0x00,0x08,0x08,0x08,0x00,0x00,0x00,0x00,0x00,0x08,0x10,0x20,0x20,0x20,0x10,0x08,0x00,0x08,0x04,0x02,0x02,0x02,0x04,0x08,0x00,0x08,0x2A,0x1C,0x08,0x1C,0x2A,0x08,0x00,0x00,0x08,0x08,0x3E,0x08,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x08,0x10,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x04,0x08,0x10,0x20,0x00,0x00,0x1C,0x22,0x26,0x2A,0x32,0x22,0x1C,0x00,0x08,0x18,0x08,0x08,0x08,0x08,0x1C,0x00,0x1C,0x22,0x02,0x04,0x08,0x10,0x3E,0x00,0x3E,0x02,0x04,0x0C,0x02,0x22,0x1C,0x00,0x04,0x0C,0x14,0x24,0x3E,0x04,0x04,0x00,0x3E,0x20,0x3C,0x02,0x02,0x22,0x1C,0x00,0x0C,0x10,0x20,0x3C,0x22,0x22,0x1C,0x00,0x3E,0x02,0x04,0x08,0x10,0x10,0x10,0x00,0x1C,0x22,0x22,0x1C,0x22,0x22,0x1C,0x00,0x1C,0x22,0x22,0x1E,0x02,0x04,0x18,0x00,0x00,0x00,0x08,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x08,0x08,0x10,0x04,0x08,0x10,0x20,0x10,0x08,0x04,0x00,0x00,0x00,0x3E,0x00,0x3E,0x00,0x00,0x00,0x10,0x08,0x04,0x02,0x04,0x08,0x10,0x00,0x1C,0x22,0x04,0x08,0x08,0x00,0x08,0x00,0x1C,0x22,0x2A,0x2E,0x2C,0x20,0x1E,0x00,0x08,0x14,0x22,0x22,0x3E,0x22,0x22,0x00,0x3C,0x22,0x22,0x3C,0x22,0x22,0x3C,0x00,0x1C,0x22,0x20,0x20,0x20,0x22,0x1C,0x00,0x3C,0x22,0x22,0x22,0x22,0x22,0x3C,0x00,0x3E,0x20,0x20,0x3C,0x20,0x20,0x3E,0x00,0x3E,0x20,0x20,0x3C,0x20,0x20,0x20,0x00,0x1E,0x20,0x20,0x20,0x26,0x22,0x1E,0x00,0x22,0x22,0x22,0x3E,0x22,0x22,0x22,0x00,0x1C,0x08,0x08,0x08,0x08,0x08,0x1C,0x00,0x02,0x02,0x02,0x02,0x02,0x22,0x1C,0x00,0x22,0x24,0x28,0x30,0x28,0x24,0x22,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x00,0x22,0x36,0x2A,0x2A,0x22,0x22,0x22,0x00,0x22,0x22,0x32,0x2A,0x26,0x22,0x22,0x00,0x1C,0x22,0x22,0x22,0x22,0x22,0x1C,0x00,0x3C,0x22,0x22,0x3C,0x20,0x20,0x20,0x00,0x1C,0x22,0x22,0x22,0x2A,0x24,0x1A,0x00,0x3C,0x22,0x22,0x3C,0x28,0x24,0x22,0x00,0x1C,0x22,0x20,0x1C,0x02,0x22,0x1C,0x00,0x3E,0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x22,0x22,0x22,0x22,0x22,0x22,0x1C,0x00,0x22,0x22,0x22,0x22,0x22,0x14,0x08,0x00,0x22,0x22,0x22,0x2A,0x2A,0x36,0x22,0x00,0x22,0x22,0x14,0x08,0x14,0x22,0x22,0x00,0x22,0x22,0x14,0x08,0x08,0x08,0x08,0x00,0x3E,0x02,0x04,0x08,0x10,0x20,0x3E,0x00,0x1E,0x10,0x10,0x10,0x10,0x10,0x1E,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x00,0x00,0x3C,0x04,0x04,0x04,0x04,0x04,0x3C,0x00,0x08,0x14,0x2A,0x08,0x08,0x08,0x08,0x00,0x0E,0x10,0x10,0x10,0x3C,0x10,0x3E,0x00,0x0C,0x12,0x2D,0x29,0x29,0x2D,0x12,0x0C,0x00,0x00,0x1C,0x02,0x1E,0x22,0x1E,0x00,0x20,0x20,0x3C,0x22,0x22,0x22,0x3C,0x00,0x00,0x00,0x1E,0x20,0x20,0x20,0x1E,0x00,0x02,0x02,0x1E,0x22,0x22,0x22,0x1E,0x00,0x00,0x00,0x1C,0x22,0x3E,0x20,0x1E,0x00,0x0C,0x12,0x10,0x3C,0x10,0x10,0x10,0x00,0x00,0x00,0x1C,0x22,0x22,0x1E,0x02,0x1C,0x20,0x20,0x3C,0x22,0x22,0x22,0x22,0x00,0x08,0x00,0x18,0x08,0x08,0x08,0x1C,0x00,0x04,0x00,0x0C,0x04,0x04,0x04,0x24,0x18,0x20,0x20,0x22,0x24,0x38,0x24,0x22,0x00,0x18,0x08,0x08,0x08,0x08,0x08,0x1C,0x00,0x00,0x00,0x36,0x2A,0x2A,0x2A,0x22,0x00,0x00,0x00,0x3C,0x22,0x22,0x22,0x22,0x00,0x00,0x00,0x1C,0x22,0x22,0x22,0x1C,0x00,0x00,0x00,0x3C,0x22,0x22,0x3C,0x20,0x20,0x00,0x00,0x1E,0x22,0x22,0x1E,0x02,0x02,0x00,0x00,0x2E,0x30,0x20,0x20,0x20,0x00,0x00,0x00,0x1E,0x20,0x1C,0x02,0x3C,0x00,0x10,0x10,0x3C,0x10,0x10,0x12,0x0C,0x00,0x00,0x00,0x22,0x22,0x22,0x26,0x1A,0x00,0x00,0x00,0x22,0x22,0x22,0x14,0x08,0x00,0x00,0x00,0x22,0x22,0x2A,0x2A,0x36,0x00,0x00,0x00,0x22,0x14,0x08,0x14,0x22,0x00,0x00,0x00,0x22,0x22,0x22,0x1E,0x02,0x1C,0x00,0x00,0x3E,0x04,0x08,0x10,0x3E,0x00,0x0E,0x18,0x18,0x30,0x18,0x18,0x0E,0x00,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x38,0x0C,0x0C,0x06,0x0C,0x0C,0x38,0x00,0x2A,0x15,0x2A,0x15,0x2A,0x15,0x2A,0x15,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x37,0xEA,0xED,0xEB,0x20,0xF5,0xF9,0x38,0xEE,0xF4,0x36,0x39,0x2C,0xE9,0xE8,0xEC,0x35,0xF2,0xE2,0x3B,0x2E,0xEF,0xE7,0x30,0xF6,0xE6,0x34,0x2D,0x0B,0xF0,0xE5,0x2F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x31,0x1B,0xFA,0x00,0x08,0x7F,0xE1,0x0D,0xF8,0xF1,0x32,0x5C,0x0A,0x5D,0xF3,0x00,0x33,0xE4,0xE3,0x27,0x09,0x5B,0xF7,0x3D,0x26,0x4A,0x4D,0x4B,0x20,0x55,0x59,0x2A,0x4E,0x54,0x5E,0x28,0x3C,0x49,0x48,0x4C,0x25,0x52,0x42,0x3A,0x3E,0x4F,0x47,0x29,0x56,0x46,0x24,0x5F,0x0B,0x50,0x45,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x21,0x1B,0x5A,0x00,0x08,0x7F,0x41,0x0D,0x58,0x51,0x40,0x7C,0x0A,0x7D,0x53,0x00,0x23,0x44,0x43,0x22,0x09,0x7B,0x57,0x2B,0xD0,0x01,0x47,0x02,0x8F,0xF8,0x44,0x02];\n\nmodule.exports = basic11ROM;\n\n\n//# sourceURL=webpack:///./src/basic11ROM.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var cpu = __webpack_require__(/*! ./oric1.js */ \"./src/oric1.js\");\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/keyboard.js":
/*!*************************!*\
  !*** ./src/keyboard.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n// 11111110 FE\n// 11111101 FD\n// 11111011 FB\n// 11110111 F7\n// 11101111 EF\n// 11011111 DF\n// 10111111 BF\n// 01111111 7F\n\nfunction getKeyState(row, col) {\n    return keyboard[row][col];\n}\n\nfunction setKeyState(key,b) {\n    if(key.code == 'Digit3') // 3\n        keyboard[0][0x7f]=b;\n    if(key.code == 'KeyX') // x\n        keyboard[0][0xbf]=b;\n    if(key.code == 'Digit1') // 1\n        keyboard[0][0xdf]=b;\n    if(key.code == 'KeyV') // V\n        keyboard[0][0xf7]=b;\n    if(key.code == 'Digit5') // 5\n        keyboard[0][0xfb]=b;\n    if(key.code == 'KeyN') // N\n        keyboard[0][0xfd]=b;\n    if(key.code == 'Digit7') // 7\n        keyboard[0][0xfe]=b;\n\n\n    if(key.code == 'KeyD')\n        keyboard[1][0x7f]=b;\n    if(key.code == 'KeyQ')\n        keyboard[1][0xbf]=b;\n    if(key.code == 'KeyF')\n        keyboard[1][0xf7]=b;\n    if(key.code == 'KeyR')\n        keyboard[1][0xfb]=b;\n    if(key.code == 'KeyT')\n        keyboard[1][0xfd]=b;\n    if(key.code == 'KeyJ')\n        keyboard[1][0xfe]=b;\n\n\n    if(key.code == 'KeyC') // C\n        keyboard[2][0x7f]=b;\n    if(key.code == 'Digit2') // 2\n        keyboard[2][0xbf]=b;\n    if(key.code == 'KeyZ') // Z\n        keyboard[2][0xdf]=b;\n    if(key.code == 'AltLeft' || key.code == 'AltRight') // use alt as control otherwise it trigger browser shortcuts\n        keyboard[2][0xef]=b;\n    if(key.code == 'Digit4') // 4\n        keyboard[2][0xf7]=b;\n    if(key.code == 'KeyB') // B\n        keyboard[2][0xfb]=b;\n    if(key.code == 'Digit6') // 6\n        keyboard[2][0xfd]=b;\n    if(key.code == 'KeyM') // M\n        keyboard[2][0xfe]=b;\n\n        \n\n    if(key.code == 'Quote') // '\n        keyboard[3][0x7f]=b;\n    if(key.code == 'Backslash') // \\\n        keyboard[3][0xbf]=b;\n    if(key.code == 'ShiftLeft') // \n        keyboard[3][0xef]=b;\n    if(key.code == 'Minus') // -\n        keyboard[3][0xf7]=b;\n    if(key.code == 'Semicolon') // =b;\n        keyboard[3][0xfb]=b;\n    if(key.code == 'Digit9') // 9\n        keyboard[3][0xfd]=b;\n    if(key.code == 'KeyK') // K\n        keyboard[3][0xfe]=b;\n\n\n    if(key.code == 'Space') // space\n        keyboard[4][0x7f]=b;\n    if(key.code == 'ArrowDown') // down\n        keyboard[4][0xbf]=b;\n    if(key.code == 'ArrowLeft') // left\n        keyboard[4][0xdf]=b;\n    if(key.code == 'ArrowUp') // up\n        keyboard[4][0xf7]=b;\n    if(key.code == 'Period') // .\n        keyboard[4][0xfb]=b;\n    if(key.code == 'Comma') // ][\n        keyboard[4][0xfd]=b;\n\n    if(key.code == 'BracketLeft') // [\n        keyboard[5][0x7f]=b;\n    if(key.code == 'BracketRight') // ]\n        keyboard[5][0xbf]=b;\n    if(key.code == 'Backspace') // backspace\n        keyboard[5][0xdf]=b;\n    if(key.code == 'KeyP') // P\n        keyboard[5][0xf7]=b;\n    if(key.code == 'KeyO') // O\n        keyboard[5][0xfb]=b;\n    if(key.code == 'KeyI') // I\n        keyboard[5][0xfd]=b;\n    if(key.code == 'KeyU') // U\n        keyboard[5][0xfe]=b;\n\n    if(key.code == 'KeyW') // W\n        keyboard[6][0x7f]=b;\n    if(key.code == 'KeyS') // S \n        keyboard[6][0xbf]=b;\n    if(key.code == 'KeyA') // A\n        keyboard[6][0xdf]=b;\n    if(key.code == 'KeyE') // E\n        keyboard[6][0xf7]=b;\n    if(key.code == 'KeyG') // G\n        keyboard[6][0xfb]=b;\n    if(key.code == 'KeyH') // H\n        keyboard[6][0xfd]=b;\n    if(key.code == 'KeyY') // Y\n        keyboard[6][0xfe]=b;\n\n    if(key.code == 'Equal') // =\n        keyboard[7][0x7f]=b;\n    if(key.code == 'Enter') // RETURN\n        keyboard[7][0xdf]=b;\n    if(key.code == 'ShiftRight') // ?\n        keyboard[7][0xef]=b;\n    if(key.code == 'Slash') // /\n        keyboard[7][0xf7]=b;\n    if(key.code == 'Digit0') // 0\n        keyboard[7][0xfb]=b;\n    if(key.code == 'KeyL') // L\n        keyboard[7][0xfd]=b;\n    if(key.code == 'Digit8') // 8\n        keyboard[7][0xfe]=b;\n}\n\nvar pressedKey = [];\nvar keyboard=[];\nfor(var i=0;i<8;i++)\n    keyboard[i]=[];\n\ndocument.onkeyup = function(key) {\n    setKeyState(key, false);\n}\ndocument.onkeydown = function(key) {\n    setKeyState(key, true);\n}\n\nmodule.exports = {\n    getKeyState: getKeyState\n}\n\n\n\n//# sourceURL=webpack:///./src/keyboard.js?");

/***/ }),

/***/ "./src/oric1.js":
/*!**********************!*\
  !*** ./src/oric1.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function hex(n,p) {\n    if(p==undefined) p = 2;\n    if(n==undefined) return \"XX\";\n    \n    var tmp = pad(n.toString(16).toUpperCase(), p);\n    if(tmp.length == 3)\n        return \"0\"+tmp;\n    return tmp;\n}\n\nfunction pad(n, width, z) {\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nfunction toBin(v) {\n    if(v==undefined) v = 0;\n    return pad(v.toString(2), 8, \"0\").replace(/0/g,'_').replace(/1/g,'#');\n}\n\nvar addr_space = {\n    write:function(addr, src) {\n        if(addr>=0x300 && addr<0x400) {\n            VIA.write(addr&0xf, src);\n        }\n\n        memory[addr] = src&0xFF;\n    },\n    read:function(addr) {\n        if(addr >= 0xc000)\n            return rom[addr-0xc000];\n        if(addr >= 0x300 && addr<0x400) {\n            return VIA.read(addr&0xf);\n        }\n\n        return memory[addr];\n    }\n}\n\nvar memory = Array(0xFFFF);\nvar rom = __webpack_require__(/*! ./basic11ROM.js */ \"./src/basic11ROM.js\")\n\nvar cycles = 0;\n\nvar rastercycles     = 20000;  // every 1/50s  = 20ms\nvar IRQCycles        = 100000; // every 1/100s = 10ms\nvar rasterlinecycles = 200;  // every 1/50s  = 20ms\nvar rasterLine = 0;\n\nvar n = 0 ;\nvar VIA = __webpack_require__(/*! ./p6522.js */ \"./src/p6522.js\");\nvar CPU = __webpack_require__(/*! ./p6502.js */ \"./src/p6502.js\");\nvar p8912 = __webpack_require__(/*! ./p8912.js */ \"./src/p8912.js\");\nvar keyboard = __webpack_require__(/*! ./keyboard.js */ \"./src/keyboard.js\");\nvar screen = __webpack_require__(/*! ./screen.js */ \"./src/screen.js\")();\nvar cpu = CPU({addr_space: addr_space, memory: memory});\n\nvar oric1 = {\n    stats: {},\n    run: function(opts) {\n        this.VIA = VIA;\n        this.p8912 = p8912;\n        this.keyboard = keyboard;\n        \n        cpu.reset();\n        this.opts = opts;\n\n        var self=this;\n        function once() {\n            var c = 1000;\n            while(c--) {\n                self.step();\n            }\n            \n            window.setTimeout(once,0);\n        }\n        \n        once();\n    },\n    step: function() {\n        cpu.step();\n        var icycles = cpu.icycles;\n\n        p8912.step(this);\n        \n        VIA.step(this);\n\n        // count cycles\n        if(icycles==1)\n            icycles = 2;\n        cycles += icycles;\n\n        // count raster line\n        rasterlinecycles-=icycles;\n        if(rasterlinecycles <= 0) {\n            rasterlinecycles+=200;\n            rasterline = (rasterLine++)%200;\n            screen.rasterline(rasterline, memory);\n            if(rasterline == 0) {\n                screen.vsync();\n            }\n        }\n\n        // count IRQ cycles\n        IRQCycles -= icycles;\n        if(IRQCycles<=0) {\n            //IRQCycles += 100000;\n            IRQCycles += 10000;\n            cpu.irq();\n        }\n    }\n}\n\noric1.run();\n//module.exports = oric1;\n\n\n//# sourceURL=webpack:///./src/oric1.js?");

/***/ }),

/***/ "./src/p6502.js":
/*!**********************!*\
  !*** ./src/p6502.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var PC = 0;\n\nvar SP = 0x0;\nvar A = 0;\nvar X = 0;\nvar Y = 0;\n\nvar C = 0;\nvar Z = 0;\nvar I = 1;\nvar D = 0;\nvar B = 0;\nvar V = 0;\nvar N = 0;\n\nvar icycles = 0;\n\nvar logInstruction = false;\n\nfunction addr_space_read(addr) {\n    icycles ++;\n    return addr_space.read(addr);\n}\n\nfunction addr_space_write(addr,v) {\n    icycles ++;\n    addr_space.write(addr,v);\n}\n\nfunction setN(f) {\n    N = !!f;\n}\nfunction setV(f) {\n    V = !!f;\n}\nfunction setZ(f) {\n    Z = !f;\n}\nfunction setC(f) {\n    C = !!f;\n}\nfunction setI(f) {\n    I = f;\n}\nfunction setD(f) {\n    D = f;\n}\n\nfunction dumpAround(addr) {\n    console.log(hex(addr-2,4) + \" \" + hex(addr_space.read(addr-2)));\n    console.log(hex(addr-1,4) + \" \" + hex(addr_space.read(addr-1)));\n    console.log(hex(addr  ,4) + \" \" + hex(addr_space.read(addr)));\n    console.log(hex(addr+1,4) + \" \" + hex(addr_space.read(addr+1)));\n    console.log(hex(addr+2,4) + \" \" + hex(addr_space.read(addr+2)));\n}\n\nfunction dumpStack() {\n    for(var i=0;i<10;i++)\n        console.log(hex(0x100+SP+i,4) + \" \" + hex(addr_space.read(0x100+SP+i)));    \n}\n\nfunction getP() {\n    // N V 1 B D I Z C\n    return (N<<7) + (V<<6) + (1<<5) + (B<<4) + (D<<3) + (I<<2) + (Z<<1) + C; \n}\n\nfunction push(v) {\n    addr_space.write(0x100+SP, v);\n    SP--;\n    SP&=0xFF;\n    icycles ++;\n}\n\nfunction pull() {\n    SP++;\n    SP&=0xFF;\n    var v = addr_space.read(0x100+SP);\n    return v;\n}\n\nfunction push16(v) {\n    push((v>>8)&0xFF);\n    push(v&0xFF);\n}\n\nfunction pull16() {\n    var lo = pull();\n    var hi = pull();\n    return (hi<<8) + lo;\n}\n\nfunction pad(n, width, z) {\n  if(n==undefined) return \"XX\";\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nfunction rpad(n, width, z) {\n  if(n==undefined) return \"XX\";\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : n + new Array(width - n.length + 1).join(z);\n}\n\nfunction setSR(SR) {\n    N = !!(SR&0x80);\n    V = !!(SR&0x40);\n    B = 0;\n    D = !!(SR&0x08);\n    I = !!(SR&0x04);\n    Z = !!(SR&0x02);\n    C = !!(SR&0x01);\n}\n\nvar oper;\nvar addr;\nvar M;\nvar operStr;\nvar tmp;\nvar base;\nvar opcode;\n\n//\n// ADDRESSAGE\n//\nfunction ABS() {\n    var lo = cpu.fetch();\n    var hi = cpu.fetch();\n    oper = lo + (hi<<8)\n\n    M = addr_space_read(oper);\n    if(logInstruction)\n        operStr = \"$\"+hex(oper,4) + \" = \" + hex(M);\n}\n\nfunction ABS_J() {\n    var lo = cpu.fetch();\n    var hi = cpu.fetch();\n    oper = lo + (hi<<8)\n\n    M = addr_space_read(oper);\n    if(logInstruction)\n        operStr = \"$\"+hex(oper,4);\n}\n\nfunction ACC() {\n    oper = A;\n    M = A;\n}\n\nfunction IMM() {\n    oper = cpu.fetch();\n    if(logInstruction)\n        operStr = \"#$\"+hex(oper);\n    M = oper;\n}\n\nfunction IMP() {\n}\n\nfunction ABS_X() {\n    var lo = cpu.fetch();\n    var hi = cpu.fetch();\n    base = lo + (hi<<8)\n\n        oper = base + X;\n    M = addr_space_read(oper);\n    if(logInstruction)\n        operStr = \"$\"+hex(base,4)+\",X @ \"+hex(oper,4)+\" = \"+hex(M);\n}\n\nfunction ABS_Y() {\n    var lo = cpu.fetch();\n    var hi = cpu.fetch();\n    base = lo + (hi<<8)\n\n    oper = (base + Y)&0xFFFF;\n    M = addr_space_read(oper);\n    if(logInstruction)\n        operStr = \"$\"+hex(base,4)+\",Y @ \"+hex(oper,4)+\" = \"+hex(M);\n}\n\nfunction ZPG() {\n    oper = cpu.fetch();\n\n    M = addr_space_read(oper);\n    if(logInstruction)\n        operStr = \"$\"+ hex(oper,2) +\" = \"+ hex(M,2);\n}\n\nfunction ZPG_X() {\n\n    base = cpu.fetch();\n    oper = (base + X)&0xFF;\n    M = addr_space_read(oper);\n    if(logInstruction)\n        operStr = \"$\"+hex(base)+\",X @ \"+hex(oper)+\" = \"+hex(M);\n}\n\nfunction ZPG_Y() {\n    base = cpu.fetch();\n    oper = (base + Y)&0xFF;\n    M = addr_space_read(oper);\n    if(logInstruction)\n        operStr = \"$\"+hex(base)+\",Y @ \"+hex(oper)+\" = \"+hex(M);\n}\n\nfunction IND() {\n    var lo = cpu.fetch();\n    var hi = cpu.fetch();\n    addr = lo + (hi<<8)\n\n    var nextAddr = (addr&0xFF00)+((addr+1)&0xFF); // next in page\n\n    oper = addr_space_read(addr) + (addr_space.read(nextAddr)<<8);\n\n    if(logInstruction)\n        operStr = \"($\"+hex(addr,4)+\") = \"+hex(oper,4);\n}\n\nfunction X_IND() {\n    base = cpu.fetch();\n    oper = (base + X)&0xFF;\n    addr  = addr_space.read(oper&0xFF) + (addr_space.read((oper+1)&0xFF)<<8);\n    M = addr_space_read(addr);\n\n    if(logInstruction)\n        operStr = \"($\"+hex(base)+\",X) @ \"+hex(oper&0xFF) +\" = \"+hex(addr) + \" = \" + hex(M);\n    oper = addr;\n}\n\nfunction IND_Y() {\n    oper = cpu.fetch();\n    addr  = addr_space.read(oper) + (addr_space.read((oper+1)&0xFF)<<8);  \n    M = addr_space_read((addr+Y/*+C*/)&0xFFFF);\n\n    if(logInstruction)\n        operStr = \"($\"+hex(oper)+\"),Y = \"+hex(addr, 4) +\" @ \"+hex((addr+Y/*+C*/)&0xFFFF) + \" = \" + hex(M);\n    oper = (addr+Y)&0xFFFF;\n}\n\nfunction REL() {\n    var b = cpu.fetch();\n    if(b > 127)\n        b = (256-b) * -1;\n\n    oper = PC + b;\n    if(logInstruction)\n        operStr = \"$\"+hex(oper,4);\n}\n\n// unknown addr mode\nfunction UAM() {\n}\n\nfunction branch(pc) {\n    PC = pc;\n    icycles++;\n}\n\n//\n// OPCODE\n//\n\n// unknown opcode\nfunction UOP() {\n}\n\nfunction ADC() {\n    tmp = A + M + C;\n\n    setN( tmp&0x80 );\n    setZ( tmp&0xFF );\n    setC( tmp&0x100 );\n    setV( (~(A^M))&(A^tmp)&0x80 );\n\n    A = tmp&0xFF;\n}\n\nfunction ROR() {\n    var M1 = M&1;\n    tmp = M>>1;\n    if(C)\n        tmp|=0x80;\n    setN(tmp&0x80);\n    setC(M1);\n   \n    M = tmp&0xFF;\n    addr_space_write(oper, tmp&0xFF);\n}\n\nfunction AND() {\n\n    tmp = A & M;\n\n    setN( tmp&0x80 );\n    setZ( tmp&0xFF );\n\n    A = tmp&0xFF;\n}\n\nfunction ASL() {\n    tmp = (A<<1);\n\n    setN( tmp&0x80 );\n    setZ( tmp&0xFF );\n    setC( tmp&0x100 );\n\n    addr_space_write(oper, tmp&0xFF);\n}\nfunction ASLA() {\n    tmp = (A<<1);\n\n    setN( tmp&0x80 );\n    setZ( tmp&0xFF );\n    setC( tmp&0x100 );\n\n    A = tmp&0xFF;\n}\nfunction BCC() {\n    if(!C)\n        branch(oper);\n}\nfunction BCS() {\n    if(C) {\n        branch(oper);\n    }\n}\nfunction BEQ() {\n    if(Z)\n        branch(oper);\n}\nfunction BIT() {\n    setN( M&0x80 );\n    setV( M&0x40 );\n    setZ( A&M );\n}\n\nfunction BMI() {\n    if(N)\n        branch(oper);\n}\nfunction BNE() {\n    if(!Z)\n        branch(oper);\n}\nfunction BPL() {\n    if(!N)\n        branch(oper);\n}\nfunction BRK() {\n    push16(PC+1);\n    push(getP());        \n    setI(true);\n    PC = (addr_space.read(0xfffe) + (addr_space.read(0xffff)<<8));\n}\nfunction BVC()  {\n    if(!V)\n        branch(oper);\n}\nfunction BVS() {\n    if(V)\n        branch(oper);\n}\nfunction CLC() {\n    C = false;\n}\nfunction CLD() {\n    D = false;\n}\nfunction CLI() {\n    I = false;\n}\nfunction CLV() {    \n    V = false;\n}\nfunction CMP() {\n    tmp = A - M;\n\n    setN( tmp&0x80 );\n    setZ( tmp&0xFF );\n    setC( A >= M );\n}\nfunction CPX() {\n    tmp = X - M;\n\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n    setC(X >= M);\n}\nfunction CPY() {\n    tmp = Y - M;\n\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n    setC( Y >= M );\n}\nfunction DEC() {\n\n    tmp = addr_space.read(oper) - 1;\n\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n\n    addr_space_write(oper, tmp&0xFF);\n\n}\nfunction DEX() {\n    tmp = X - 1;\n\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n\n    X = tmp&0xFF;\n}\nfunction DEY() {\n    tmp = Y - 1;\n\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n\n    Y = tmp&0xFF;\n}\nfunction EOR() {\n    tmp = A ^ M;\n\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n\n    A = tmp;\n\n}\nfunction INC() {\n    tmp = M + 1;\n\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n\n    addr_space_write(oper, tmp&0xFF);\n}\nfunction INX() {\n    tmp = X + 1;\n\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n\n    X = tmp&0xFF;\n}\nfunction INY() {\n    tmp = Y + 1;\n\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n\n    Y = tmp&0xFF;\n}\nfunction JMP() {\n    PC = oper;\n}\nfunction JSR() {\n    push16(PC-1); icycles++;\n    PC = oper;\n}\nfunction LDA() {\n    tmp = M;\n\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n\n    A = tmp;\n}\nfunction LDX() {\n    tmp = M;\n\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n\n    X = tmp;\n}\nfunction LDY() {\n    tmp = M;\n\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n\n    Y = tmp;\n}\nfunction LSRA() {\n\n    setC(M&1);\n    tmp = (M>>1)\n    \n    setZ(tmp&0xFF);\n    setN(tmp&0x80);\n\n    A = (tmp&0xff);\n\n}\nfunction LSR() {\n\n    setC(M&1);\n    tmp = (M>>1)\n\n    setZ(tmp&0xFF);\n    setN(tmp&0x80);\n\n    addr_space_write(oper, tmp&0xFF);\n}\nfunction NOP() {\n}\nfunction ORA() {\n    tmp = A | M;\n\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n\n    A = tmp;\n}\nfunction PHA() {\n    push(A);\n}\nfunction PHP() {\n\n    push(getP()|(1<<4)); // PHP set the virtual B flag\n}\nfunction PLA() {\n    tmp = A = pull();\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n\n}\nfunction PLP() {\n    var SR = pull();\n    tmp = SR;;\n    setSR(SR);            \n}\nfunction ROLA() {\n    var M7 = !!(0x80&M);\n\n    tmp = (M << 1);\n    tmp |= (C?1:0);\n\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n    setC(M7);\n\n    A = tmp&0xFF;\n}\nfunction ROL() {\n    var M7 = !!(0x80&M);\n\n    tmp = (M << 1);\n    tmp |= (C?1:0);\n\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n    setC(M7);\n\n    addr_space_write(oper, tmp&0xFF);\n}\nfunction RORA() {\n\n    var M1 = !!(M&1);\n    tmp = M>>1;\n    tmp |= (C?0x80:0);\n    setN(tmp&0x80);\n    setC(M1);\n\n    A = tmp&0xFF;\n\n}\nfunction RTI() {\n    var SR = pull();\n    setSR(SR);\n    PC = pull16();\n}\nfunction RTS() {\n    PC = pull16()+1;\n}\nfunction SBC() {\n    if(opcode == 0xEB) opStr = \"*SBC\";\n\n    tmp = A - M - (!C);           // sbc cary is revert\n\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n    setC(!(tmp&0x100));             // BLOG sbc carry is revert\n    setV(((A^M))&(A^tmp)&0x80); // sbc A^M not negate\n\n    A = tmp&0xFF;\n}\nfunction SEC() {\n    setC(true);\n}\nfunction SED() {\n    setD(true);\n}\nfunction SEI() {\n    setI(true);\n}\nfunction STA() {\n    addr_space_write(oper, A);\n}\nfunction STX() {\n    addr_space_write(oper, X);\n}\nfunction STY() {\n    addr_space_write(oper, Y);\n}\nfunction TAX() {\n    tmp = A;\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n    X = tmp;\n}\nfunction TAY() {\n    tmp = A;\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n    Y = tmp;\n}\nfunction TSX() {\n    tmp = SP;\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n    X = tmp&0xff;\n}\nfunction TXA() {\n    var tmp = X;\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n    A = tmp;\n}\nfunction TXS() {\n    tmp = X;\n    // do not change flags ??\n    // N = !!(tmp&0x80);\n    // Z = !(tmp&0xFF);\n    SP = tmp&0xff;\n}\nfunction TYA() {\n    tmp = Y;\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n    A = tmp;\n}\nfunction SLO() {\n\n    var tmp = M<<1;\n    addr_space_write(oper, tmp);\n\n    tmp = A | tmp;\n    setZ(tmp&0xFF);\n    setN(tmp&0x80);\n    setC(tmp&0x100);\n\n    A = tmp&0xFF;\n\n}\nfunction SAX() {\n    R = A & X;\n\n    //setZ(R&0xFF);\n    //setN(R&0x80);\n\n    addr_space_write(oper, R);\n}\nfunction DCP() {\n\n    tmp = M - 1;\n\n    addr_space_write(oper, tmp&0xFF);\n\n    tmp = A - tmp;\n\n    setN( tmp&0x80 );\n    setZ( tmp&0xFF );\n    setC( A >= M );\n\n}\nfunction ISB() {\n\n    // INC\n    M = (M + 1)&0xFF;\n    addr_space_write(oper, M);\n\n    // SBC\n    tmp = A - addr_space.read(oper) - (!C);           // sbc cary is revert\n\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n    setC(!(tmp&0x100));             // BLOG sbc carry is revert\n    setV(((A^M))&(A^tmp)&0x80); // sbc A^M not negate\n\n    A = tmp&0xFF;\n\n}\nfunction RLA() {\n    var tmp = M<<1;\n    tmp |= C?1:0;\n    addr_space_write(oper, tmp);\n\n    setC(tmp&0x100);\n\n    tmp = A & tmp;\n    setZ(tmp&0xFF);\n    setN(tmp&0x80);\n\n    A = tmp&0xFF;\n\n}\nfunction RRA() {\n    ROR();\n    ADC();\n}\nfunction SRE() {\n\n    setC(M&1);\n    tmp = (M>>1);\n    setN(tmp&0x80);\n    setZ(tmp&0xFF);\n    addr_space_write(oper, tmp);\n\n    tmp = A ^ tmp;\n\n    setZ(tmp&0xFF);\n    setN(tmp&0x80);\n\n    A = tmp&0xFF;\n}\n\nfunction LAX() {\n    A = M;\n    X = M;\n    setZ(A);\n    setN(A&0x80);\n}\n\nvar regStr;\nvar debugging = false;\n\nvar opcodes = [\n// HI                                                                                       LO\n//         00          01          02        03        04          05          06          07        08        09          0A        0B        0C          0D          0E          0F        \n/* 00 */  BRK, IMP,   ORA, X_IND, UOP, UAM, UOP, UAM, UOP, UAM  , ORA, ZPG  , ASL, ZPG  , UOP, UAM, PHP, IMP, ORA, IMM  , ASLA, ACC, UOP, UAM, UOP, UAM  , ORA, ABS  , ASL, ABS  , UOP, UAM, \n/* 10 */  BPL, REL,   ORA, IND_Y, UOP, UAM, UOP, UAM, UOP, UAM  , ORA, ZPG_X, ASL, ZPG_X, UOP, UAM, CLC, IMP, ORA, ABS_Y, UOP,  UAM, UOP, UAM, UOP, UAM  , ORA, ABS_X, ASL, ABS_X, UOP, UAM, \n/* 20 */  JSR, ABS_J, AND, X_IND, UOP, UAM, UOP, UAM, BIT, ZPG  , AND, ZPG  , ROL, ZPG  , UOP, UAM, PLP, IMP, AND, IMM  , ROLA, ACC, UOP, UAM, BIT, ABS  , AND, ABS  , ROL, ABS  , UOP, UAM, \n/* 30 */  BMI, REL,   AND, IND_Y, UOP, UAM, UOP, UAM, UOP, UAM  , AND, ZPG_X, ROL, ZPG_X, UOP, UAM, SEC, IMP, AND, ABS_Y, UOP,  UAM, UOP, UAM, UOP, UAM  , AND, ABS_X, ROL, ABS_X, UOP, UAM, \n/* 40 */  RTI, IMP,   EOR, X_IND, UOP, UAM, UOP, UAM, UOP, UAM  , EOR, ZPG  , LSR, ZPG  , UOP, UAM, PHA, IMP, EOR, IMM  , LSRA, ACC, UOP, UAM, JMP, ABS_J, EOR, ABS  , LSR, ABS  , UOP, UAM, \n/* 50 */  BVC, REL,   EOR, IND_Y, UOP, UAM, UOP, UAM, UOP, UAM  , EOR, ZPG_X, LSR, ZPG_X, UOP, UAM, CLI, IMP, EOR, ABS_Y, UOP,  UAM, UOP, UAM, UOP, UAM  , EOR, ABS_X, LSR, ABS_X, UOP, UAM, \n/* 60 */  RTS, IMP,   ADC, X_IND, UOP, UAM, UOP, UAM, UOP, UAM  , ADC, ZPG  , ROR, ZPG  , UOP, UAM, PLA, IMP, ADC, IMM  , RORA, ACC, UOP, UAM, JMP, IND  , ADC, ABS  , ROR, ABS  , UOP, UAM, \n/* 70 */  BVS, REL,   ADC, IND_Y, UOP, UAM, UOP, UAM, UOP, UAM  , ADC, ZPG_X, ROR, ZPG_X, UOP, UAM, SEI, IMP, ADC, ABS_Y, UOP,  UAM, UOP, UAM, UOP, UAM  , ADC, ABS_X, ROR, ABS_X, UOP, UAM, \n/* 80 */  UOP, UAM,   STA, X_IND, UOP, UAM, UOP, UAM, STY, ZPG  , STA, ZPG  , STX, ZPG  , UOP, UAM, DEY, IMP, UOP, UAM  , TXA,  IMP, UOP, UAM, STY, ABS  , STA, ABS  , STX, ABS  , UOP, UAM, \n/* 90 */  BCC, REL,   STA, IND_Y, UOP, UAM, UOP, UAM, STY, ZPG_X, STA, ZPG_X, STX, ZPG_Y, UOP, UAM, TYA, IMP, STA, ABS_Y, TXS,  IMP, UOP, UAM, UOP, UAM  , STA, ABS_X, UOP, UAM  , UOP, UAM, \n/* A0 */  LDY, IMM,   LDA, X_IND, LDX, IMM, UOP, UAM, LDY, ZPG  , LDA, ZPG  , LDX, ZPG  , UOP, UAM, TAY, IMP, LDA, IMM  , TAX,  IMP, UOP, UAM, LDY, ABS  , LDA, ABS  , LDX, ABS  , UOP, UAM, \n/* B0 */  BCS, REL,   LDA, IND_Y, UOP, UAM, UOP, UAM, LDY, ZPG_X, LDA, ZPG_X, LDX, ZPG_Y, UOP, UAM, CLV, IMP, LDA, ABS_Y, TSX,  IMP, UOP, UAM, LDY, ABS_X, LDA, ABS_X, LDX, ABS_Y, UOP, UAM, \n/* C0 */  CPY, IMM,   CMP, X_IND, UOP, UAM, UOP, UAM, CPY, ZPG  , CMP, ZPG  , DEC, ZPG  , UOP, UAM, INY, IMP, CMP, IMM  , DEX,  IMP, UOP, UAM, CPY, ABS  , CMP, ABS  , DEC, ABS  , UOP, UAM, \n/* D0 */  BNE, REL,   CMP, IND_Y, UOP, UAM, UOP, UAM, UOP, UAM  , CMP, ZPG_X, DEC, ZPG_X, UOP, UAM, CLD, IMP, CMP, ABS_Y, UOP,  UAM, UOP, UAM, UOP, UAM  , CMP, ABS_X, DEC, ABS_X, UOP, UAM, \n/* E0 */  CPX, IMM,   SBC, X_IND, UOP, UAM, UOP, UAM, CPX, ZPG  , SBC, ZPG  , INC, ZPG  , UOP, UAM, INX, IMP, SBC, IMM  , NOP,  IMP, UOP, UAM, CPX, ABS  , SBC, ABS  , INC, ABS  , UOP, UAM, \n/* F0 */  BEQ, REL,   SBC, IND_Y, UOP, UAM, UOP, UAM, UOP, UAM  , SBC, ZPG_X, INC, ZPG_X, UOP, UAM, SED, IMP, SBC, ABS_Y, UOP,  UAM, UOP, UAM, UOP, UAM  , SBC, ABS_X, INC, ABS_X, UOP, UAM\n];\n\nfunction getStatusStr() {\n    regStr =\"A:\"+hex(A)+\" \";\n    regStr+=\"X:\"+hex(X)+\" \";\n    regStr+=\"Y:\"+hex(Y)+\" \";\n    regStr+=\"P:\"+hex(getP())+\" \";\n    regStr+=\"SP:\"+hex(SP)+\" \"\n    regStr+=(C?\"C\":\"-\");\n    regStr+=(Z?\"Z\":\"-\");\n    regStr+=(I?\"I\":\"-\");\n    regStr+=(D?\"D\":\"-\");\n    regStr+=(B?\"B\":\"-\");\n    regStr+=(V?\"V\":\"-\");\n    regStr+=(N?\"N\":\"-\");\n\n    return hex(PC,4) + \" \" + regStr;\n}\n\nfunction step() {\n    icycles = 1;\n    // read and execute\n    var opcode = this.fetch();\n    var ins     = opcodes[opcode*2+0];\n    var addmode = opcodes[opcode*2+1];\n    addmode();\n    ins();\n\n    PC &= 0xFFFF;\n\n    cpu.icycles = icycles;\n}\n\nfunction reset() {\n    // simulate reset\n    PC = addr_space.read(0xfffc)+(addr_space.read(0xfffd)<<8);\n    push16(PC);\n    push(getP());\n}\n\nfunction irq() {\n    if(I)\n        return;\n    // IRQ\n    push16(PC);\n    push(getP());\n    PC = addr_space.read(0xFFFE) + (addr_space.read(0xFFFF)<<8);\n}\n\nfunction fetch() {\n    var tmp = addr_space_read(PC);\n    if(logInstruction)\n        str += hex(tmp) + \" \";\n    PC++;\n    return tmp;\n}\n\nvar cpu = {\n    fetch: fetch,\n    step: step,\n    reset: reset,\n    irq: irq\n}\n\nmodule.exports = function(bus) {\n    addr_space = bus.addr_space;\n    memory = bus.memory;\n    reset();\n    return cpu;\n};\n\n\n//# sourceURL=webpack:///./src/p6502.js?");

/***/ }),

/***/ "./src/p6522.js":
/*!**********************!*\
  !*** ./src/p6522.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n//\n// VIA 6522\n//\nvar VIA = {\n    ira: 0,\n    ier: 0,\n    ifr: 0,\n    ddrb: 0,\n    ddra: 0,\n    acr: 0,\n    pcr: 0,\n    orb: 0,\n    porta: 0,\n    portb: 0,\n    write: function(addr, value) {\n        value = value&0xff;\n        switch(addr) {\n            case 0:\n                // port b (in/out)\n                this.orb = value;\n                this.portb = (this.orb & this.ddrb) | (this.portb & ((~this.ddrb)&0xff));\n                if( (this.pcr&0xe0 == 0x20) ||\n                    (this.pcr&0xe0 == 0x60) ) {\n                    this.ifr &= 0xef;\n                } else {\n                    this.ifr &= 0xe7;\n                }\n\n                break;\n            case 1:\n                // port a (in/out)\n                // port a directly address columns of keyboard grid (3 lowest bits )\n                this.ora = value;\n                this.porta = (this.ora & this.ddra) | (this.porta & ((~this.ddra)&0xff));\n                if( (this.pcr & 0x0e) == 0x02 || (this.pcr & 0x0e) == 0x06 )\n                    this.ifr &= 0xfd;\n                else\n                    this.ifr &= 0xfc;\n                this.idr |= 0x0e;\n\n                break;\n            case 2:\n                // define port b input / output. output if set. each bit count\n                this.ddrb = value;\n                break;\n            case 3:\n                // define port a input / output. output if set. each bit count\n                this.ddra = value;\n                break;\n            case 12:\n                // peripheral control register\n                this.pcr = value;\n                if(this.pcr == 1)\n                    this.ifr |= 2;\n                if((this.pcr & 0x0e) == 0x04)\n                    this.ifr |= 1;\n                if(this.pcr & 0x10)\n                    this.ifr |= 0x10;\n                if((this.pcr & 0xe0) == 0x40)\n                    this.ifr |= 0x08;\n                break;\n            case 13:\n                // interrupt flag register\n                this.ifr&=~value;\n                break;\n            case 14:\n                // interrupt enable register\n                if(value & 0x80) {\n                    this.ier |= value;\n                } else {\n                    this.ier &= ((~value)&0xff);\n                }\n                this.ier &= 0x7f;\n                break;\n            case 15:\n                // the column to write of 8912 is written here\n                \n                // direct porta read / write\n                this.ora = value;\n                this.porta = (this.ora & this.ddra) | (this.porta & ((~this.ddra)&0xff));\n                break;\n        }\n    },\n    read: function(addr, value) {\n        switch(addr) {\n            case 0:\n                if((this.pcr & 0xe0) == 0x020 || (this.pcr & 0xe0) == 0x60) {\n                    this.ifr &= 0xef;\n                } else {\n                    this.ifr &= 0xe7;\n                }\n\n                var r = this.orb & this.ddrb;\n  \n                if(this.acr & 0x02) {\n                    r |= this.irb & ((~this.ddrb)&0xff);\n                } else {\n                    r |= this.portb & ((~this.ddrb)&0xff);\n                }\n\n                return r;\n            case 1:\n                if((this.pcr & 0x0e) == 0x2 ||\n                   (this.pcr & 0x0e == 0x6))\n                    this.ifr &= 0xfd;\n                else\n                    this.ifr &= 0xfc;\n\n                if(this.acr == 1) {\n                    return this.ira;\n                } else {\n                    return this.porta;\n                }\n            case 2:\n                return this.ddrb;\n            case 1:\n                return this.ddra;\n            case 12:\n                return this.pcr;\n//            case 13:\n//                return this.ifr | 0x80;\n            case 14:\n                return this.ier | 0x80;\n            case 15:\n                if(this.acr & 1) {\n                    return this.ira;\n                } else {\n                    return this.porta;\n                }\n        }\n        return 0xff;\n    },\n    step: function(oric) {\n        if( oric.keyboard.getKeyState(this.portb&7, oric.p8912.registers[0xE]) ) {\n            this.portb |= 0x8;\n        } else {\n            this.portb &= ~0x8;\n        }\n\n    }\n};\n\nmodule.exports = VIA; \n\n\n//# sourceURL=webpack:///./src/p6522.js?");

/***/ }),

/***/ "./src/p8912.js":
/*!**********************!*\
  !*** ./src/p8912.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var p8912 = {\n    registers:[],\n    step: function(oric) {\n        var VIA = oric.VIA;\n        // should test only flags CA2 and CB2\n        if(VIA.pcr == 0xFF) {\n            this.address = VIA.porta;\n        }\n\n        if(VIA.pcr == 0xFD) {\n            this.registers[p8912.address] = VIA.porta;\n        }\n\n    }\n};\np8912.registers.fill(0,0,0xF);\n\nmodule.exports = p8912;\n\n\n\n//# sourceURL=webpack:///./src/p8912.js?");

/***/ }),

/***/ "./src/screen.js":
/*!***********************!*\
  !*** ./src/screen.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\nvar Screen = function() {\n    var canvas = document.getElementById(\"canvas\");\n    var ctx = canvas.getContext(\"2d\");\n\n    var imageData = ctx.createImageData(240,200);\n    var d = imageData.data;\n\n    var screen = {\n        'vsync': function() {\n            this.rebuildCanvas = !this.rebuildCanvas;\n            canvas.style.backgroundColor = this.rebuildCanvas?1:0.999;\n        },\n       'rasterline': function(line, memory) {\n            var textLine = Math.floor(line/8);\n            var charLine = line%8;\n\n            for(var col=0;col<40;col++) {\n\n                // read char\n                var ch = memory[0xbb80+textLine*40+col];\n                var reverse = false;\n                if(ch > 127) {\n                    ch-=128;\n                    ch&=0xff;\n                    reverse=true;\n                }\n\n                // read character byte\n                var r = memory[0xb400 + ch*8 + charLine];        \n\n                for(var c=0;c<6;c++) {\n                    var b = (reverse!=(r&040)==0) * 255;\n                    r = r<<1;\n\n                    var i = 4 * (col*6 + c + line*240);\n\n                    d[i  ] = b;\n                    d[i+1] = b;\n                    d[i+2] = b;\n                    d[i+3] = 255;\n                }\n            }\n\n            ctx.putImageData(imageData, 0, 0);\n        }\n    }\n    return screen;\n}\n\nmodule.exports = Screen;\n\n\n//# sourceURL=webpack:///./src/screen.js?");

/***/ })

/******/ });